!function(e){"function"==typeof define&&define.amd?define(["underscore","blockly-bq","blockly.blocks"],e):e(_,window.Blockly,window.Blocks)}(function(_,Blockly,Blocks){var load=function(options){RoboBlocks.locales={defaultLanguage:{},languages:[]},RoboBlocks.locales.getLang=function(){return this.defaultLanguage.lngCode},RoboBlocks.locales.getKey=function(e){return this.defaultLanguage[e]},RoboBlocks.locales.setDefaultLang=function(e){for(var o in this.languages)this.languages[o].langCode===e&&(this.defaultLanguage=this.languages[o].values,this.defaultLanguage.lngCode=e)},RoboBlocks.locales.add=function(e,o){if(!e)return this.defaultLanguage;if(e&&!o&&!this.languages[e])throw new Error("Unknown language : "+e);return!o&&this.languages[e]||this.languages.push({langCode:e,values:o}),this},RoboBlocks.locales.initialize=function(){var e=options.lang||window.roboblocksLanguage||"en-GB";return this.setDefaultLang(e),this},function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicar",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"element",LANG_RESERVED_WORDS:"Paraula reservada: aquest nom no està permès.",LANG_CATEGORY_LOGIC:"Lògica",LANG_LOGIC_OPERATION_AND:"i",LANG_LOGIC_OPERATION_OR:"o",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implica",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Compara si les dues entrades són iguals.",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Compara si les dues entrades no són iguals entre si.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Compara si la primera entrada és menor que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Compara si la primera entrada és menor o igual que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Compara si la primera entrada és més gran que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Compara si la primera entrada és més gran o igual que la segona entrada.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Compara si les dues entrades són verdaderes.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Compara si alguna de les entrades són verdaderes.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Compara si les entrades són diferents.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Compara si les entrades són iguals.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"Si... aleshores...",LANG_LOGIC_NEGATE_INPUT_NOT:"no",LANG_LOGIC_NEGATE_TOOLTIP:"Retorna el contrari de l'entrada.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"verdader",LANG_LOGIC_BOOLEAN_FALSE:"fals",LANG_LOGIC_BOOLEAN_TOOLTIP:"Retorna verdader o fals en funció del que hem seleccionat.",LANG_CATEGORY_COMMUNICATION:"Comunicació",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth: rebre ",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Retorna les dades rebudes pel mòdul Bluetooth",LANG_BQ_BLUETOOTH_SEND:"Bluetooth: Enviar",LANG_BQ_BLUETOOTH_SEND_SEND:"Enviar dades",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Envia dades pel mòdul Bluetooth",LANG_BQ_BLUETOOTH_DEF:"Bluetooth",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Taxa de bauds",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Nom",LANG_BQ_BLUETOOTH_DEF_PINCODE:"Codi Pin",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Recibir",LANG_BQ_BLUETOOTH_DEF_SEND:"Rebre",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Configuració del mòdul Bluetooth",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth: Port Sèrie Disponible",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Comprova si hi ha dades disponbibles pel mòdul Bluetooth",LANG_ADVANCED_SERIAL_AVAILABLE:"Port Sèrie Disponible",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Comprova si el port sèrie està disponible o no",LANG_ADVANCED_SERIAL_PARSEINT:"Serial Read Integer",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"Primer vàlid sencer (llarg) de la cadena de texte del port sèrie",LANG_ADVANCED_SERIAL_PRINT:"Imprimir per port sèrie",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Imprimeix les dades com text ASCII.",LANG_ADVANCED_SERIAL_PRINTLN:"Imprimir per port sèrie amb salt de línia",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Imprimeix les dades com text ASCII i amb retorn de carro (RC).",LANG_ADVANCED_SERIAL_READ:"Llegir des del port sèrie",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Llegeix les dades que es reben pel port sèrie com bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Llegir text des del port sèrie",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Llegeix les dades que es reben pel port sèrie com a text ASCII.",LANG_ADVANCED_SERIAL_SPECIAL:"Caràcters especials",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tabulador",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Retorn de carro",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Salt de línia",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Cometa",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Cometa doble",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Escriu caràcters especials.",LANG_ADVANCED_SERIAL_TIMEOUT:"Estableix temps d'espera [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Estableix el temps d'espera pera a la recepció de caràcters pel port sèrie.",LANG_BQ_BAT:"BAT - Sensor d'Ultrasons",LANG_BQ_BAT_RED_PIN:"Eco",LANG_BQ_BAT_BLUE_PIN:"Dispar",LANG_BQ_BAT_TOOLTIP:"Retorna la distància mesurada pel sensor d'ultrasò.",LANG_BQ_BUTTON:"Botó",LANG_BQ_BUTTON_PIN:"PIN#",LANG_BQ_BUTTON_TOOLTIP:"Botó",LANG_BUTTON_PRESSED:"Polsat",LANG_BUTTON_NOT_PRESSED:"No polsat",LANG_BQ_INFRARED:"Sensor infraroig",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Retorna el valor digital mesurat pel sensor infraroig",LANG_BQ_JOYSTICK_DIR:"Direcció joystick",LANG_BQ_JOYSTICK_MAG:"Magnitud joystick",LANG_BQ_JOYSTICK_PIN_X:"Eix X Pin",LANG_BQ_JOYSTICK_PIN_Y:"Eix Y Pin",LANG_BQ_JOYSTICK_POSITION:"Posició Joystick",LANG_BQ_JOYSTICK_PIN_BUTTON:"Polsador Pin",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"Encendre",LANG_BQ_LED_OFF:"Apagar",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Sensor de Llum",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Retorna el valor analògic mesurat per la fotorresistencia.",LANG_BQ_PIEZO_BUZZER:"Brunzidor",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"To",LANG_BQ_PIEZO_BUZZER_DO:"Do",LANG_BQ_PIEZO_BUZZER_RE:"Re",LANG_BQ_PIEZO_BUZZER_MI:"Mi",LANG_BQ_PIEZO_BUZZER_FA:"Fa",LANG_BQ_PIEZO_BUZZER_SOL:"Sol",LANG_BQ_PIEZO_BUZZER_LA:"La",LANG_BQ_PIEZO_BUZZER_SI:"Si",LANG_BQ_PIEZO_BUZZER_DURATION:"Durada",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Brunzidor Piezoelèctric",LANG_BQ_PIEZO_BUZZERAV:"Brunzidor avançat",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"To",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Durada",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Brunzidor avançat",LANG_BQ_POTENTIOMETER:"Potenciòmetre",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Retorna el valor analògic mesurat pel potenciòmetre",LANG_CATEGORY_SCREEN:"Pantalla",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"LCD Pins",LANG_LCD_DEF_TOOLTIP:"Defineix el LCD",LANG_LCD_ADVANCED_DEF:"Advanced LCD",LANG_LCD_ADVANCED_ROWS:"Rows",LANG_LCD_ADVANCED_COLUMNS:"Columns",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Block that defines the advanced LCD",LANG_LCD_SETBACKLIGHT:"LCD: ajustar la retroiluminació",LANG_LCD_SETBACKLIGHT_CLOSE:"",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Ajusta la retroiluminació de la pantalla LCD",LANG_LCD_PRINT:"LCD: Imprimir ",LANG_LCD_PRINT_POSITION:"Fixar posició del text?",LANG_LCD_PRINT_TOOLTIP:"Imprimeix un string a la pantalla LCD en la posició especificada o en la següent disponible.",LANG_LCD_CLEAR:"Esborrar LCD",LANG_LCD_CLEAR_TOOLTIP:"Neteja la pantalla LCD",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Esperar (ms)",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Espera el temps especificat en mil·lisegons (ms).",LANG_CONTROLS_BASE_MILLIS:"Temps des de l'inici (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Nombre de milisegons des de que el programa ha començat (sencer llarg)",LANG_CONTROLS_BASE_US:"Temps des de l'inici (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Nombre de microsegons des de que el programa ha començat (sencer llarg)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Fer",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"mentres",LANG_CONTROLS_DOWHILE_TOOLTIP:"Mentre la condició siga certa, continua fent les instruccions de dins del bloq.",LANG_CONTROLS_EXECUTE:"Executa codi d'Arduino",LANG_CONTROLS_EXECUTE_TOOLTIP:"Executa codi d'Arduino (texte). Utilitzar amb precaució, por trencar fàcilment el provocar errors de compilació del programa.",LANG_CONTROLS_IF_TOOLTIP_1:"Si la condició és verdadera, executa les accions dins del bloc.",LANG_CONTROLS_IF_TOOLTIP_2:"Si la condició és verdadera, s'executa el primer bloc d'ordres. Si no ho és, s'executa el segon bloc d'ordres.",LANG_CONTROLS_IF_TOOLTIP_3:"Si el primer valor és verdader, s'executa el primer bloc d'ordres. Sinó, si el segon valor és verdader, s'executa el segon bloc d'ordres.",LANG_CONTROLS_IF_TOOLTIP_4:"Si el primer valor és verdader, s'executa el primer bloc d'ordres. Sinó, si el segon valor és verdader, s'executa el segon bloc d'ordres. Si cap dels valors és verdader, s'executa l'últim bloc d'ordres",LANG_CONTROLS_IF_MSG_IF:"si",LANG_CONTROLS_IF_MSG_ELSEIF:"en canvi, si",LANG_CONTROLS_IF_MSG_ELSE:"en cas contrari",LANG_CONTROLS_IF_MSG_THEN:"executar",LANG_CONTROLS_IF_IF_Field_IF:"si",LANG_CONTROLS_IF_IF_TOOLTIP:'Afegir, eliminar o reordenar seccions per reconfigurar aquest bloc "si".',LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"en canvi, si",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:'Afegeix a condició del bloc "si".',LANG_CONTROLS_IF_ELSE_Field_ELSE:"en cas contrari",LANG_CONTROLS_IF_ELSE_TOOLTIP:'Afegeix una condició final al bloc "si" per a capturar la resta d\'opcions.',LANG_CONTROLS_FOR_FROM_WARNING:"It is not possible to set a variable as the initial value of the for block.",LANG_CONTROLS_FOR_TO_WARNING:"It is not possible to set a variable as the final value of the for block.",LANG_CONTROLS_FOR_INPUT_WITH:"comptar amb",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"des de",LANG_CONTROLS_FOR_INPUT_TO:"fins",LANG_CONTROLS_FOR_INPUT_DO:"executar",LANG_CONTROLS_FOR_TOOLTIP:"Comptar des d'un nombre d'inici fins un de final. Cada vegada que s'incrementa en un el compte, la variable pren aquest valor i s'executen les accions.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"mentre",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"fins",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"Mentre la condició sigui verdadera, executar les instruccions.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"Mentre la condició sigui falsa, executar les instruccions.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repetir",LANG_CONTROLS_REPEAT_TITLE_TIMES:"vegades",LANG_CONTROLS_REPEAT_INPUT_DO:"executar",LANG_CONTROLS_REPEAT_TOOLTIP:"Executar les instruccions un nombre concret de vegades.",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"el bucle",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"interrompre",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continuar amb la següent iteració",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Interrompre el bucle que conté aquesta instrucció.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Saltar-se la resta d'accions d'aquesta iteració i continuar amb la següent iteració.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Atenció: Aquest bloc només pot ser usat dins d'un bucle.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Inici",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Blucle",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Els blocs en l'Inici s'executaràn seqüencialment al començar el programa (una vegada cada instrucció). Els blocs en el Bluce s'executaràn de forma seqüencial repetidament.",LANG_CONTROLS_SWITCH:"si ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Executa les accions del cas que es compleixi.",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Executa les accions del cas que es compleixi.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Executa les accions del cas que es compleixi",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Executa les accions del cas que es compleixi",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"Aquest bloc compara d'un en un si es compleixen els diferents casos.",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"cas ",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:"El bloc \"default\" especifica l'acció que es va a executar si no s'han complert cap dels casos anteriors.",LANG_CONTROLS_SWITCH_IS:"és: ",LANG_CONTROLS_SWITCH_CASE:"cas ",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"en un altre cas",LANG_CONTROLS_SWITCH_DO:"executar",LANG_CATEGORY_MATH:"Matemàtiques",LANG_MATH_ADVANCED_MAP_MAP:"Mapejar ",LANG_MATH_ADVANCED_MAP_FROM:"De [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"a [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Mapeja l'entrada des d'un rang de valors inicials a un altre rang diferent.",LANG_MATH_NUMBER_TOOLTIP:"Nombre sencer",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Vector de tres enters",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Retorna el valor d'un element concret del vector.",LANG_MATH_MODULO_TOOLTIP:"Retorna la resta de la divisió de les dues entrades.",LANG_MATH_BASE_MAP:"Mapejar ",LANG_MATH_BASE_MAP_VALUE_TO:"Valor entre [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Mapeja l'entrada des del rang [0-1023] a un altre rang de valors.",LANG_MATH_SINGLE_OP_ROOT:"arrel quadrada",LANG_MATH_SINGLE_OP_ABSOLUTE:"valor absolut",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Retorna l'arrel quadrada d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Retorna el valor absolut d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Retorna el nombre canviat de signe.",LANG_MATH_SINGLE_TOOLTIP_LN:"Retorna el logaritme neperià d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Retorna el logaritme en base 10 d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Retorna el exponencial d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Retorna 10 elevat a una potència.",LANG_MATH_COLOR_TOOLTIP:"Retorna un color",LANG_CATEGORY_TEXT:"Text",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"Una lletra, una paraula o una línia de text.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"crear text amb",LANG_TEXT_JOIN_TOOLTIP:"Crea text ajuntant qualsevol nombre d'elements.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"unir",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Afegir, eliminar o reordenar seccions per a reconfigurar aquest bloc de text.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"element",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Afegir un element al text.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"unir",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"element",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"a",LANG_TEXT_APPEND_APPENDTEXT:"afegir-hi text",LANG_TEXT_APPEND_VARIABLE:"element",LANG_TEXT_APPEND_TOOLTIP:"Afegir text a la variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"longitud",LANG_TEXT_LENGTH_TOOLTIP:"Retorna el nombre de lletres (incloent-hi els espais) en el text introduït.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Compara si els dos textos introduïts són iguals, independentment que tinguin lletres majúscules o minúscules.",LANG_TEXT_SUBSTRING:"Retallar ",LANG_TEXT_SUBSTRING_FROM:"des de",LANG_TEXT_SUBSTRING_TO:"fins",LANG_TEXT_SUBSTRING_TOOLTIP:"Retalla els caràcters del text introduït que es trobin entre els dos índexs i crea amb ells un nou text.",LANG_TEXT_SEARCH:"Cercar",LANG_TEXT_IN:"en",LANG_TEXT_FIRST:"Primera instància",LANG_TEXT_LAST:"Última instància",LANG_TEXT_CONTAINS:"Conté",LANG_TEXT_EXPRESSION:"expressió",LANG_TEXT_SEARCH_TOOLTIP:"Comprova si una cadena de texte apareix en una altra. Retorna la posició del primer/últim caracter trobat.",LANG_TEXT_CONTAINS_TOOLTIP:"Comprova si una cadena de texte conté una expressió. Retorna verdader o fals.",LANG_TEXT_CAST:"A texte",LANG_CATEGORY_ADVANCED:"I/O bàsica",LANG_ADVANCED_CONVERSION_CONVERT:"Convertir",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binari",LANG_ADVANCED_CONVERSION_VALUE:"valor",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convertir la base d'un nombre.",LANG_ADVANCED_INOUT_ANALOG_READ:"Llegir el pin analògic PIN",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Llegeix el valor d'un pin analògic específic.",LANG_ADVANCED_INOUT_ANALOG_WRITE:"Escriure en el pin analògic PIN",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"valor",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Escriu un valor entre 0 i 255 en un PIN analògic específic.",LANG_ADVANCED_BUILTIN_LED:"LED a la placa",LANG_ADVANCED_BUILTIN_LED_STATE:"estat",LANG_ADVANCED_BUILTIN_LED_ON:"Encès",LANG_ADVANCED_BUILTIN_LED_OFF:"Apagat",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Conmutar",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"LED integrat a la placa que està internament connectat al PIN 13.",LANG_ADVANCED_INOUT_DIGITAL_READ:"Llegir el pin digital PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Llegeix el valor des d'un pin digital específic.",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"Escriure en el pin digital",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"estat",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"Alt",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"Baix",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Escriu un valor al pin digital específic.",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Estableix mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Eixida",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Entrada",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Entrada Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Estableix el mode d'un pin digital",LANG_ADVANCED_HIGHLOW_HIGH:"Alt",LANG_ADVANCED_HIGHLOW_LOW:"Baix",LANG_ADVANCED_HIGHLOW_TOOLTIP:'Escriu "Alt" o "Baix" en funció del seleccionat.',LANG_ADVANCED_MATH_RANDOM:"Aleatori entre",LANG_ADVANCED_MATH_RANDOM_AND:" I ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Crea un nombre aleatori entre els dos límits introduïts.",LANG_ADVANCED_MATH_CAST:"A nombre",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Converteix un nombre",LANG_ADVANCED_MATH_SINUSOID:"Sinusoïdal",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitud",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Freqüència",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Fase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Valor mig",LANG_ADVANCED_MATH_SINUSOID_TIME:"Temps",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Genera una ona sinusoïdal. Amplitud: Amplitud de l'ona; Freqüència: Freqüència en Hz de l'ona; Fase: Angle en radians de l'ona; Valor mig: Quantitat sumada a l'ona sinusoïdal; Temps: Instant de temps a evaluar en l'ona sinusoïdal",LANG_CATEGORY_PROCEDURES:"Funcions",LANG_PROCEDURES_RETURN:"retorna",LANG_PROCEDURES_RETURN_TOOLTIP:"Returns a value",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Crida a una funció sense definició prèvia.",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"func_sense_retorn",LANG_PROCEDURES_DEFNORETURN_DO:"executar",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"Funció que s'executarà sense retornar res.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"func_amb_retorn",LANG_PROCEDURES_DEFRETURN_DO:"executar",LANG_PROCEDURES_DEFRETURN_RETURN:"retorna",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"Funció amb valor de retorn.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Atenció: Aquesta funció té paràmetres duplicats.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"executar",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"func_sense_retorn",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Executa aquesta funció.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"executar",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"func_amb_retorn",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Executa aquesta funció que té valor de retorn.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"paràmetres",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Subratlla la funció",LANG_PROCEDURES_IFRETURN_TOOLTIP:"Si la condició és verdadera, la funció retornarà aquest valor.",LANG_PROCEDURES_IFRETURN_WARNING:"Atenció: Aquest bloc només pot ser usat dins d'una funció que tingui valor de retorn.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"Aquesta variable no està declarada.",LANG_VARIABLES_GLOBAL:"Variable GLOBAL",LANG_VARIABLES_GLOBAL_VOLATILE:"Variable GLOBAL COMPARTIDA",LANG_VARIABLES_GLOBAL_TYPE:"de tipus",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declara i defineix una variable GLOBAL de tipus sencer (int) o text (String).",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declara i defineix una variable GLOBAL de tipus indicat.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declara i defineix una variable GLOBAL compartida (per a tasques i interrupcions) del tipus indicat.",LANG_VARIABLES_LOCAL:"Variable",LANG_VARIABLES_LOCAL_TYPE:"de tipus ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declara i defineix una variable LOCAL de tipus sencer (int) o text (String).",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declara i defineix una variable LOCAL del tipus indicat.",LANG_VARIABLES_DEFINE:"Definir variable ",LANG_VARIABLES_DEFINE_AS:"com",LANG_VARIABLES_DEFINE_TOOLTIP:"Definir el valor d'una variable.",LANG_VARIABLES_SET:"Var ",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Canvia el valor d'una variable.",LANG_VARIABLES_GET:"Var ",LANG_VARIABLES_GET_TOOLTIP:"Retorna el valor d'una variable",LANG_VARIABLES_PIN_ANALOG:"Pin analògic",LANG_VARIABLES_PIN_DIGITAL:"Pin digital",LANG_VARIABLES_PIN_PWM:"Pin PWM",LANG_VARIABLES_PIN_DIGITAL0:"WARNING: digital pin 0 (RX pin) is used when uploading a sketch. Using it to connect electronic components may cause problems when uploading a new sketch.",LANG_VARIABLES_PIN_TOOLTIP:"Selecciona el PIN desitjat.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BOOL:"Boolean",LANG_VARIABLES_TYPE_BYTE:"Byte",LANG_VARIABLES_TYPE_FLOAT:"Decimal",LANG_VARIABLES_TYPE_INTEGER:"Sencer",LANG_VARIABLES_TYPE_INTEGER_LONG:"Sencer Llarg",LANG_VARIABLES_TYPE_STRING:"Texte",LANG_VARIABLES_TYPE_CHAR:"Caràcter",LANG_CATEGORY_DISTANCE:"Distància",LANG_CATEGORY_LIGHT:"Llum",LANG_CATEGORY_SOUND:"So",LANG_ZUM_BUTTON:"Llig entrada digital amb pull-up",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Llig una entrada en el mode pull-up",LANG_ZUM_FOLLOWER:"Sensor infraroig",LANG_ZUM_FOLLOWER_PIN_LEFT:"Pin esquerra",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Pin dreta",LANG_ZUM_FOLLOWER_LEFT:"Esquerra",LANG_ZUM_FOLLOWER_RIGHT:"Dreta",LANG_ZUM_FOLLOWER_TOOLTIP:"Retorna el valor digital del sensor infraroig zum",LANG_ZUM_INFRARED:"Sensor infraroig",LANG_ZUM_INFRARED_PIN:"PIN#",LANG_ZUM_INFRARED_TOOLTIP:"Retorna el valor digital del sensor infraroig zum",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"Encendre",LANG_ZUM_LED_OFF:"Apagar",LANG_ZUM_LED_TOOLTIP:"LED zum",LANG_ZUM_PHOTORESISTOR:"Sensor de LLum",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Retorna el valor analògic del sensor de llum fotorresistència).",LANG_ZUM_PIEZO_BUZZER:"Brunzidor",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"To",LANG_ZUM_PIEZO_BUZZER_DO:"Do",LANG_ZUM_PIEZO_BUZZER_RE:"Re",LANG_ZUM_PIEZO_BUZZER_MI:"Mi",LANG_ZUM_PIEZO_BUZZER_FA:"Fa",LANG_ZUM_PIEZO_BUZZER_SOL:"Sol",LANG_ZUM_PIEZO_BUZZER_LA:"La",LANG_ZUM_PIEZO_BUZZER_SI:"Si",LANG_ZUM_PIEZO_BUZZER_DURATION:"Durada",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Brunzidor piezoelèctric",LANG_ZUM_PIEZO_BUZZERAV:"Brunzidor avançat",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"To",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Durada",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Brunzidor piezoelèctric avançat.",LANG_ZUM_POTENTIOMETER:"Potenciòmetre",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Potenciòmetre zum.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Servo de rotació contínua",LANG_SERVO_CONT_PIN:"Pin",LANG_SERVO_CONT_ROT:"",LANG_SERVO_CONT_TURN_CLOCKWISE:"Girar en sentit horari",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"Girar en sentit antihorari",LANG_SERVO_CONT_STOPPED:"Aturar",LANG_SERVO_CONT_DELAY:"Pausa",LANG_SERVO_CONT_TOOLTIP:"Servo de rotació contínua.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"PIN",LANG_SERVO_MOVE_DEGREES:"Graus (0~180)",LANG_SERVO_MOVE_DELAY:"Pausa",LANG_SERVO_MOVE_TOOLTIP:"Moure el servo entre 0 i 180 graus.",LANG_SERVO_WARNING:"It is not possible to set the servo pin using a variable",LANG_RELE:"Relé",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Valor",LANG_RELE_TOOLTIP:"Activa o desactiva l'estat d'un relé"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("ca-ES",e)}(),function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicate",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"item",LANG_RESERVED_WORDS:"Reserved word: this name is not allowed.",LANG_CATEGORY_LOGIC:"Logic",LANG_LOGIC_OPERATION_AND:"and",LANG_LOGIC_OPERATION_OR:"or",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implies",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Checks if both inputs are equal .",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Checks if both inputs are different.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Checks if the first input is smaller than the second one.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Checks if the first input is smaller than or equal to the second one.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Checks if the first input is greater than the second one.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Checks if the first input is greater than or equal to the second one.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Checks if both inputs are true.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Checks if either inputs are true.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Checks if inputs are different.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Checks if inputs are equal.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"If... then ...",LANG_LOGIC_NEGATE_INPUT_NOT:"not",LANG_LOGIC_NEGATE_TOOLTIP:"Returns the opposite of the input.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"true",LANG_LOGIC_BOOLEAN_FALSE:"false",LANG_LOGIC_BOOLEAN_TOOLTIP:"Returns either true or false.",LANG_CATEGORY_COMMUNICATION:"Communication",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth receive data",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Returns the data received by the Bluetooth module",LANG_BQ_BLUETOOTH_SEND:"Bluetooth send data",LANG_BQ_BLUETOOTH_SEND_SEND:"Send",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Sends data through Bluetooth module",LANG_BQ_BLUETOOTH_DEF:"Bluetooth definition",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Baud rate",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Name",LANG_BQ_BLUETOOTH_DEF_PINCODE:"PinCode",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Receive",LANG_BQ_BLUETOOTH_DEF_SEND:"Send",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Bluetooth module configuration",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth Serial Available",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Check wether the bluetooth has available data.",LANG_ADVANCED_SERIAL_AVAILABLE:"Serial Available",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Check wether the serial port is available or not",LANG_ADVANCED_SERIAL_PARSEINT:"Serial Read Integer",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"First valid (long) integer number from the serial buffer",LANG_ADVANCED_SERIAL_PRINT:"Serial Print",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Prints data as ASCII text.",LANG_ADVANCED_SERIAL_PRINTLN:"Serial Println",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Prints data as ASCII text and adds a Carriage Return (CR).",LANG_ADVANCED_SERIAL_READ:"Serial Read",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Reads incoming serial data from serial port as bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Serial Read String",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Reads incoming serial data from serial port as ASCII text.",LANG_ADVANCED_SERIAL_SPECIAL:"Special Chars",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tab",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Carriage Return",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Line Feed",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Quote",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Double quote",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Writes special Chars.",LANG_ADVANCED_SERIAL_TIMEOUT:"Set timeout [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Sets timeout for serial recepction (in milliseconds).",LANG_BQ_BAT:"BAT - Ultrasonic Sensor",LANG_BQ_BAT_RED_PIN:"Echo",LANG_BQ_BAT_BLUE_PIN:"Trigger",LANG_BQ_BAT_TOOLTIP:"Returns the distance measured by the ultrasonic sensor.",LANG_BQ_BUTTON:"Button",LANG_BQ_BUTTON_PIN:"Pin",LANG_BQ_BUTTON_TOOLTIP:"Button",LANG_BUTTON_PRESSED:"Pressed",LANG_BUTTON_NOT_PRESSED:"Released",LANG_BQ_INFRARED:"Infrared Sensor",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Returns the digital value read by the infrared sensor.",LANG_BQ_JOYSTICK_DIR:"Joystick direction",LANG_BQ_JOYSTICK_MAG:"Joystick magnitude",LANG_BQ_JOYSTICK_PIN_X:"X axis Pin",LANG_BQ_JOYSTICK_PIN_Y:"Y axis Pin",LANG_BQ_JOYSTICK_PIN_BUTTON:"Button Pin",LANG_BQ_JOYSTICK_POSITION:"Joystick Position",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"ON",LANG_BQ_LED_OFF:"OFF",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Light Sensor",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Returns the analog value measured by the light sensor.",LANG_BQ_PIEZO_BUZZER:"Buzzer",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"Tone",LANG_BQ_PIEZO_BUZZER_DO:"C4",LANG_BQ_PIEZO_BUZZER_RE:"D4",LANG_BQ_PIEZO_BUZZER_MI:"E4",LANG_BQ_PIEZO_BUZZER_FA:"F4",LANG_BQ_PIEZO_BUZZER_SOL:"G4",LANG_BQ_PIEZO_BUZZER_LA:"A4",LANG_BQ_PIEZO_BUZZER_SI:"B4",LANG_BQ_PIEZO_BUZZER_DURATION:"Duration [ms]",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Piezo Buzzer",LANG_BQ_PIEZO_BUZZERAV:"Advanced Buzzer",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"Tone",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Duration [ms]",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Piezo Buzzer Advanced",LANG_BQ_POTENTIOMETER:"Potentiometer",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Returns the analog value measured by the potentiometer.",LANG_CATEGORY_SCREEN:"Screen",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"LCD Pins",LANG_LCD_DEF_TOOLTIP:"Block that defines the LCD",LANG_LCD_ADVANCED_DEF:"Advanced LCD",LANG_LCD_ADVANCED_ROWS:"Rows",LANG_LCD_ADVANCED_COLUMNS:"Columns",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Block that defines the advanced LCD",LANG_LCD_SETBACKLIGHT:"LCD: setBacklight(",LANG_LCD_SETBACKLIGHT_CLOSE:")",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Sets the backlight of the LCD screen.",LANG_LCD_PRINT:"LCD: print ",LANG_LCD_PRINT_POSITION:"Set text position?",LANG_LCD_PRINT_TOOLTIP:"Prints a String in the LCD at the specified position or the next available one.",LANG_LCD_CLEAR:"LCD clear",LANG_LCD_CLEAR_TOOLTIP:"LCD clear",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Wait (ms)",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Waits the specified time in milliseconds (ms)",LANG_CONTROLS_BASE_MILLIS:"Time from start (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Number of milliseconds since the program started (long integer)",LANG_CONTROLS_BASE_US:"Time from start (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Number of microseconds since the program started (long integer)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Do",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"while",LANG_CONTROLS_DOWHILE_TOOLTIP:"While the condition is true, continue doing the statements.",LANG_CONTROLS_EXECUTE:"Execute Arduino code",LANG_CONTROLS_EXECUTE_TOOLTIP:"Executes Arduino code (text). Use with caution, as it can easily break the program and prevent it from compiling.",LANG_CONTROLS_IF_TOOLTIP_1:"If the condition is true, execute the statements.",LANG_CONTROLS_IF_TOOLTIP_2:"If the condition is true, then do the first block of statements. Otherwise, do the second block of statements.",LANG_CONTROLS_IF_TOOLTIP_3:"If the first condition is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",LANG_CONTROLS_IF_TOOLTIP_4:"If the first condition is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",LANG_CONTROLS_IF_MSG_IF:"if",LANG_CONTROLS_IF_MSG_ELSEIF:"else if",LANG_CONTROLS_IF_MSG_ELSE:"else",LANG_CONTROLS_IF_MSG_THEN:"do",LANG_CONTROLS_IF_IF_Field_IF:"if",LANG_CONTROLS_IF_IF_TOOLTIP:"Add, remove, or reorder sections to reconfigure this if block.",LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"else if",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:"Add a condition to the if block.",LANG_CONTROLS_IF_ELSE_Field_ELSE:"else",LANG_CONTROLS_IF_ELSE_TOOLTIP:"Add a final, catch-all condition to the if block.",LANG_CONTROLS_FOR_FROM_WARNING:"It is not possible to set a variable as the initial value of the for block.",LANG_CONTROLS_FOR_TO_WARNING:"It is not possible to set a variable as the final value of the for block.",LANG_CONTROLS_FOR_INPUT_WITH:"count with",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"from",LANG_CONTROLS_FOR_INPUT_TO:"to",LANG_CONTROLS_FOR_INPUT_DO:"do",LANG_CONTROLS_FOR_TOOLTIP:"Count from a start number to an end number. Each time the count is incremented by one, the variable takes that value then do the statements.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"while",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"until",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"While the condition is true, then do the statements.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"While the condition is false, then do the statements.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repeat",LANG_CONTROLS_REPEAT_TITLE_TIMES:"times",LANG_CONTROLS_REPEAT_INPUT_DO:"do",LANG_CONTROLS_REPEAT_TOOLTIP:"Repeat the statements a certain number of times",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"of loop",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"break out",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continue with next iteration",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Break out of the containing loop.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Skip the rest of this loop, and continue with the next iteration.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Warning: This block may only be used within a loop.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Setup",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Loop",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Blocks in setup will be executed at start, and blocks in Loop will be repeated continously.",LANG_CONTROLS_SWITCH:"switch ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Execute the statement of the case .",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"The switch expression is evaluated once",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"case",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:"The default keyword specifies the code to run if there is no case match",LANG_CONTROLS_SWITCH_IS:"case: ",LANG_CONTROLS_SWITCH_CASE:"case",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"default",LANG_CONTROLS_SWITCH_DO:"do",LANG_CATEGORY_MATH:"Math",LANG_MATH_ADVANCED_MAP_MAP:"Map ",LANG_MATH_ADVANCED_MAP_FROM:"From [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"to [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Re-map the input from a certain range to another.",LANG_MATH_NUMBER_TOOLTIP:"Number",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Array",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Returns the value of a certain element of the array.",LANG_MATH_MODULO_TOOLTIP:"Returns the remainder of the division of the two input numbers.",LANG_MATH_BASE_MAP:"Map ",LANG_MATH_BASE_MAP_VALUE_TO:"Value to [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Re-map the input from [0-1023] to another.",LANG_MATH_SINGLE_OP_ROOT:"square root",LANG_MATH_SINGLE_OP_ABSOLUTE:"absolute",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Returns the square root of a number.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Returns the absolute value of a number.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Returns the negation of a number.",LANG_MATH_SINGLE_TOOLTIP_LN:"Returns the natural logarithm of a number.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Returns the base 10 logarithm of a number.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Returns e to the power of a number.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Returns 10 to the power of a number.",LANG_MATH_COLOR_TOOLTIP:"Returns a colour",LANG_CATEGORY_TEXT:"Text",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"A letter, word, or line of text.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"create text with",LANG_TEXT_JOIN_TOOLTIP:"Create a piece of text by joining together any number of items.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"join",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Add, remove, or reorder sections to reconfigure this text block.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"item",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Add an item to the text.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"join",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"element",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"to",LANG_TEXT_APPEND_APPENDTEXT:"append text",LANG_TEXT_APPEND_VARIABLE:"item",LANG_TEXT_APPEND_TOOLTIP:"Append some text to variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"length",LANG_TEXT_LENGTH_TOOLTIP:"Returns number of letters (including spaces) in the provided text.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"?",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Checks if both input strings are equal, regardless of the case.",LANG_TEXT_SUBSTRING:"Crop ",LANG_TEXT_SUBSTRING_FROM:"from",LANG_TEXT_SUBSTRING_TO:"to",LANG_TEXT_SUBSTRING_TOOLTIP:"Obtain a substring from the input string with the caracters between the two input numbers.",LANG_TEXT_SEARCH:"Search",LANG_TEXT_IN:"in",LANG_TEXT_FIRST:"First instance",LANG_TEXT_LAST:"Last instance",LANG_TEXT_CONTAINS:"Contains",LANG_TEXT_EXPRESSION:"expression",LANG_TEXT_SEARCH_TOOLTIP:"Checks if a text is found in another text string. Returns the index of the first/last instance found.",LANG_TEXT_CONTAINS_TOOLTIP:"Checks if a text string contains an expression. Returns true or false.",LANG_TEXT_CAST:"To text",LANG_CATEGORY_ADVANCED:"Basic I/O",LANG_ADVANCED_CONVERSION_CONVERT:"Convert",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binary",LANG_ADVANCED_CONVERSION_VALUE:"value",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convert a number from one base to another.",LANG_ADVANCED_INOUT_ANALOG_READ:"AnalogRead PIN",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Reads the value from a specified digital pin",LANG_ADVANCED_INOUT_ANALOG_WRITE:"AnalogWrite PIN",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"value",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Write a value between 0 and 255 to a specific analog output PIN",LANG_ADVANCED_BUILTIN_LED:"BUILT-IN LED",LANG_ADVANCED_BUILTIN_LED_STATE:"state",LANG_ADVANCED_BUILTIN_LED_ON:"ON",LANG_ADVANCED_BUILTIN_LED_OFF:"OFF",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Toggle",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"Built-in LED that is internally connected to PIN 13",LANG_ADVANCED_INOUT_DIGITAL_READ:"DigitalRead PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Reads the value from a specified digital pin",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"DigitalWrite",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"PIN",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"state",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"HIGH",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"LOW",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Write a value in a specified digital pin",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Set mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Output",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Input",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Input Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Sets digital pin mode",LANG_ADVANCED_HIGHLOW_HIGH:"HIGH",LANG_ADVANCED_HIGHLOW_LOW:"LOW",LANG_ADVANCED_HIGHLOW_TOOLTIP:"HIGH OR LOW",LANG_ADVANCED_MATH_RANDOM:"Random between",LANG_ADVANCED_MATH_RANDOM_AND:" and ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Returns a random number between the two limits.",LANG_ADVANCED_MATH_CAST:"To number",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Cast a number",LANG_ADVANCED_MATH_SINUSOID:"Sinusoid",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitude",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Frequency",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Phase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Offset",LANG_ADVANCED_MATH_SINUSOID_TIME:"Time",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Generates a sinusoid wave. Amplitude: Wave amplitude; Frequency: Wave frequency in Hz; Phase: Wave phase in radians; Offset: Offset value added to the wave; Time: Time instant in which the wave is evaluated.",LANG_CATEGORY_PROCEDURES:"Functions",LANG_PROCEDURES_RETURN:"return",LANG_PROCEDURES_RETURN_TOOLTIP:"Returns a value",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Function call without matching definition",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"function_without_return",LANG_PROCEDURES_DEFNORETURN_DO:"do",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"A function with no return value.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"function_with_return",LANG_PROCEDURES_DEFRETURN_DO:"do",LANG_PROCEDURES_DEFRETURN_RETURN:"return",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"A function with a return value.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Warning: This function has duplicate parameters.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"do",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"function_without_return",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Calls a function with no return value.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"do",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"function_with_return",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Calls a function with a return value.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"parameters",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Highlight function",LANG_PROCEDURES_IFRETURN_TOOLTIP:"If the condition is true, then returns this value.",LANG_PROCEDURES_IFRETURN_WARNING:"Warning: This block may only be used within a function with a return value.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"This variable is not declared.",LANG_VARIABLES_GLOBAL:"Declare GLOBAL Variable ",LANG_VARIABLES_GLOBAL_VOLATILE:"Declare GLOBAL SHARED Variable ",LANG_VARIABLES_GLOBAL_TYPE:"of type ",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declares and defines a GLOBAL variable of type int or String.",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declares and defines a GLOBAL variable of the given type.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declares and defines a GLOBAL shared (volatile, to be used in tasks and interrupts) variable of the given type.",LANG_VARIABLES_LOCAL:"Declare variable ",LANG_VARIABLES_LOCAL_TYPE:"of type ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declare and define a LOCAL variable of type int or String.",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declare and define a LOCAL variable of the given type.",LANG_VARIABLES_DEFINE:"Define variable ",LANG_VARIABLES_DEFINE_AS:"as",LANG_VARIABLES_DEFINE_TOOLTIP:"Define the value of a variable.",LANG_VARIABLES_SET:"Var",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Sets the value of a variable.",LANG_VARIABLES_GET:"Var",LANG_VARIABLES_GET_TOOLTIP:"Returns the value of a variable.",LANG_VARIABLES_PIN_ANALOG:"Analog pin",LANG_VARIABLES_PIN_DIGITAL:"Digital pin",LANG_VARIABLES_PIN_PWM:"PWM pin",LANG_VARIABLES_PIN_DIGITAL0:"WARNING: digital pin 0 (RX pin) is used when uploading a sketch. Using it to connect electronic components may cause problems when uploading a new sketch.",LANG_VARIABLES_PIN_TOOLTIP:"Select the PIN.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BOOL:"Boolean",LANG_VARIABLES_TYPE_BYTE:"Byte",LANG_VARIABLES_TYPE_FLOAT:"Float",LANG_VARIABLES_TYPE_INTEGER:"Integer",LANG_VARIABLES_TYPE_INTEGER_LONG:"Long Integer",LANG_VARIABLES_TYPE_STRING:"String",LANG_VARIABLES_TYPE_CHAR:"Char",LANG_CATEGORY_DISTANCE:"Distance",LANG_CATEGORY_LIGHT:"Light",LANG_CATEGORY_SOUND:"Sound",LANG_CATEGORY_ZUM:"Zum bloqs",LANG_ZUM_BUTTON:"Read pull-up digital input",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Reads an input in pull-up mode.",LANG_ZUM_FOLLOWER:"Infrared Sensor",LANG_ZUM_FOLLOWER_PIN_LEFT:"Left Pin",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Right Pin",LANG_ZUM_FOLLOWER_LEFT:"Left",LANG_ZUM_FOLLOWER_RIGHT:"Right",LANG_ZUM_FOLLOWER_TOOLTIP:"Returns the digital value read by the infrared sensor",LANG_ZUM_INFRARED:"Infrared Sensor",LANG_ZUM_INFRARED_PIN:"Pin",LANG_ZUM_INFRARED_TOOLTIP:"Returns the digital value read by the infrared sensor",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"ON",LANG_ZUM_LED_OFF:"OFF",LANG_ZUM_LED_TOOLTIP:"zum LED",LANG_ZUM_PHOTORESISTOR:"Light Sensor",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Returns the analog value measured by the light sensor.",LANG_ZUM_PIEZO_BUZZER:"Buzzer",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"Tone",LANG_ZUM_PIEZO_BUZZER_DO:"C4",LANG_ZUM_PIEZO_BUZZER_RE:"D4",LANG_ZUM_PIEZO_BUZZER_MI:"E4",LANG_ZUM_PIEZO_BUZZER_FA:"F4",LANG_ZUM_PIEZO_BUZZER_SOL:"G4",LANG_ZUM_PIEZO_BUZZER_LA:"A4",LANG_ZUM_PIEZO_BUZZER_SI:"B4",LANG_ZUM_PIEZO_BUZZER_DURATION:"Duration [ms]",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Piezo Buzzer",LANG_ZUM_PIEZO_BUZZERAV:"Advanced Buzzer",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"Tone",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Duration [ms]",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Piezo Buzzer Advanced",LANG_ZUM_POTENTIOMETER:"Potentiometer",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Returns the analog value measured by the potentiometer.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Continuous rotation servo",LANG_SERVO_CONT_PIN:"PIN",LANG_SERVO_CONT_ROT:"ROT",LANG_SERVO_CONT_TURN_CLOCKWISE:"Turn clockwise",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"Turn counterclockwise",LANG_SERVO_CONT_STOPPED:"Stopped",LANG_SERVO_CONT_DELAY:"Delay [ms]",LANG_SERVO_CONT_TOOLTIP:"Continuous rotation servo.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"Pin",LANG_SERVO_MOVE_DEGREES:"Degrees (0~180)",LANG_SERVO_MOVE_DELAY:"Delay [ms]",LANG_SERVO_MOVE_TOOLTIP:"Move between 0~180 degree",LANG_SERVO_WARNING:"It is not possible to set the servo pin using a variable",LANG_RELE:"Relay",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Value",LANG_RELE_TOOLTIP:"Sets the relay state"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("en-GB",e)}(),function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicar",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"elemento",LANG_RESERVED_WORDS:"Palabra reservada: este nombre no está permitido.",LANG_CATEGORY_LOGIC:"Lógica",LANG_LOGIC_OPERATION_AND:"y",LANG_LOGIC_OPERATION_OR:"o",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implica",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Compara si las dos entradas son iguales.",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Compara si las dos entradas no son iguales entre sí.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Compara si la primera entrada es menor que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Compara si la primera entrada es menor o igual que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Compara si la primera entrada es mayor que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Compara si la primera entrada es mayor o igual que la segunda entrada.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Compara si ambas entradas son verdaderas.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Compara si alguna de las entradas son verdaderas.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Compara si las entradas son diferentes.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Compara si las entradas son iguales.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"Si... entonces...",LANG_LOGIC_NEGATE_INPUT_NOT:"no",LANG_LOGIC_NEGATE_TOOLTIP:"Devuelve lo contrario de la entrada.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"verdadero",LANG_LOGIC_BOOLEAN_FALSE:"falso",LANG_LOGIC_BOOLEAN_TOOLTIP:"Devuelve verdadero o falso en función de lo seleccionado.",LANG_CATEGORY_COMMUNICATION:"Comunicación",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth: recibir ",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Devuelve los datos recibidos por el módulo Bluetooth",LANG_BQ_BLUETOOTH_SEND:"Bluetooth: Enviar",LANG_BQ_BLUETOOTH_SEND_SEND:"Enviar datos",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Envía datos a través del módulo Bluetooth",LANG_BQ_BLUETOOTH_DEF:"Bluetooth",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Tasa de baudios",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Nombre",LANG_BQ_BLUETOOTH_DEF_PINCODE:"Código PIN",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Recibir",LANG_BQ_BLUETOOTH_DEF_SEND:"Enviar",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Configura el módulo Bluetooth",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth: Puerto Serie Disponible",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Comprueba si el módulo Bluetooth dispone de datos disponibles",LANG_ADVANCED_SERIAL_AVAILABLE:"Puerto Serie Disponible",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Comprueba si el puerto serie está disponible o no",LANG_ADVANCED_SERIAL_PARSEINT:"Leer entero por el puerto serie",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"Devuelve el primer número entero (largo) desde el puerto serie",LANG_ADVANCED_SERIAL_PRINT:"Imprimir por puerto serie",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Imprime los datos como texto ASCII.",LANG_ADVANCED_SERIAL_PRINTLN:"Imprimir por puerto serie con salto de línea",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Imprime los datos como texto ASCII y con retorno de carro (RC).",LANG_ADVANCED_SERIAL_READ:"Leer desde el puerto serie",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Lee los datos que se reciben por el puerto serie como texto bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Leer cadena desde el puerto serie",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Lee los datos que se reciben por el puerto serie como texto ASCII.",LANG_ADVANCED_SERIAL_SPECIAL:"Caracteres especiales",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tabulador",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Retorno de carro",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Salto de línea",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Comilla",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Comilla doble",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Escribe caracteres especiales.",LANG_ADVANCED_SERIAL_TIMEOUT:"Tiempo de espera [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Establece el tiempo de espera (en milisegundos) para la recepción de caracteres por el puerto serie.",LANG_BQ_BAT:"BAT - Sensor de Ultrasonidos",LANG_BQ_BAT_RED_PIN:"ECHO Pin",LANG_BQ_BAT_BLUE_PIN:"TRIGGER Pin",LANG_BQ_BAT_TOOLTIP:"Devuelve la distancia medida por el sensor de ultrasonidos.",LANG_BQ_BUTTON:"Botón",LANG_BQ_BUTTON_PIN:"Pin",LANG_BQ_BUTTON_TOOLTIP:"Botón",LANG_BUTTON_PRESSED:"Pulsado",LANG_BUTTON_NOT_PRESSED:"No pulsado",LANG_BQ_INFRARED:"Sensor infrarrojo",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Devuelve el valor digital medido por el sensor infrarrojo",LANG_BQ_JOYSTICK_DIR:"Dirección joystick",LANG_BQ_JOYSTICK_MAG:"Magnitud joystick",LANG_BQ_JOYSTICK_PIN_X:"Eje X Pin",LANG_BQ_JOYSTICK_PIN_Y:"Eje Y Pin",LANG_BQ_JOYSTICK_POSITION:"Posición Joystick",LANG_BQ_JOYSTICK_PIN_BUTTON:"Pulsador Pin",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"Encender",LANG_BQ_LED_OFF:"Apagar",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Sensor de Luz",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Devuelve el valor analógico medido por la fotorresistencia.",LANG_BQ_PIEZO_BUZZER:"Zumbador",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"Tono",LANG_BQ_PIEZO_BUZZER_DO:"Do",LANG_BQ_PIEZO_BUZZER_RE:"Re",LANG_BQ_PIEZO_BUZZER_MI:"Mi",LANG_BQ_PIEZO_BUZZER_FA:"Fa",LANG_BQ_PIEZO_BUZZER_SOL:"Sol",LANG_BQ_PIEZO_BUZZER_LA:"La",LANG_BQ_PIEZO_BUZZER_SI:"Si",LANG_BQ_PIEZO_BUZZER_DURATION:"Duración [ms]",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Zumbador piezoeléctrico",LANG_BQ_PIEZO_BUZZERAV:"Zumbador avanzado",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"Tono",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Duración [ms]",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Zumbador avanzado",LANG_BQ_POTENTIOMETER:"Potenciómetro",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Devuelve el valor analógico medido por el potenciómetro",LANG_CATEGORY_SCREEN:"Pantalla",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"Pines del LCD",LANG_LCD_DEF_TOOLTIP:"Define el LCD",LANG_LCD_ADVANCED_DEF:"LCD avanzado",LANG_LCD_ADVANCED_ROWS:"Filas",LANG_LCD_ADVANCED_COLUMNS:"Columnas",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Bloque que define el LCD avanzado",LANG_LCD_SETBACKLIGHT:"LCD: ajustar la retroiluminación",LANG_LCD_SETBACKLIGHT_CLOSE:"",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Ajusta la retroiluminación de la pantalla LCD",LANG_LCD_PRINT:"LCD: Imprimir ",LANG_LCD_PRINT_POSITION:"¿Fijar posición del texto?",LANG_LCD_PRINT_TOOLTIP:"Imprime un string en la pantalla LCD en la posición específicada o en la siguiente disponible.",LANG_LCD_CLEAR:"Borrar LCD",LANG_LCD_CLEAR_TOOLTIP:"Borra la pantalla LCD",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Esperar [ms]",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Espera el tiempo especificado en milisegundos (ms)",LANG_CONTROLS_BASE_MILLIS:"Tiempo desde el arranque (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Número de milisegundos desde que se inició el programa (entero largo)",LANG_CONTROLS_BASE_US:"Tiempo desde el arranque (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Número de microsegundos desde que se inició el programa (entero largo)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Hacer",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"mientras",LANG_CONTROLS_DOWHILE_TOOLTIP:"Mientras la condición sea verdadera, continúa ejecutando las instrucciones de dentro del bloque.",LANG_CONTROLS_EXECUTE:"Ejecutar código Arduino",LANG_CONTROLS_EXECUTE_TOOLTIP:"Ejecuta código Arduino (texto). Utilizar con preucación, ya que puede romper fácilmente el programa e impedir su correcta compilación.",LANG_CONTROLS_IF_TOOLTIP_1:"Si la condición es verdadera, ejecuta las acciones dentro del bloque.",LANG_CONTROLS_IF_TOOLTIP_2:"Si la condición es verdadera, se ejecuta el primer bloque de comandos. Si no lo es, se ejecuta el segundo bloque de comandos.",LANG_CONTROLS_IF_TOOLTIP_3:"Si el primer valor es verdadero, se ejecuta el primer bloque de comandos. Sino, si el segundo valor es verdadero, se ejecuta el segundo bloque de comandos.",LANG_CONTROLS_IF_TOOLTIP_4:"Si el primer valor es verdadero, se ejecuta el primer bloque de comandos. Sino, si el segundo valor es verdadero, se ejecuta el segundo bloque de comandos. Si ninguno de los valores es verdadero, se ejecuta el último bloque de comandos",LANG_CONTROLS_IF_MSG_IF:"si",LANG_CONTROLS_IF_MSG_ELSEIF:"en cambio, si",LANG_CONTROLS_IF_MSG_ELSE:"de lo contrario",LANG_CONTROLS_IF_MSG_THEN:"ejecutar",LANG_CONTROLS_IF_IF_Field_IF:"si",LANG_CONTROLS_IF_IF_TOOLTIP:'Añadir, eliminar o reordenar secciones para reconfigurar este bloque "si".',LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"en cambio, si",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:'Añade una condición al bloque "si".',LANG_CONTROLS_IF_ELSE_Field_ELSE:"de lo contrario",LANG_CONTROLS_IF_ELSE_TOOLTIP:'Añade una condición final al bloque "si" para capturar el resto de opciones.',LANG_CONTROLS_FOR_FROM_WARNING:"No puedes asignar una variable al valor inicial del for",LANG_CONTROLS_FOR_TO_WARNING:"No puedes asignar una variable al valor final del for",LANG_CONTROLS_FOR_INPUT_WITH:"Contar con",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"desde",LANG_CONTROLS_FOR_INPUT_TO:"hasta",LANG_CONTROLS_FOR_INPUT_DO:"ejecutar",LANG_CONTROLS_FOR_TOOLTIP:"Contar desde un número de inicio hasta uno final. Cada vez que se incrementa en uno la cuenta, la variable toma ese valor y se ejecutan las acciones.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"mientras",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"hasta",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"Mientras la condición sea verdadera, ejecutar las instrucciones.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"Mientras la condición sea falsa, ejecutar las instrucciones.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repetir",LANG_CONTROLS_REPEAT_TITLE_TIMES:"veces",LANG_CONTROLS_REPEAT_INPUT_DO:"ejecutar",LANG_CONTROLS_REPEAT_TOOLTIP:"Ejecutar las instrucciones un número concreto de veces.",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"el bucle",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"interrumpir",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continuar con la siguiente iteración",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Interrumpir el bucle que contiene esta instrucción.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Saltarse el resto de acciones de esta iteración y continuar con la siguiente iteración.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Atención: Este bloque sólo puede ser usado dentro de un bucle.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Inicio",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Repetir",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Los bloques en Inicio se ejecutarán una sola vez al arranque, mientras que los bloques en Repetir se ejecutarán de forma repetida.",LANG_CONTROLS_SWITCH:"si ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"Este bloque compara de uno en uno si se cumplen los distintos casos.",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"caso ",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:'El bloque "default" especifica la acción que se va a ejecutar si no se han cumplido ninguno de los casos anteriores.',LANG_CONTROLS_SWITCH_IS:"es: ",LANG_CONTROLS_SWITCH_CASE:"caso ",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"en otro caso",LANG_CONTROLS_SWITCH_DO:"ejecutar",LANG_CATEGORY_MATH:"Matemáticas",LANG_MATH_ADVANCED_MAP_MAP:"Mapear ",LANG_MATH_ADVANCED_MAP_FROM:"De [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"a [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Mapea la entrada desde un rango de valores iniciales a otro rango distinto.",LANG_MATH_NUMBER_TOOLTIP:"Número entero",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Vector de tres enteros",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Devuelve el valor de un elemento concreto del vector.",LANG_MATH_MODULO_TOOLTIP:"Devuelve el resto de la división de las dos entradas.",LANG_MATH_BASE_MAP:"Mapear ",LANG_MATH_BASE_MAP_VALUE_TO:"Valor entre [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Mapea la entrada desde el rango [0-1023] a otro rango de valores.",LANG_MATH_SINGLE_OP_ROOT:"raíz cuadrada",LANG_MATH_SINGLE_OP_ABSOLUTE:"valor absoluto",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Devuelve la raíz cuadrada de un número.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Devuelve el valor absoluto de un número.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Devuelve el número cambiado de signo.",LANG_MATH_SINGLE_TOOLTIP_LN:"Devuelve el logaritmo neperiano de un número.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Devuelve el logaritmo en base 10 de un número.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Devuelve el exponencial de un número.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Devuelve 10 elevado a una potencia.",LANG_MATH_COLOR_TOOLTIP:"Devuelve un color",LANG_CATEGORY_TEXT:"Texto",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"Una letra, una palabra o una línea de texto.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"crear texto con",LANG_TEXT_JOIN_TOOLTIP:"Crea texto juntando cualquier número de elementos.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"unir",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Añadir, eliminar o reordenar secciones para reconfigurar este bloque de texto.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"elemento",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Añadir un elemento al texto.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"unir",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"elemento",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"a",LANG_TEXT_APPEND_APPENDTEXT:"añadirle texto",LANG_TEXT_APPEND_VARIABLE:"elemento",LANG_TEXT_APPEND_TOOLTIP:"Añadir texto a la variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"longitud",LANG_TEXT_LENGTH_TOOLTIP:"Devuelve el número de letras (incluyendo los espacios) en el texto introducido.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Compara si los dos textos introducidos son iguales, independientemente de que tengan letras mayúsculas o minúsculas.",LANG_TEXT_SUBSTRING:"Recortar ",LANG_TEXT_SUBSTRING_FROM:"desde",LANG_TEXT_SUBSTRING_TO:"hasta",LANG_TEXT_SUBSTRING_TOOLTIP:"Recorta los caracteres del texto introducido que se encuentren entre los dos índices y crea con ellos un nuevo texto.",LANG_TEXT_SEARCH:"Busca",LANG_TEXT_IN:"en",LANG_TEXT_FIRST:"Primera instancia",LANG_TEXT_LAST:"Última instancia",LANG_TEXT_CONTAINS:"Contiene",LANG_TEXT_EXPRESSION:"expressión",LANG_TEXT_SEARCH_TOOLTIP:"Comprueba si una cadena de texto aparece en otra. Devuelve la posición del primer/último caracter encontrado.",LANG_TEXT_CONTAINS_TOOLTIP:"Comprueba si una expresión aparece en una cadena de texto. Devuelve verdadero o falso.",LANG_TEXT_CAST:"A texto",LANG_CATEGORY_ADVANCED:"E/S básica",LANG_ADVANCED_CONVERSION_CONVERT:"Convertir",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binario",LANG_ADVANCED_CONVERSION_VALUE:"valor",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convertir la base de un número.",LANG_ADVANCED_INOUT_ANALOG_READ:"Leer el pin analógico Pin",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Lee el valor de un pin analógico específico.",LANG_ADVANCED_INOUT_ANALOG_WRITE:"Escribir en PIN digital",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"el valor analógico",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Escribe un valor entre 0 y 255 en un PIN analógico específico.",LANG_ADVANCED_BUILTIN_LED:"LED en la placa",LANG_ADVANCED_BUILTIN_LED_STATE:"estado",LANG_ADVANCED_BUILTIN_LED_ON:"Encendido",LANG_ADVANCED_BUILTIN_LED_OFF:"Apagado",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Conmutar",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"LED integrado en la placa que está internamente conectado al PIN 13.",LANG_ADVANCED_INOUT_DIGITAL_READ:"Leer el pin digital PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Lee el valor desde un pin digital específico.",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"Escribir en el pin digital",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"PIN",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"estado",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"ALTO",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"BAJO",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Escribe un valor en el pin digital específico.",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Establece modo",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Modo",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Salida",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Entrada",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Entrada Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Establece el modo de un pin digital",LANG_ADVANCED_HIGHLOW_HIGH:"ALTO",LANG_ADVANCED_HIGHLOW_LOW:"BAJO",LANG_ADVANCED_HIGHLOW_TOOLTIP:'Escribe "ALTO" o "BAJO" en función de lo seleccionado.',LANG_ADVANCED_MATH_RANDOM:"Aleatorio entre",LANG_ADVANCED_MATH_RANDOM_AND:" y ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Crea un número aleatorio entre los dos límites introducidos.",LANG_ADVANCED_MATH_CAST:"A número",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Convierte un número",LANG_ADVANCED_MATH_SINUSOID:"Senoide",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitud",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Frecuencia",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Fase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Valor medio",LANG_ADVANCED_MATH_SINUSOID_TIME:"Tiempo",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Genera un onda senoidal. Amplitud: Amplitud de la onda senoidal; Frecuencia: Frecuencia en Hz de la onda senoidal; Fase: Fase de la onda senoidal en radianes; Valor medio: Cantidad añadida a la onda senoidal; Tiempo: Instante de tiempo a evaluar de la onda senoidal",LANG_CATEGORY_PROCEDURES:"Funciones",LANG_PROCEDURES_RETURN:"devuelve",LANG_PROCEDURES_RETURN_TOOLTIP:"Devuelve un valor",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Llamada a una función sin definición previa.",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"func_sin_retorno",LANG_PROCEDURES_DEFNORETURN_DO:"ejecutar",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"Función que se ejecutará sin devolver nada.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"func_con_retorno",LANG_PROCEDURES_DEFRETURN_DO:"ejecutar",LANG_PROCEDURES_DEFRETURN_RETURN:"devuelve",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"Función con valor de retorno.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Atención: Esta función tiene parámetros duplicados.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"ejecutar",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"func_sin_retorno",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Ejecuta esta función.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"ejecutar",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"func_con_retorno",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Ejecuta esta función que tiene valor de retorno.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"parámetros",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Subraya la función",LANG_PROCEDURES_IFRETURN_TOOLTIP:"Si la condición es verdadera, la función devolverá este valor.",LANG_PROCEDURES_IFRETURN_WARNING:"Atención: Este bloque sólo puede ser usado dentro de una función que tenga valor de retorno.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"Esta variable no está declarada.",LANG_VARIABLES_GLOBAL:"Declarar variable GLOBAL",LANG_VARIABLES_GLOBAL_VOLATILE:"Declarar variable GLOBAL COMPARTIDA",LANG_VARIABLES_GLOBAL_TYPE:"de tipo ",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declara y define una variable GLOBAL de tipo entero (int) o texto (String).",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declara y define una variable GLOBAL del tipo indicado.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declara y define una variable GLOBAL compartida (para utilizan en tareas o interrupciones) del tipo indicado.",LANG_VARIABLES_LOCAL:"Declarar variable",LANG_VARIABLES_LOCAL_TYPE:"de tipo ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declara y define una variable LOCAL de tipo entero (int) o texto (String).",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declara y define una variable LOCAL del tipo indicado.",LANG_VARIABLES_DEFINE:"Definir variable ",LANG_VARIABLES_DEFINE_AS:"como",LANG_VARIABLES_DEFINE_TOOLTIP:"Definir el valor de una variable.",LANG_VARIABLES_SET:"Var",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Cambia el valor de una variable.",LANG_VARIABLES_GET:"Var",LANG_VARIABLES_GET_TOOLTIP:"Devuelve el valor de una variable",LANG_VARIABLES_PIN_ANALOG:"Pin analógico",LANG_VARIABLES_PIN_DIGITAL:"Pin digital",LANG_VARIABLES_PIN_PWM:"Pin PWM",LANG_VARIABLES_PIN_DIGITAL0:"CUIDADO: el pin digital 0 (pin Rx) es usado para escribir un programa en la placa desde el ordenador. Usarlo para conectar componentes puede dar problemas al programarla.",LANG_VARIABLES_PIN_TOOLTIP:"Selecciona el PIN deseado.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BYTE:"Octeto",LANG_VARIABLES_TYPE_BOOL:"Binario",LANG_VARIABLES_TYPE_FLOAT:"Decimal",LANG_VARIABLES_TYPE_INTEGER:"Entero",LANG_VARIABLES_TYPE_INTEGER_LONG:"Entero largo",LANG_VARIABLES_TYPE_STRING:"Texto",LANG_VARIABLES_TYPE_CHAR:"Carácter",LANG_CATEGORY_DISTANCE:"Distancia",LANG_CATEGORY_LIGHT:"Luz",LANG_CATEGORY_SOUND:"Sonido",LANG_ZUM_BUTTON:"Lee entrada digital pull-up",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Lee una entrada en el modo pull-up",LANG_ZUM_FOLLOWER:"Sensor infrarrojo",LANG_ZUM_FOLLOWER_PIN_LEFT:"Pin izquierda",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Pin derecha",LANG_ZUM_FOLLOWER_LEFT:"Izquierda",LANG_ZUM_FOLLOWER_RIGHT:"Derecha",LANG_ZUM_FOLLOWER_TOOLTIP:"Devuelve el valor digital del sensor infrarrojo zum",LANG_ZUM_INFRARED:"Sensor infrarrojo",LANG_ZUM_INFRARED_PIN:"Pin",LANG_ZUM_INFRARED_TOOLTIP:"Devuelve el valor digital del sensor infrarrojo zum",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"Encender",LANG_ZUM_LED_OFF:"Apagar",LANG_ZUM_LED_TOOLTIP:"LED zum",LANG_ZUM_PHOTORESISTOR:"Sensor de Luz",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Devuelve el valor analógico del sensor de luz (fotorresistencia).",LANG_ZUM_PIEZO_BUZZER:"Zumbador",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"Tono",LANG_ZUM_PIEZO_BUZZER_DO:"Do",LANG_ZUM_PIEZO_BUZZER_RE:"Re",LANG_ZUM_PIEZO_BUZZER_MI:"Mi",LANG_ZUM_PIEZO_BUZZER_FA:"Fa",LANG_ZUM_PIEZO_BUZZER_SOL:"Sol",LANG_ZUM_PIEZO_BUZZER_LA:"La",LANG_ZUM_PIEZO_BUZZER_SI:"Si",LANG_ZUM_PIEZO_BUZZER_DURATION:"Duración [ms]",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Zumbador piezoeléctrico",LANG_ZUM_PIEZO_BUZZERAV:"Zumbador avanzado",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"Tono",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Duración [ms]",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Zumbador piezoeléctrico avanzado.",LANG_ZUM_POTENTIOMETER:"Potenciómetro",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Potenciómetro zum.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Motor CRS",LANG_SERVO_CONT_PIN:"Pin",LANG_SERVO_CONT_ROT:"Rot",LANG_SERVO_CONT_TURN_CLOCKWISE:"GIRAR EN SENTIDO HORARIO",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"GIRAR EN SENTIDO ANTIHORARIO",LANG_SERVO_CONT_STOPPED:"DETENER",LANG_SERVO_CONT_DELAY:"Pausa [ms]",LANG_SERVO_CONT_TOOLTIP:"Servo de rotación continua.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"Pin",LANG_SERVO_MOVE_DEGREES:"Grados (0~180)",LANG_SERVO_MOVE_DELAY:"Pausa [ms]",LANG_SERVO_MOVE_TOOLTIP:"Mover el servo entre 0 y 180 grados.",LANG_SERVO_WARNING:"No puedes asignar una variable al pin del servo",LANG_RELE:"Relé",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Valor",LANG_RELE_TOOLTIP:"Activa o desactiva el estado de un relé"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("es-ES",e)}(),RoboBlocks.locales.initialize(),RoboBlocks.variables={},RoboBlocks.isVariable=function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return void 0!==RoboBlocks.variables[e]||(e.search("digitalRead\\(")>=0||e.search("analogRead\\(")>=0)},RoboBlocks.findPinMode=function(e){var o="";e=e.split(";\n");for(var _ in e)e[_].search("pinMode")>=0?o+=e[_]+";\n":e=e[_];return{code:o,pin:e}},RoboBlocks.LANG_COLOUR_DISTANCE="#D04141",RoboBlocks.LANG_COLOUR_SOUND="#CC7B44",RoboBlocks.LANG_COLOUR_SERVO="#CECE42",RoboBlocks.LANG_COLOUR_LCD="#ACCE42",RoboBlocks.LANG_COLOUR_CONTROL="#44CC44",RoboBlocks.LANG_COLOUR_LOGIC="#42CE91",RoboBlocks.LANG_COLOUR_MATH="#42CBCE",RoboBlocks.LANG_COLOUR_TEXT="#42A3CE",RoboBlocks.LANG_COLOUR_COMMUNICATION="#4263CE",RoboBlocks.LANG_COLOUR_ADVANCED="#9142CE",RoboBlocks.LANG_COLOUR_VARIABLES="#B244CC",RoboBlocks.LANG_COLOUR_PROCEDURES="#CE42B3",RoboBlocks.LANG_COLOUR_LIGHT="#FF8A00",RoboBlocks.LANG_COLOUR_AMBIENT="#99CCFF",RoboBlocks.LANG_COLOUR_HTML="#BDBDBD",RoboBlocks.setColors=function(e){RoboBlocks.LANG_COLOUR_DISTANCE=e[0],RoboBlocks.LANG_COLOUR_SOUND=e[1],RoboBlocks.LANG_COLOUR_SERVO=e[2],RoboBlocks.LANG_COLOUR_LCD=e[3],RoboBlocks.LANG_COLOUR_CONTROL=e[4],RoboBlocks.LANG_COLOUR_LOGIC=e[5],RoboBlocks.LANG_COLOUR_MATH=e[6],RoboBlocks.LANG_COLOUR_TEXT=e[7],RoboBlocks.LANG_COLOUR_COMMUNICATION=e[8],RoboBlocks.LANG_COLOUR_ADVANCED=e[9],RoboBlocks.LANG_COLOUR_VARIABLES=e[10],RoboBlocks.LANG_COLOUR_PROCEDURES=e[11],RoboBlocks.LANG_COLOUR_LIGHT=e[12],RoboBlocks.LANG_COLOUR_AMBIENT=e[13],RoboBlocks.LANG_COLOUR_HTML=e[14]};var profiles={arduino:{description:"Standard-compatible board",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"]],pwm:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"],["A6","A6"],["A7","A7"]],serial:9600},arduino_mega:{description:"Mega-compatible board"}};profiles.default=profiles.arduino,Blockly.createToolbox=function(){var e={};for(var o in this.Blocks)if(this.Blocks.hasOwnProperty(o)&&this.Blocks[o]instanceof Object&&this.Blocks[o].category){var _=this.Blocks[o].category;e[_]=e[_]||[],e[_].push(o)}var t='<xml id="toolbox" style="display: none">';for(o in e)e.hasOwnProperty(o)&&(t+='<category id="'+o+'" name="'+o+'">',e[o].forEach(function(e){t+='<block type="'+e+'"></block>'}),t+="</category>");return t+="</xml>"},Blockly.exportAllBlocks=function(){var e={},o=[],_=[],t=[];for(var l in this.Blocks)if(this.Blocks.hasOwnProperty(l)&&this.Blocks[l]instanceof Object&&this.Blocks[l].category){var i=this.Blocks[l].category;if(e[i]=e[i]||[],e[i].push(l),void 0!==this.Blocks[l]&&void 0!==this.Blocks[l].examples)for(example in this.Blocks[l].examples)""!==this.Blocks[l].examples[example]&&(t[this.Blocks[l].examples[example]]||(t[this.Blocks[l].examples[example]]=!0,_.push(this.Blocks[l].examples[example])))}else this.Blocks.hasOwnProperty(l)&&this.Blocks[l]instanceof Object&&o.push(l);var n,a="",s="file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/phantom_script.bat";makeTextFile=function(e){var o=new Blob([e],{type:"text/plain"});return null!==s&&window.URL.revokeObjectURL(s),s=window.URL.createObjectURL(o)};var r=function(e){a='<block type="'+e+'" deletable="true"></block>',n=e,console.log(e),document.getElementById("startBlocks").innerHTML=a,Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var o=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),_=o.width+20,t=o.height+20;A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_block.html?name="+n+" doc/"+roboblocksLanguage+"/img/"+n+".png "+_+" "+t+"\n",Blockly.getMainWorkspace().clear()},A="";for(l in e)e.hasOwnProperty(l)&&e[l].forEach(r);for(l in o){try{r(o[l])}catch(e){}document.getElementById("startBlocks").innerHTML="",Blockly.getMainWorkspace().clear()}for(example in _)!function(e){$.ajax({type:"GET",url:e,dataType:"xml",success:function(o){var _=(new XMLSerializer).serializeToString(o);_=(_=_.replace('<xml xmlns="http://www.w3.org/1999/xhtml">',"")).replace("</xml>",""),document.getElementById("startBlocks").innerHTML=_,Blockly.mainWorkspace.clear(),Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var t=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),l=t.width+20,i=t.height+20,n=e;n=(n=n.replace("bly","png")).replace("doc/examples/",""),A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_example.html?name="+e+" doc/"+roboblocksLanguage+"/img/"+n+" "+l+" "+i+"\n"},async:!1})}("doc/examples/"+_[example]);return window.open(makeTextFile(A),"_blank"),a},this.JST=this.JST||{},this.JST.advanced_conversion=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=value_num)?"":__t)+","+(null==(__t=convertion)?"":__t);return __p},this.JST.advanced_map=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="map("+(null==(__t=num)?"":__t)+","+(null==(__t=from_min)?"":__t)+","+(null==(__t=from_max)?"":__t)+","+(null==(__t=to_min)?"":__t)+","+(null==(__t=to_max)?"":__t)+")";return __p},this.JST.base_delay=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="delay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.base_map=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="map("+(null==(__t=value_num)?"":__t)+",0,1023,0,"+(null==(__t=value_dmax)?"":__t)+")";return __p},this.JST.base_millis=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="millis()\n";return __p},this.JST.bq_bat=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Distance("+(null==(__t=trigger_pin)?"":__t)+","+(null==(__t=echo_pin)?"":__t)+")";return __p},this.JST.bq_bat_definitions_distance=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="long Distance(int trigger_pin, int echo_pin)\n{\n  long microseconds = TP_init(trigger_pin, echo_pin);\n  long distance;\n  distance = microseconds/29/2;\n  if (distance == 0){\n    distance = 999;\n  }\n  return distance;\n}\n";return __p},this.JST.bq_bat_definitions_tp_init=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="//bqBAT\nlong TP_init(int trigger_pin, int echo_pin)\n{\n  digitalWrite(trigger_pin, LOW);\n  delayMicroseconds(2);\n  digitalWrite(trigger_pin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigger_pin, LOW);\n  long microseconds = pulseIn(echo_pin ,HIGH);\n  return microseconds;\n}\n";return __p},this.JST.bq_bat_setups_echo=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=echo_pin)?"":__t)+" , INPUT );\n";return __p},this.JST.bq_bat_setups_trigger=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=trigger_pin)?"":__t)+" , OUTPUT );\n";return __p},this.JST.bq_bluetooth_def_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <SoftwareSerial.h>";return __p},this.JST.bq_bluetooth_def_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n  pinMode("+(null==(__t=NextPIN)?"":__t)+", OUTPUT);\n  _blueToothSerial.begin("+(null==(__t=baud_rate)?"":__t)+");\n  _blueToothSerial.flush();\n";return __p},this.JST.bq_button=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_button_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT_PULLUP);\n";return __p},this.JST.bq_buttons=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="  adc_key_in =analogRead("+(null==(__t=dropdown_pin)?"":__t)+");\n  key = get_key(adc_key_in);\n  if (key != oldkey)\n  {\n    delay(50);\n    adc_key_in = analogRead("+(null==(__t=dropdown_pin)?"":__t)+");\n    key = get_key(adc_key_in);\n    if (key != oldkey)\n    {\n      oldkey = key;\n      if (key >=0){\n        switch(key)\n        {\n          case 0:\n           "+(null==(__t=code_btn1)?"":__t)+"\n          break;\n          case 1:\n           "+(null==(__t=code_btn2)?"":__t)+"\n          break;\n          case 2:\n           "+(null==(__t=code_btn3)?"":__t)+"\n          break;\n          case 3:\n           "+(null==(__t=code_btn4)?"":__t)+"\n          break;  \n          case 4:\n           "+(null==(__t=code_btn5)?"":__t)+"\n          break;\n        }      \n      }\n    }\n  }\n";return __p},this.JST.bq_buttons_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="int get_key(unsigned int input)\n  {\n    int k;\n    for (k = 0; k < NUM_KEYS; k++)\n    {\n      if (input < adc_key_val[k])\n      {\n        return k;\n      }\n    }\n    if (k >= NUM_KEYS)k = -1;\n      return k;\n}\n";return __p},this.JST.bq_buttons_definitions_variables=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="//bqButtons\nint adc_key_val[5] ={20,50, 100, 200, 600 };\nint NUM_KEYS = 5;\nint adc_key_in;\nint key=-1;\nint oldkey=-1;\n";return __p},this.JST.bq_infrared=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_infrared_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.bq_joystick=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="readJoystick_"+(null==(__t=name)?"":__t)+"()";return __p},this.JST.bq_joystick_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="int * readJoystick_"+(null==(__t=name)?"":__t)+"(){\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[0]=analogRead("+(null==(__t=pinx)?"":__t)+");\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[1]=analogRead("+(null==(__t=piny)?"":__t)+");\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[2]=digitalRead("+(null==(__t=pinbutton)?"":__t)+");\n  return _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+";\n}";return __p},this.JST.bq_joystick_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=pinbutton)?"":__t)+",INPUT_PULLUP);\n";return __p},this.JST.bq_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.bq_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.bq_photoresistor=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_piezo_buzzer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.bq_piezo_buzzerav=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=Buzztone)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n\n";return __p},this.JST.bq_potentiometer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bt_serial_available=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if (_blueToothSerial.available()>0){\n"+(null==(__t=branch)?"":__t)+"\n}\n";return __p},this.JST.controls_doWhile=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="do {\n"+(null==(__t=branch)?"":__t)+"\n} while ("+(null==(__t=argument0)?"":__t)+");\n";return __p},this.JST.controls_execute=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=content)?"":__t)+"\n";return __p},this.JST.controls_else=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_elseif=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_if=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_setupLoop=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=branch)?"":__t)+"\n";return __p},this.JST.controls_whileUntil=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="while ("+(null==(__t=argument0)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.inout_analog_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_analog_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_analog_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=value_num)?"":__t)+");\n";return __p},this.JST.inout_analog_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_builtin_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite(13,"+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_builtin_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode(13,OUTPUT);\n";return __p},this.JST.inout_digital_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_digital_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_digital_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_digital_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_highlow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=bool_value)?"":__t;return __p},this.JST.lcd_clear=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.clear();\n";return __p},this.JST.lcd_def_declare=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="LiquidCrystal lcd("+(null==(__t=lcd_1)?"":__t)+", "+(null==(__t=lcd_2)?"":__t)+", "+(null==(__t=lcd_3)?"":__t)+", "+(null==(__t=lcd_4)?"":__t)+", "+(null==(__t=lcd_5)?"":__t)+", "+(null==(__t=lcd_6)?"":__t)+");\n";return __p},this.JST.lcd_def_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <Wire.h>\n#include <LiquidCrystal.h>";return __p},this.JST.lcd_def_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.begin(16, 2);\nlcd.clear();\n";return __p},this.JST.lcd_print=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.print("+(null==(__t=val)?"":__t)+");\n";return __p},this.JST.lcd_print_pos=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.setCursor("+(null==(__t=ycoor)?"":__t)+","+(null==(__t=xcoor)?"":__t)+");\nlcd.print("+(null==(__t=val)?"":__t)+");\n";return __p},this.JST.lcd_setBacklight=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.setBacklight("+(null==(__t=state)?"":__t)+");\n";return __p},this.JST.logic_compare=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.logic_negate=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="!"+(null==(__t=argument0)?"":__t);return __p},this.JST.logic_operation=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+""+(null==(__t=operator)?"":__t)+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic_pow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pow("+(null==(__t=argument0)?"":__t)+","+(null==(__t=argument1)?"":__t)+")";return __p},this.JST.math_modulo=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+"%"+(null==(__t=argument1)?"":__t);return __p},this.JST.math_random_bitOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned int bitOut(void)\n{\n  static unsigned long firstTime=1, prev=0;\n  unsigned long bit1=0, bit0=0, x=0, port=0, limit=99;\n  if (firstTime)\n  {\n    firstTime=0;\n    prev=analogRead(port);\n  }\n  while (limit--)\n  {\n    x=analogRead(port);\n    bit1=(prev!=x?1:0);\n    prev=x;\n    x=analogRead(port);\n    bit0=(prev!=x?1:0);\n    prev=x;\n    if (bit1!=bit0)\n      break;\n  }\n  return bit1;\n}\n";return __p},this.JST.math_random_seedOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned long seedOut(unsigned int noOfBits)\n{\n  unsigned long seed=0;\n  for (int i=0;i<noOfBits;++i)\n    seed = (seed<<1) | bitOut();\n  return seed;\n}\n";return __p},this.JST.math_random=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="random("+(null==(__t=value_num)?"":__t)+","+(null==(__t=value_dmax)?"":__t)+")";return __p},this.JST.procedures_callnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+");\n";return __p},this.JST.procedures_callreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+")";return __p},this.JST.procedures_defnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.procedures_defreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+"\n"+(null==(__t=returnValue)?"":__t)+" }\n";return __p},this.JST.serial_available=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if (Serial.available()>0){\n"+(null==(__t=branch)?"":__t)+"\n}\n";return __p},this.JST.serial_parseint=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.parseInt()\n";return __p},this.JST.serial_parseint_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_print=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.print("+(null==(__t=content)?"":__t)+");\n";return __p},this.JST.serial_print_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_println=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.println("+(null==(__t=content)?"":__t)+");\n";return __p},this.JST.serial_println_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.read()";return __p},this.JST.serial_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_readstring=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.readString()";return __p},this.JST.serial_readstring_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_special=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=char)?"":__t;return __p},this.JST.servo_move=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="servos["+(null==(__t=dropdown_pin)?"":__t)+"].write("+(null==(__t=value_degree)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.servo_move_definitions_include=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servos[13];";return __p},this.JST.servo_move_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="servos["+(null==(__t=dropdown_pin)?"":__t)+"].attach("+(null==(__t=dropdown_pin)?"":__t)+");";return __p},this.JST.text_equalsIgnoreCase=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".equalsIgnoreCase("+(null==(__t=string2)?"":__t)+")";return __p},this.JST.text_length=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+".length()";return __p},this.JST.text_substring=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".substring("+(null==(__t=from)?"":__t)+","+(null==(__t=to)?"":__t)+")";return __p},this.JST.variables_set=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=varName)?"":__t)+"="+(null==(__t=varValue)?"":__t)+";\n";return __p},this.JST.zum_button=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_button_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=pullup)?"":__t)+");\n";return __p},this.JST.zum_follower=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if(digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")==HIGH)\n{\n  "+(null==(__t=code_btn1)?"":__t)+"\n}\nif(digitalRead("+(null==(__t=NextPIN)?"":__t)+")==HIGH)\n{\n  "+(null==(__t=code_btn2)?"":__t)+"\n}\n";return __p},this.JST.zum_follower_setups_nextpin=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=NextPIN)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_follower_setups_pin=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_infrared=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_infrared_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.zum_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.zum_photoresistor=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_piezo_buzzer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.zum_piezo_buzzerav=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=Buzztone)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n\n";return __p},this.JST.zum_potentiometer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p};var JST=this.JST;Blockly.Arduino.procedures_callnoreturn=function(){var e,o=this.getFieldValue("PROCEDURES"),_=[],t="";try{for(var l=0;l<this.getVariables(o).length;l++)_[l]=Blockly.Arduino.valueToCode(this,"ARG"+l,Blockly.Arduino.ORDER_NONE)||"",t+=(e=RoboBlocks.findPinMode(_[l])).code,_[l]=e.pin}catch(e){}var i=_.join(", ");return t+=JST.procedures_callnoreturn({funcName:o,funcArgs:i})},Blockly.Blocks.procedures_callnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file = "doc/"+roboblocksLanguage+"/procedures_callnoreturn.html";$("#doc").load(file);});<\/script>',examples:["procedures_callnoreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLNORETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.setInputsInline(!1)},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length)}return e},getProcedures:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[];if(e[0].length>0)for(var _ in e[0]){var t=e[0][_][0];t=this.validName(t),o.push([t,t])}else o.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")]);return o},maxVariableNumber:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[],_=0;if(e[0].length>0||e[1].length>0){for(var t in e[0])e[0][t][1].length>_&&(_=e[0][t][1].length);return _}o.push(["",""])},getVariables:function(e){try{var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),_=[];if(o[0].length>0){for(var t in o[0])if(o[0][t][0]===e)return o[0][t][1]}else _.push(["",""])}catch(e){}},exists:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(e[0].length>0))return!1;for(var o in e[0])if(e[0][o][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(e){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(e){}},addVariables:function(){var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;if(e){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),e.length>=this.last_variables.length)o=e.length;else if(this.last_variables)try{o=this.last_variables.length}catch(e){}for(var _=0;_<o;_++)null===this.getInput("ARG"+_)?this.appendValueInput("ARG"+_).appendField(e[_],"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT):e[_]&&this.getFieldValue("ARG_NAME"+_)?this.setFieldValue(e[_],"ARG_NAME"+_):this.removeInput("ARG"+_);this.arguments_=e}},renameProcedure:function(e,o){if(this.last_procedure){var _=this.getProcedures();for(var t in _)Blockly.Names.equals(e,_[t][0])&&(this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.addVariables());this.last_procedure===e&&(this.last_procedure=o);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(e){}}},changeVariables:function(){for(var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;o<this.maxVariableNumber()&&null!==this.getInput("ARG"+o);o++)this.removeInput("ARG"+o);for(var _ in e)this.appendValueInput("ARG"+_).appendField(e[_]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=e},mutationToDom:function(){var e=document.createElement("mutation");e.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var o=0;o<this.arguments_.length;o++){var _=document.createElement("arg");_.setAttribute("name",this.arguments_[o]),e.appendChild(_)}return e},domToMutation:function(e){this.xmlElement=e;var o=e.getAttribute("name");this.last_procedure=o,this.setFieldValue(o,"PROCEDURES");for(var _=0;_<e.childNodes.length;_++)this.appendValueInput("ARG"+_).appendField(e.childNodes[_].getAttribute("name"),"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.procedures_callreturn=function(){for(var e,o=this.getFieldValue("PROCEDURES"),_=[],t="",l=0;l<this.getVariables(o).length;l++)_[l]=Blockly.Arduino.valueToCode(this,"ARG"+l,Blockly.Arduino.ORDER_NONE)||"null",t+=(e=RoboBlocks.findPinMode(_[l])).code,_[l]=e.pin;var i=_.join(", ");return t+=JST.procedures_callreturn({funcName:o,funcArgs:i}),[t,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.procedures_callreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file = "doc/"+roboblocksLanguage+"/procedures_callreturn.html";$("#doc").load(file);});<\/script>',examples:["procedures_callreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLRETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},getProcedures:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[];if(e[1].length>0)for(var _ in e[1]){var t=e[1][_][0];t=this.validName(t),o.push([t,t])}else o.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")]);return o},maxVariableNumber:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[],_=0;if(e[1].length>0){for(var t in e[1])e[1][t][1].length>_&&(_=e[1][t][1].length);return _}o.push(["",""])},getVariables:function(e){try{var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),_=[];if(o[1].length>0){for(var t in o[1])if(o[1][t][0]===e)return o[1][t][1]}else _.push(["",""])}catch(e){}},exists:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(e[1].length>0))return!1;for(var o in e[1])if(e[1][o][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(e){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(e){}},addVariables:function(){var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;if(e){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),e.length>=this.last_variables.length)o=e.length;else if(this.last_variables)try{o=this.last_variables.length}catch(e){}for(var _=0;_<o;_++)null===this.getInput("ARG"+_)?this.appendValueInput("ARG"+_).appendField(e[_],"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT):e[_]&&this.getFieldValue("ARG_NAME"+_)?this.setFieldValue(e[_],"ARG_NAME"+_):this.removeInput("ARG"+_);this.arguments_=e}},renameProcedure:function(e,o){if(this.last_procedure){var _=this.getProcedures();for(var t in _)Blockly.Names.equals(e,_[t][0])&&(this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"));this.last_procedure===e&&(this.last_procedure=o);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(e){}}},changeVariables:function(){for(var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;o<this.maxVariableNumber()&&null!==this.getInput("ARG"+o);o++)this.removeInput("ARG"+o);for(var _ in e)this.appendValueInput("ARG"+_).appendField(e[_]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=e},mutationToDom:function(){var e=document.createElement("mutation");e.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var o=0;o<this.arguments_.length;o++){var _=document.createElement("arg");_.setAttribute("name",this.arguments_[o]),e.appendChild(_)}return e},domToMutation:function(e){this.xmlElement=e;var o=e.getAttribute("name");this.last_procedure=o,this.setFieldValue(o,"PROCEDURES");for(var _=0;_<e.childNodes.length;_++)this.appendValueInput("ARG"+_).appendField(e.childNodes[_].getAttribute("name"),"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.procedures_defnoreturn=function(){var e=this.getFieldValue("NAME"),o=Blockly.Arduino.statementToCode(this,"STACK");o=o.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o);var _=this.paramString,t=JST.procedures_defnoreturn({returnType:"void",funcName:e,args:_,branch:o});return t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[e]=t,null},Blockly.Blocks.procedures_defnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_defnoreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_callnoreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var e=new Blockly.FieldTextInput("",Blockly.Procedures.rename);e.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")).appendField(e,"NAME").appendField("","PARAMS"),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_TOOLTIP")),this.arguments_=[],this.type_arguments_=[],this.setStatements_(!0),this.setInputsInline(!1)},setStatements_:function(e){this.hasStatements_!==e&&(e?(this.appendStatementInput("STACK").appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_DO")),this.getInput("RETURN")&&this.moveInputBefore("STACK","RETURN")):this.removeInput("STACK",!0),this.hasStatements_=e)},updateParams_:function(){for(var e=!1,o={},_=0;_<this.arguments_.length;_++){if(o["arg_"+this.arguments_[_].toLowerCase()]){e=!0;break}o["arg_"+this.arguments_[_].toLowerCase()]=!0}e?this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEF_DUPLICATE_WARNING")):this.setWarningText(null);var t=[];for(var _ in this.arguments_)try{t.push(this.type_arguments_[_]+" "+this.arguments_[_])}catch(e){}this.paramString=t.join(", "),Blockly.Events.disable();try{this.setFieldValue(this.paramString,"PARAMS")}finally{Blockly.Events.enable()}},mutationToDom:function(e){var o=document.createElement("mutation");e&&o.setAttribute("name",this.getFieldValue("NAME"));for(var _=0;_<this.arguments_.length;_++){var t=document.createElement("arg_name");t.setAttribute("name",this.arguments_[_]),e&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[_]),o.appendChild(t),t=document.createElement("arg_type");try{t.setAttribute("name",this.type_arguments_[_]),e&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[_])}catch(e){}o.appendChild(t)}return this.hasStatements_||o.setAttribute("statements","false"),o},domToMutation:function(e){this.arguments_=[];for(var o,_=0;o=e.childNodes[_];_++)if("arg_name"===o.nodeName.toLowerCase()&&this.arguments_.push(o.getAttribute("name")),"arg_type"===o.nodeName.toLowerCase())try{this.type_arguments_.push(o.getAttribute("name"))}catch(e){}this.updateParams_(),Blockly.Procedures.mutateCallers(this),this.setStatements_("false"!==e.getAttribute("statements"))},decompose:function(e){var o=e.newBlock("procedures_mutatorcontainer");o.initSvg(),this.getInput("RETURN")?o.setFieldValue(this.hasStatements_?"TRUE":"FALSE","STATEMENTS"):o.getInput("STATEMENT_INPUT").setVisible(!1);for(var _=o.getInput("STACK").connection,t=0;t<this.arguments_.length;t++){var l=e.newBlock("procedures_mutatorarg");l.initSvg(),l.setFieldValue(this.type_arguments_[t],"TYPE"),l.setFieldValue(this.arguments_[t],"NAME"),l.oldLocation=t,_.connect(l.previousConnection),_=l.nextConnection}return Blockly.Procedures.mutateCallers(this),o},compose:function(e){this.arguments_=[],this.type_arguments_=[],this.paramIds_=[];for(var o=e.getInputTargetBlock("STACK");o;)this.arguments_.push(o.getFieldValue("NAME")),this.type_arguments_.push(o.getFieldValue("TYPE")),this.paramIds_.push(o.id),o=o.nextConnection&&o.nextConnection.targetBlock();this.updateParams_(),Blockly.Procedures.mutateCallers(this);var _=e.getFieldValue("STATEMENTS");if(null!==_&&(_="TRUE"==_,this.hasStatements_!=_))if(_)this.setStatements_(!0),Blockly.Mutator.reconnect(this.statementConnection_,this,"STACK"),this.statementConnection_=null;else{var t=this.getInput("STACK").connection;if(this.statementConnection_=t.targetConnection,this.statementConnection_){var l=t.targetBlock();l.unplug(),l.bumpNeighbours_()}this.setStatements_(!1)}},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!1]},getVars:function(){return this.arguments_},renameVar:function(e,o){for(var _=!1,t=0;t<this.arguments_.length;t++)Blockly.Names.equals(e,this.arguments_[t])&&(this.arguments_[t]=o,_=!0);if(_&&(this.updateParams_(),this.mutator.isVisible()))for(var l,i=this.mutator.workspace_.getAllBlocks(),t=0;l=i[t];t++)"procedures_mutatorarg"==l.type&&Blockly.Names.equals(e,l.getFieldValue("NAME"))&&l.setFieldValue(o,"NAME")},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(this.reserved_words=Blockly.Arduino.RESERVED_WORDS_.split(","),e===this.reserved_words[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},customContextMenu:function(e){var o={enabled:!0},_=this.getFieldValue("NAME");o.text=Blockly.Msg.PROCEDURES_CREATE_DO.replace("%1",_);var t=goog.dom.createDom("mutation");t.setAttribute("name",_);for(n=0;n<this.arguments_.length;n++){var l=goog.dom.createDom("arg");l.setAttribute("name",this.arguments_[n]),t.appendChild(l)}var i=goog.dom.createDom("block",null,t);if(i.setAttribute("type",this.callType_),o.callback=Blockly.ContextMenu.callbackFactory(this,i),e.push(o),!this.isCollapsed())for(var n=0;n<this.arguments_.length;n++){var o={enabled:!0},_=this.arguments_[n];o.text=Blockly.Msg.VARIABLES_SET_CREATE_GET.replace("%1",_);var a=goog.dom.createDom("field",null,_);a.setAttribute("name","VAR"),(i=goog.dom.createDom("block",null,a)).setAttribute("type","variables_get"),o.callback=Blockly.ContextMenu.callbackFactory(this,i),e.push(o)}},callType_:"procedures_callnoreturn",onchange:function(){if(this.last_procedure!==this.getFieldValue("NAME")){var e=this.getFieldValue("NAME");e=this.validName(e);try{this.setFieldValue(e,"NAME")}catch(e){}this.last_procedure=e}}},Blockly.Blocks.procedures_mutatorcontainer={init:function(){this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORCONTAINER_Field")),this.appendStatementInput("STACK"),this.appendDummyInput("STATEMENT_INPUT").appendField(Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS).appendField(new Blockly.FieldCheckbox("TRUE"),"STATEMENTS"),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1}},Blockly.Blocks.procedures_mutatorarg={init:function(){var e=new Blockly.FieldTextInput("x",this.validator_);this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORARG_Field")).appendField(new Blockly.FieldDropdown([["int","int"],["String","String"]]),"TYPE").appendField(e,"NAME"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1,e.onFinishEditing_=this.createNewVar_,e.onFinishEditing_("x")},onchange:function(){if(this.last_variable!==this.getFieldValue("NAME")){var e=this.getFieldValue("NAME");e=this.validName(e);try{this.setFieldValue(e,"NAME")}catch(e){}this.last_variable=e}},validName:Blockly.Blocks.procedures_defnoreturn.validName,validator_:function(e){return(e=e.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""))||null},createNewVar_:function(e){var o=this.sourceBlock_;o&&o.workspace&&o.workspace.options&&o.workspace.options.parentWorkspace&&o.workspace.options.parentWorkspace.createVariable(e)}},Blockly.Arduino.procedures_defreturn=function(){var e=this.getFieldValue("NAME"),o=Blockly.Arduino.statementToCode(this,"STACK");o=o.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o);var _=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"",t="";_=_.replace(/&quot;/g,'"');var l=this.getReturnType();if(_){var i=RoboBlocks.findPinMode(_);_=i.code,_+="  return "+i.pin+";\n"}var n=this.paramString;return t+=JST.procedures_defreturn({returnType:l,funcName:e,args:n,branch:o,returnValue:_}),t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[e]=t,null},Blockly.Blocks.procedures_defreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_defreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_callreturn_example.bly"],init:function(){var e=new Blockly.FieldTextInput("",Blockly.Procedures.rename);e.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")).appendField(e,"NAME").appendField("","PARAMS"),this.appendValueInput("RETURN").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_TOOLTIP")),this.arguments_=[],this.setStatements_(!0),this.statementConnection_=null},isVariable:function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return!1},getReturnType:function(){var e,o=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";o=RoboBlocks.findPinMode(o).pin;var _=!1;for(var t in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[t].search(o+" \\(")>=0){_=!0;break}if(o||(e="void"),o.search('"')>=0)e="String";else if(_)for(t in Blockly.Arduino.definitions_)Blockly.Arduino.definitions_[t].search(o)>=0&&(e="int"===Blockly.Arduino.definitions_[t].substring(0,3)||"//b"===Blockly.Arduino.definitions_[t].substring(0,3)?"int *"===Blockly.Arduino.definitions_[t].substring(0,5)||"int _"===Blockly.Arduino.definitions_[t].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[t].substring(0,3)?"String":"");else e=this.isVariable(o)?RoboBlocks.variables[o][0]:o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0?"int":o.search("readJoystick")>=0||"{"===o[0]?"int *":"void";return e},setStatements_:Blockly.Blocks.procedures_defnoreturn.setStatements_,updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,mutationToDom:Blockly.Blocks.procedures_defnoreturn.mutationToDom,domToMutation:Blockly.Blocks.procedures_defnoreturn.domToMutation,decompose:Blockly.Blocks.procedures_defnoreturn.decompose,compose:Blockly.Blocks.procedures_defnoreturn.compose,getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!0]},getVars:Blockly.Blocks.procedures_defnoreturn.getVars,renameVar:Blockly.Blocks.procedures_defnoreturn.renameVar,customContextMenu:Blockly.Blocks.procedures_defnoreturn.customContextMenu,callType_:"procedures_callreturn"},Blockly.Arduino.procedures_ifreturn=function(){var e=Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"",o="",_=RoboBlocks.findPinMode(e);o+=_.code,o+="if ("+(e=_.pin)+") {\n";var t=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return _=RoboBlocks.findPinMode(t),o+=_.code,o+="  return ("+t+");\n",o+="}\n"},Blockly.Blocks.procedures_ifreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_ifreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_ifreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendValueInput("CONDITION").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("value",Number(this.hasReturnValue_)),e},domToMutation:function(e){var o=e.getAttribute("value");this.hasReturnValue_=1===o},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("procedures_defreturn"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Arduino.procedures_return=function(){var e="",o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return e+=RoboBlocks.findPinMode(o).code,e+="  return ("+o+");\n"},Blockly.Blocks.procedures_return={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_return.html"; $("#doc").load(file);});<\/script>',examples:["procedures_return_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("value",Number(this.hasReturnValue_)),e},domToMutation:function(e){var o=e.getAttribute("value");this.hasReturnValue_=1===o},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("procedures_defreturn"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Arduino.base_delay=function(){var e=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,o+=JST.base_delay({delay_time:e})},Blockly.Blocks.base_delay={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_delay.html"; $("#doc").load(file);});<\/script>',examples:["base_delay_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_WAIT")).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_TOOLTIP"))}},Blockly.Arduino.advanced_map=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FROM_MIN",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"FROM_MAX",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"TO_MIN",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"TO_MAX",Blockly.Arduino.ORDER_NONE),i="",n=RoboBlocks.findPinMode(e);return i+=n.code,e=n.pin,n=RoboBlocks.findPinMode(o),i+=n.code,o=n.pin,n=RoboBlocks.findPinMode(_),i+=n.code,_=n.pin,n=RoboBlocks.findPinMode(t),i+=n.code,t=n.pin,n=RoboBlocks.findPinMode(l),i+=n.code,l=n.pin,i+=JST.advanced_map({num:e,from_min:o,from_max:_,to_min:t,to_max:l}),[i,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/advanced_map.html"; $("#doc").load(file);});<\/script>',examples:["advanced_map_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_MAP")).setCheck(Number),this.appendValueInput("FROM_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_FROM")).setCheck(Number),this.appendValueInput("FROM_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.appendValueInput("TO_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TO")).setCheck(Number),this.appendValueInput("TO_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TOOLTIP"))}},Blockly.Arduino.base_map=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.base_map({value_num:e,value_dmax:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_map.html"; $("#doc").load(file);});<\/script>',examples:["base_map_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_VALUE_TO")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_TOOLTIP"))}},Blockly.Arduino.base_us=function(){return["micros()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_us={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_us.html"; $("#doc").load(file);});<\/script>',examples:["base_us_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US_TOOLTIP"))}},Blockly.Arduino.controls_doWhile=function(){var e=Blockly.Arduino.valueToCode(this,"WHILE",Blockly.Arduino.ORDER_NONE)||"";e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.statementToCode(this,"DO");o=o.replace(/&quot;/g,'"');var _="";return Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),"UNTIL"===this.getFieldValue("MODE")&&(e.match(/^\w+$/)||(e="("+e+")"),e="!"+e),_+=JST.controls_doWhile({argument0:e,branch:o})},Blockly.Blocks.controls_doWhile={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_doWhile.html"; $("#doc").load(file);});<\/script>',examples:["controls_doWhile_example1.bly","controls_doWhile_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_OPERATOR_DO")),this.appendValueInput("WHILE").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_TOOLTIP"))}},Blockly.Arduino.controls_execute=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="";if(e=e.replace(/^"/,""),(e=e.replace(/"$/g,"")).match(/^#include /)){var _=JST.controls_execute({content:e});"define_include"in Blockly.Arduino.definitions_?Blockly.Arduino.definitions_.define_include+=_:Blockly.Arduino.definitions_.define_include=_}else o+=JST.controls_execute({content:e});return o},Blockly.Blocks.controls_execute={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_execute.html"; $("#doc").load(file);});<\/script>',examples:["controls_execute_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE_TOOLTIP"))}},Blockly.Arduino.controls_flow_statements=function(){switch(this.getFieldValue("FLOW")){case"BREAK":return"break;\n";case"CONTINUE":return"continue;\n"}throw"Unknown flow statement."},Blockly.Blocks.controls_flow_statements={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_flow_statements.html"; $("#doc").load(file);});<\/script>',examples:["controls_flow_statements_example1.bly","controls_flow_statements_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL);var e=new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK")||"BREAK","BREAK"],[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE")||"CONTINUE","CONTINUE"]]);this.appendDummyInput().appendField(e,"FLOW").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP")),this.setPreviousStatement(!0);var o=this;this.setTooltip(function(){var e=o.getFieldValue("FLOW");return Blockly.Blocks.controls_flow_statements.TOOLTIPS[e]})},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("controls_repeat"===o.type||"controls_forEach"===o.type||"controls_for"===o.type||"controls_whileUntil"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Blocks.controls_flow_statements.TOOLTIPS={BREAK:RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"),CONTINUE:RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE")},Blockly.Arduino.controls_for=function(){var e=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",o=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"",_=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"",t=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(t=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+t);var l="",i=RoboBlocks.findPinMode(e);l+=i.code,e=i.pin,l+=(i=RoboBlocks.findPinMode(o)).code,o=i.pin,l+=(i=RoboBlocks.findPinMode(_)).code,_=i.pin;var n=parseFloat(o)<=parseFloat(_);return l+="for ("+e+" = "+o+"; "+e+(n?" <= ":" >= ")+_+"; "+e+(n?"++":"--")+") {\n"+t+"}\n"},Blockly.Blocks.controls_for={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_for.html"; $("#doc").load(file);});<\/script>',examples:["controls_for_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_WITH")),this.appendValueInput("FROM").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_FROM")),this.appendValueInput("TO").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_TO")),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0);var e=this;this.setTooltip(function(){return RoboBlocks.LANG_CONTROLS_FOR_TOOLTIP.replace("%1",e.getFieldValue("VAR"))})},getVars:function(){return[this.getFieldValue("VAR")]},getVariables:function(){var e=Blockly.Variables.allUsedVariables,o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},isVariable:function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return!1},onchange:function(){try{this.isVariable(Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ATOMIC))?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_FROM_WARNING")):this.isVariable(Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ATOMIC))?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_TO_WARNING")):this.setWarningText(null)}catch(e){}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")}},Blockly.Arduino.controls_if=function(){var e=0,o=Blockly.Arduino.valueToCode(this,"IF"+e,Blockly.Arduino.ORDER_NONE);o=o.replace(/&quot;/g,'"');var _=Blockly.Arduino.statementToCode(this,"DO"+e),t="",l=RoboBlocks.findPinMode(o);for(t+=l.code,o=l.pin,t+=JST.controls_if({argument:o,branch:_}),e=1;e<=this.elseifCount_;e++)o=Blockly.Arduino.valueToCode(this,"IF"+e,Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.statementToCode(this,"DO"+e),t+=JST.controls_elseif({argument:o,branch:_});return this.elseCount_&&(_=Blockly.Arduino.statementToCode(this,"ELSE"),t+=JST.controls_else({argument:o,branch:_})),_=_.replace(/&quot;/g,'"'),(t=t.replace(/&quot;/g,'"'))+"\n"},Blockly.Blocks.controls_if={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_if.html"; $("#doc").load(file);});<\/script>',examples:["controls_if_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendStatementInput("DO0").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));var e=this;this.setTooltip(function(){return e.elseifCount_||e.elseCount_?!e.elseifCount_&&e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_2"):e.elseifCount_&&!e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_3"):e.elseifCount_&&e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_4"):"":RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_1")}),this.elseifCount_=0,this.elseCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var e=document.createElement("mutation");return this.elseifCount_&&e.setAttribute("elseif",this.elseifCount_),this.elseCount_&&e.setAttribute("else",1),e},domToMutation:function(e){this.elseifCount_=window.parseInt(e.getAttribute("elseif"),10),this.elseCount_=window.parseInt(e.getAttribute("else"),10);for(var o=1;o<=this.elseifCount_;o++)this.appendValueInput("IF"+o).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSEIF")),this.appendStatementInput("DO"+o).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT);this.elseCount_&&this.appendStatementInput("ELSE").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSE")).setAlign(Blockly.ALIGN_RIGHT)},decompose:function(e){var o=Blockly.Block.obtain(e,"controls_if_if");o.initSvg();for(var _=o.getInput("STACK").connection,t=1;t<=this.elseifCount_;t++){var l=Blockly.Block.obtain(e,"controls_if_elseif");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}if(this.elseCount_){var i=Blockly.Block.obtain(e,"controls_if_else");i.initSvg(),_.connect(i.previousConnection)}return o},compose:function(e){this.elseCount_&&this.removeInput("ELSE"),this.elseCount_=0;for(var o=this.elseifCount_;o>0;o--)this.removeInput("IF"+o),this.removeInput("DO"+o);this.elseifCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){switch(_.type){case"controls_if_elseif":this.elseifCount_++;var t=this.appendValueInput("IF"+this.elseifCount_).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSEIF")),l=this.appendStatementInput("DO"+this.elseifCount_);l.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),_.valueConnection_&&t.connection.connect(_.valueConnection_),_.statementConnection_&&l.connection.connect(_.statementConnection_);break;case"controls_if_else":this.elseCount_++;var i=this.appendStatementInput("ELSE");i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSE")).setAlign(Blockly.ALIGN_RIGHT),_.statementConnection_&&i.connection.connect(_.statementConnection_);break;default:throw"Unknown block type."}_=_.nextConnection&&_.nextConnection.targetBlock()}},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=1;o;){switch(o.type){case"controls_if_elseif":var t=this.getInput("IF"+_),l=this.getInput("DO"+_);o.valueConnection_=t&&t.connection.targetConnection,o.statementConnection_=l&&l.connection.targetConnection,_++;break;case"controls_if_else":l=this.getInput("ELSE"),o.statementConnection_=l&&l.connection.targetConnection;break;default:throw"Unknown block type."}o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.controls_if_if={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_Field_IF")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_else={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_Field_ELSE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.controls_setupLoop=function(){var e=Blockly.Arduino.statementToCode(this,"SETUP");e=e.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_int0_&&(e+=Blockly.Arduino.setups_.setup_int0_),Blockly.Arduino.setups_.X_SETUP=JST.controls_setupLoop({branch:e});var o=Blockly.Arduino.statementToCode(this,"LOOP");return o=o.replace(/&quot;/g,'"'),o=JST.controls_setupLoop({branch:o})},Blockly.Blocks.controls_setupLoop={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_setupLoop.html"; $("#doc").load(file);});<\/script>',examples:["controls_setupLoop_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("SETUP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE")),this.appendStatementInput("LOOP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE")),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_TOOLTIP"))}};var indentSentences=function(e){var o=e.split("\n"),_="";for(var t in o)_+="  "+o[t]+"\n";return _};return Blockly.Arduino.controls_switch=function(){var e=0,o=Blockly.Arduino.valueToCode(this,"IF0",Blockly.Arduino.ORDER_NONE)||"",_=Blockly.Arduino.statementToCode(this,"DO"+e);_=indentSentences(_);var t="",l=RoboBlocks.findPinMode(o);for(t+=l.code,t+="switch ("+(o=l.pin)+")\n{",e=1;e<=this.switchCount_;e++)o=Blockly.Arduino.valueToCode(this,"SWITCH"+e,Blockly.Arduino.ORDER_NONE)||"",_=Blockly.Arduino.statementToCode(this,"DO"+e),t+=" \n  case "+o+": \n  {\n"+(_=(_=indentSentences(_)).substring(0,_.length-1))+"  break;\n  }";return this.defaultCount_&&(_=Blockly.Arduino.statementToCode(this,"DEFAULT"),t+="  \n  default:\n  {\n"+(_=(_=indentSentences(_)).substring(0,_.length-1))+"}"),t+"\n}\n"},Blockly.Blocks.controls_switch={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_switch.html"; $("#doc").load(file);});<\/script>',examples:["controls_switch_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_switch_case","controls_switch_default"]));var e=this;this.setTooltip(function(){return e.switchCount_||e.defaultCount_?!e.switchCount_&&e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_2"):e.switchCount_&&!e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_3"):e.switchCount_&&e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_4"):"":RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_1")}),this.defaultCount_=0},mutationToDom:function(){if(!this.switchCount_&&!this.defaultCount_)return null;var e=document.createElement("mutation");return this.switchCount_&&e.setAttribute("case",this.switchCount_),this.defaultCount_&&e.setAttribute("default",1),e},domToMutation:function(e){this.switchCount_=window.parseInt(e.getAttribute("case"),10),this.defaultCount_=window.parseInt(e.getAttribute("default"),10);for(var o=1;o<=this.switchCount_;o++)this.appendValueInput("SWITCH"+o).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.appendStatementInput("DO"+o).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT);this.defaultCount_&&this.appendStatementInput("DEFAULT").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT)},decompose:function(e){var o=Blockly.Block.obtain(e,"controls_switch_switch");o.initSvg();for(var _=o.getInput("STACK").connection,t=1;t<=this.switchCount_;t++){var l=Blockly.Block.obtain(e,"controls_switch_case");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}if(this.defaultCount_){var i=Blockly.Block.obtain(e,"controls_switch_default");i.initSvg(),_.connect(i.previousConnection)}return o},compose:function(e){this.defaultCount_&&this.removeInput("DEFAULT"),this.defaultCount_=0;for(var o=this.switchCount_;o>0;o--)this.removeInput("SWITCH"+o),this.removeInput("DO"+o);this.switchCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){switch(_.type){case"controls_switch_case":var t;t=1===++this.switchCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_IS"):RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE");var l=this.appendValueInput("SWITCH"+this.switchCount_).setCheck(Number).appendField(t).setAlign(Blockly.ALIGN_RIGHT);this.setInputsInline(!0);var i=this.appendStatementInput("DO"+this.switchCount_);i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DO")).setAlign(Blockly.ALIGN_RIGHT),_.valueConnection_&&l.connection.connect(_.valueConnection_),_.statementConnection_&&i.connection.connect(_.statementConnection_);break;case"controls_switch_default":this.defaultCount_++;var n=this.appendStatementInput("DEFAULT");n.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),_.statementConnection_&&n.connection.connect(_.statementConnection_);break;default:throw"Unknown block type."}_=_.nextConnection&&_.nextConnection.targetBlock()}},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=1;o;){switch(o.type){case"controls_switch_case":var t=this.getInput("SWITCH"+_),l=this.getInput("DO"+_);o.valueConnection_=t&&t.connection.targetConnection,o.statementConnection_=l&&l.connection.targetConnection,_++;break;case"controls_switch_default":l=this.getInput("DEFAULT"),o.statementConnection_=l&&l.connection.targetConnection;break;default:throw"Unknown block type."}o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.controls_switch_switch={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK"),this.setTooltip("Switch"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_case={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Switch case"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_default={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setTooltip("Switch default"),this.contextMenu=!1}},Blockly.Arduino.controls_whileUntil=function(){var e=Blockly.Arduino.valueToCode(this,"BOOL",Blockly.Arduino.ORDER_NONE)||"";e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.statementToCode(this,"DO");o=o.replace(/&quot;/g,'"');var _="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),"UNTIL"===this.getFieldValue("MODE")&&(e.match(/^\w+$/)||(e="("+e+")"),e="!"+e),_+=JST.controls_whileUntil({argument0:e,branch:o})},Blockly.Blocks.controls_whileUntil={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_whileUntil.html"; $("#doc").load(file);});<\/script>',examples:["controls_whileUntil_example.bly","controls_whileUntil1_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("MODE");return Blockly.Blocks.controls_whileUntil.TOOLTIPS[o]})}},Blockly.Blocks.controls_whileUntil.TOOLTIPS={WHILE:RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"),UNTIL:RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL")},Blockly.Arduino.inout_analog_read=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.inout_analog_read_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_analog_read"+e]=JST.inout_analog_read_setups({dropdown_pin:e}),o+=JST.inout_analog_read({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_analog_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_analog_read.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP"))}},Blockly.Arduino.inout_analog_write=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);_+=t.code,e=t.pin;var l=RoboBlocks.findPinMode(o);return _+=l.code,o=l.pin,RoboBlocks.isVariable(e)?_+=JST.inout_analog_write_setups({dropdown_pin:e,value_num:o}):Blockly.Arduino.setups_["setup_analog_write"+e]=JST.inout_analog_write_setups({dropdown_pin:e,value_num:o}),_+=JST.inout_analog_write({dropdown_pin:e,value_num:o})},Blockly.Blocks.inout_analog_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_analog_write.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_write_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE")).appendField(new Blockly.FieldImage("img/blocks/pwm_signal.png",24*options.zoom,24*options.zoom)),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_builtin_led=function(){var e=this.getFieldValue("STAT"),o="";return Blockly.Arduino.setups_.setup_green_led_13=JST.inout_builtin_led_setups({}),"TOGGLE"===e?o+="digitalWrite(13,!digitalRead(13));\n":o=JST.inout_builtin_led({dropdown_stat:e}),o},Blockly.Blocks.inout_builtin_led={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_builtin_led.html"; $("#doc").load(file);});<\/script>',examples:["inout_builtin_led_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED")).appendField(new Blockly.FieldImage("img/blocks/diode.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_STATE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_ON")||"ON","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_OFF")||"OFF","LOW"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOGGLE")||"TOGGLE","TOGGLE"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOOLTIP"))}},Blockly.Arduino.inout_digital_read=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.inout_digital_read_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_digital_read"+e]=JST.inout_digital_read_setups({dropdown_pin:e}),o+=JST.inout_digital_read({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_digital_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_read.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.setOutput(!0,Boolean),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP"))}},Blockly.Arduino.inout_digital_write=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"STAT",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,RoboBlocks.isVariable(e)?_+=JST.inout_digital_write_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_digital_write_"+e]=JST.inout_digital_write_setups({dropdown_pin:e}),_+=JST.inout_digital_write({dropdown_pin:e,dropdown_stat:o})},Blockly.Blocks.inout_digital_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_write.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendValueInput("STAT").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,null),this.setInputsInline(!0),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_digital_mode=function(){return"pinMode("+Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)+","+this.getFieldValue("MODE")+");"},Blockly.Blocks.inout_digital_mode={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_mode.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_mode_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT")||"OUTPUT","OUTPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT")||"INPUT","INPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP")||"PULLUP","INPUT_PULLUP"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,null),this.setInputsInline(!0),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP"))}},Blockly.Arduino.inout_highlow=function(){var e=this.getFieldValue("BOOL");return[JST.inout_highlow({bool_value:e}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_highlow={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_highlow.html"; $("#doc").load(file);});<\/script>',tags:["input","output"],examples:["inout_highlow_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_HIGH")||"HIGH","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_LOW")||"LOW","LOW"]]),"BOOL"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_TOOLTIP"))}},Blockly.Arduino.lcd_clear=function(){return JST.lcd_clear({})},Blockly.Blocks.lcd_clear={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_clear.html"; $("#doc").load(file);});<\/script>',examples:["lcd_clear_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_CLEAR")),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_CLEAR_TOOLTIP"))}},Blockly.Arduino.lcd_def=function(){var e={};return e.lcd_1=this.getFieldValue("LCD_1"),e.lcd_2=this.getFieldValue("LCD_2"),e.lcd_3=this.getFieldValue("LCD_3"),e.lcd_4=this.getFieldValue("LCD_4"),e.lcd_5=this.getFieldValue("LCD_5"),e.lcd_6=this.getFieldValue("LCD_6"),Blockly.Arduino.definitions_.define_lcd=JST.lcd_def_definitions({}),Blockly.Arduino.definitions_.declare_var_LCD=JST.lcd_def_declare(e),Blockly.Arduino.setups_.setup_lcd_=JST.lcd_def_setups({}),""},Blockly.Blocks.lcd_def={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_def.html"; $("#doc").load(file);});<\/script>',examples:["lcd_def_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_DEF")).appendField(new Blockly.FieldImage("img/blocks/lcd.png",52*options.zoom,24*options.zoom)),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PINS")).appendField(new Blockly.FieldTextInput("11"),"LCD_1").appendField(new Blockly.FieldTextInput("12"),"LCD_2").appendField(new Blockly.FieldTextInput("3"),"LCD_3").appendField(new Blockly.FieldTextInput("4"),"LCD_4").appendField(new Blockly.FieldTextInput("5"),"LCD_5").appendField(new Blockly.FieldTextInput("6"),"LCD_6"),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_DEF_TOOLTIP"))}},Blockly.Arduino.lcd_print=function(){var e=Blockly.Arduino.valueToCode(this,"VAL",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"XCOOR",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"YCOOR",Blockly.Arduino.ORDER_ATOMIC),t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,l=RoboBlocks.findPinMode(e),t+=l.code,e=l.pin,"TRUE"===this.getFieldValue("POS")?t+=JST.lcd_print_pos({val:e,xcoor:o,ycoor:_}):t+=JST.lcd_print({val:e}),t=t.replace(/&quot;/g,'"')},Blockly.Blocks.lcd_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_print.html"; $("#doc").load(file);});<\/script>',examples:["lcd_print_example1.bly","lcd_print_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendValueInput("VAL").appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT")),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT_POSITION")).appendField(new Blockly.FieldCheckbox("FALSE"),"POS").setAlign(Blockly.ALIGN_RIGHT),this.last_pos=this.getFieldValue("POS"),this.getPosition(),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_PRINT_TOOLTIP"))},getPosition:function(){try{this.removeInput("XCOOR"),this.removeInput("YCOOR")}catch(e){}"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField("row").setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField("column").setAlign(Blockly.ALIGN_RIGHT))},onchange:function(){this.getFieldValue("POS")!==this.last_pos&&(this.getPosition(),this.last_pos=this.getFieldValue("POS"))},mutationToDom:function(){var e=document.createElement("mutation");return"TRUE"===this.getFieldValue("POS")?e.setAttribute("fixed",!0):"FALSE"===this.getFieldValue("POS")&&e.setAttribute("fixed",!1),e},domToMutation:function(e){this.setFieldValue(e.getAttribute("fixed"),"POS"),"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField("row").setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField("column").setAlign(Blockly.ALIGN_RIGHT))}},Blockly.Arduino.lcd_setBacklight=function(){var e=this.getFieldValue("STATE");return JST.lcd_setBacklight({state:e})},Blockly.Blocks.lcd_setBacklight={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_setBacklight.html"; $("#doc").load(file);});<\/script>',tags:["lcd","screen"],examples:["lcd_setBacklight_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT")).appendField(new Blockly.FieldDropdown([["LOW","LOW"],["HIGH","HIGH"]]),"STATE").appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_CLOSE")),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_TOOLTIP"))}},Blockly.Arduino.logic_boolean=function(){return["TRUE"===this.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_boolean={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_boolean.html"; $("#doc").load(file);});<\/script>',examples:["logic_boolean_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendDummyInput().appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TRUE"),"TRUE"],[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_FALSE"),"FALSE"]]),"BOOL"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TOOLTIP"))}},Blockly.Arduino.logic_compare=function(){var e=this.getFieldValue("OP"),o=Blockly.Arduino.logic_compare.OPERATORS[e],_="=="===o||"!="===o?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,t=Blockly.Arduino.valueToCode(this,"A",_)||"",l=Blockly.Arduino.valueToCode(this,"B",_)||"",i="",n=RoboBlocks.findPinMode(t);return i+=n.code,t=n.pin,n=RoboBlocks.findPinMode(l),i+=n.code,l=n.pin,i+=JST.logic_compare({argument0:t,argument1:l,operator:o}),[i,_]},Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},Blockly.Blocks.logic_compare={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_compare.html"; $("#doc").load(file);});<\/script>',examples:["logic_compare_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A"),this.appendValueInput("B").appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.logic_compare.TOOLTIPS[o]})}},Blockly.Blocks.logic_compare.OPERATORS=[["=","EQ"],["≠","NEQ"],["<","LT"],["≤","LTE"],[">","GT"],["≥","GTE"]],Blockly.Blocks.logic_compare.TOOLTIPS={EQ:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_EQ"),NEQ:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_NEQ"),LT:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LT"),LTE:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LTE"),GT:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GT"),GTE:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GTE")},Blockly.Arduino.logic_operation=function(){var e="",o="AND"===this.getFieldValue("OP")?"&&":"OR"===this.getFieldValue("OP")?"||":"",_="&&"===o?Blockly.Arduino.ORDER_LOGICAL_AND:"||"===o?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE,t=Blockly.Arduino.valueToCode(this,"A",_)||"",l=Blockly.Arduino.valueToCode(this,"B",_)||"",i=RoboBlocks.findPinMode(t);return e+=i.code,t=i.pin,i=RoboBlocks.findPinMode(l),e+=i.code,l=i.pin,"XOR"===this.getFieldValue("OP")?e+="((!("+t+"))&&("+l+")||((!("+l+"))&&("+t+")))":"XNOR"===this.getFieldValue("OP")?e+="(("+t+")&&("+l+")||((!("+l+"))&&(!("+t+"))))":"IMPLIES"===this.getFieldValue("OP")?e+="((!("+t+"))||("+l+"))":e+="("+t+") "+o+" ("+l+")",[e,_]},Blockly.Blocks.logic_operation={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_operation.html"; $("#doc").load(file);});<\/script>',examples:["logic_operation_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A").setCheck(Boolean),this.appendValueInput("B").setCheck(Boolean).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_AND")||"AND","AND"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")||"OR","OR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XOR")||"XOR","XOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XNOR")||"XNOR","XNOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_IMPLIES")||"IMPLIES","IMPLIES"]]),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.logic_operation.TOOLTIPS[o]})}},Blockly.Blocks.logic_operation.TOOLTIPS={AND:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_AND"),OR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_OR"),XOR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XOR"),XNOR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XNOR"),IMPLIES:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES")},Blockly.Arduino.logic_negate=function(){var e=Blockly.Arduino.ORDER_UNARY_PREFIX,o=Blockly.Arduino.valueToCode(this,"BOOL",e)||"false",_="",t=RoboBlocks.findPinMode(o);return _+=t.code,o=t.pin,_+=JST.logic_negate({argument0:o}),[_,e]},Blockly.Blocks.logic_negate={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_negate.html"; $("#doc").load(file);});<\/script>',examples:["logic_negate_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_INPUT_NOT")),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_TOOLTIP"))}},Blockly.Arduino.math_arithmetic=function(){var e=this.getFieldValue("OP"),o=Blockly.Arduino.math_arithmetic.OPERATORS[e],_=o[0],t=o[1],l=Blockly.Arduino.valueToCode(this,"A",t)||"",i=Blockly.Arduino.valueToCode(this,"B",t)||"",n="",a=RoboBlocks.findPinMode(l);return n+=a.code,l=a.pin,a=RoboBlocks.findPinMode(i),n+=a.code,i=a.pin,_?(n+=JST.math_arithmetic({argument0:l,argument1:i,operator:_}),[n,t]):(n=JST.math_arithmetic_pow({argument0:l,argument1:i}),[n,Blockly.Arduino.ORDER_UNARY_POSTFIX])},Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_arithmetic={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_arithmetic.html"; $("#doc").load(file);});<\/script>',examples:["math_arithmetic_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.math_arithmetic.TOOLTIPS[o]})}},Blockly.Blocks.math_arithmetic.OPERATORS=[["+","ADD"],["-","MINUS"],["×","MULTIPLY"],["÷","DIVIDE"],["^","POWER"]],Blockly.Blocks.math_arithmetic.TOOLTIPS={ADD:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_ADD"),MINUS:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MINUS"),MULTIPLY:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY"),DIVIDE:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE"),POWER:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_POWER")},Blockly.Arduino.math_modulo=function(){var e=Blockly.Arduino.valueToCode(this,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",o=Blockly.Arduino.valueToCode(this,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.math_modulo({argument0:e,argument1:o}),[_,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_modulo={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_modulo.html"; $("#doc").load(file);});<\/script>',examples:["math_arithmetic_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("DIVIDEND").setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_MODULO_INPUT_DIVIDEND")),this.appendValueInput("DIVISOR").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("%"),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_MODULO_TOOLTIP"))}},Blockly.Arduino.math_number=function(){var e=window.parseFloat(this.getFieldValue("NUM"));return[e,e<0?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_number.html"; $("#doc").load(file);});<\/script>',examples:["math_number_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM"),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_NUMBER_TOOLTIP"))}},Blockly.Blocks.math_number.validator=function(e){var o=window.parseFloat(e||0);return window.isNaN(o)?null:String(o)},Blockly.Arduino.math_random=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,Blockly.Arduino.definitions_.define_random_bitOut=JST.math_random_bitOut({}),Blockly.Arduino.definitions_.define_random_seedOut=JST.math_random_seedOut({}),Blockly.Arduino.setups_.setup_randomseed="unsigned long seed =seedOut(31);\n  randomSeed(seed);\n",_+=JST.math_random({value_num:e,value_dmax:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_random={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_random.html"; $("#doc").load(file);});<\/script>',examples:["math_random_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_AND")).setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_TOOLTIP"))}},Blockly.Arduino.math_to_number=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),o="";return o+="("+(this.getFieldValue("CAST")||"")+")("+e+")",[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_to_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_to_number.html"; $("#doc").load(file);});<\/script>',examples:["math_to_number_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"CAST"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST_TOOLTIP"))}},Blockly.Arduino.math_sinusoid=function(){var e=Blockly.Arduino.valueToCode(this,"AMPLITUDE",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FREQ",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"PHASE",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"OFFSET",Blockly.Arduino.ORDER_NONE);return["("+e+")*sin((6.28318530717959e-06)*(("+o+")*("+Blockly.Arduino.valueToCode(this,"TIME",Blockly.Arduino.ORDER_NONE)+"))+0.017453292519943*("+_+"))+("+t+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_sinusoid={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_sinusoid.html"; $("#doc").load(file);});<\/script>',examples:["math_sinusoid_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("AMPLITUDE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("FREQ").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_FREQ")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("PHASE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_PHASE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("OFFSET").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_OFFSET")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("TIME").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TIME")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TOOLTIP"))}},Blockly.Arduino.math_single=function(){var e,o,_=this.getFieldValue("OP"),t="";if("NEG"===_)return e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"",o=RoboBlocks.findPinMode(e),t+=o.code,"-"===(e=o.pin)[0]&&(e=" "+e),t+="-"+e,[t,Blockly.Arduino.ORDER_UNARY_PREFIX];"SIN"===_||"COS"===_||"TAN"===_?(e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,e=o.pin):"LOG10"===_?t="":(e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,e=o.pin);var l=3.14159;switch(_){case"ABS":t+="abs("+e+")";break;case"ROOT":t+="sqrt("+e+")";break;case"LN":t+="log("+e+")";break;case"EXP":t+="exp("+e+")";break;case"POW10":t+="pow(10,"+e+")";break;case"SIN":t+="sin("+e+" / 180 * "+l+")";break;case"COS":t+="cos("+e+" / 180 * "+l+")";break;case"TAN":t+="tan("+e+" / 180 * "+l+")"}if(t)return[t,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(_){case"LOG10":e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,t+="log("+(e=o.pin)+") / log(10)";break;case"ASIN":t+="asin("+e+") / "+l+" * 180";break;case"ACOS":t+="acos("+e+") / "+l+" * 180";break;case"ATAN":t+="atan("+e+") / "+l+" * 180";break;default:throw"Unknown math operator: "+_}return[t,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_single={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_single.html"; $("#doc").load(file);});<\/script>',examples:["math_single_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("NUM").setCheck(Number).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ROOT")||"SQR ROOT","ROOT"],[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ABSOLUTE")||"ABS","ABS"],["-","NEG"],["ln","LN"],["log10","LOG10"],["e^","EXP"],["10^","POW10"]]),"OP");var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[o]})}},Blockly.Blocks.math_single.TOOLTIPS={ROOT:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ROOT"),ABS:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ABS"),NEG:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_NEG"),LN:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LN"),LOG10:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LOG10"),EXP:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_EXP"),POW10:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_POW10")},Blockly.Arduino.pin_analog=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_analog={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_analog.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_read_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_ANALOG")).appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.pin_digital=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_digital={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_digital.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_DIGITAL")).appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.pin_pwm=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_pwm={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_pwm.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_write_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/pwm_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_PWM")).appendField(new Blockly.FieldDropdown(profiles.default.pwm),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.serial_available=function(){var e=Blockly.Arduino.statementToCode(this,"DO");return e=e.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_serial=JST.serial_parseint_setups({bitrate:profiles.default.serial}),JST.serial_available({branch:e})},Blockly.Blocks.serial_available={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_available.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_available_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP"))}},Blockly.Arduino.serial_parseint=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_parseint_setups({bitrate:profiles.default.serial});return["Serial.parseInt()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_parseint={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_parseint.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["logic_operation_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP"))}},Blockly.Arduino.serial_print=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_print_setups({bitrate:profiles.default.serial}),o+=JST.serial_print({content:e})},Blockly.Blocks.serial_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_print.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_print_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT_TOOLTIP"))}},Blockly.Arduino.serial_println=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_println_setups({bitrate:profiles.default.serial}),o+=JST.serial_println({content:e})},Blockly.Blocks.serial_println={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_println.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_print_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP"))}},Blockly.Arduino.serial_read=function(){return Blockly.Arduino.setups_.setup_serial=JST.serial_read_setups({bitrate:profiles.default.serial}),[JST.serial_read({}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_read.html"; $("#doc").load(file);});<\/script>',examples:["serial_read_example.bly"],tags:["serial","communication"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ_TOOLTIP"))}},Blockly.Arduino.serial_readstring=function(){return Blockly.Arduino.setups_.setup_serial=JST.serial_readstring_setups({bitrate:profiles.default.serial}),[JST.serial_readstring({}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_readstring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_readstring.html"; $("#doc").load(file);});<\/script>',examples:["serial_readstring_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP"))}},Blockly.Arduino.advanced_conversion=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o="",_=RoboBlocks.findPinMode(e);o+=_.code,e=_.pin;var t=this.getFieldValue("CONV");return o+=JST.advanced_conversion({value_num:e,convertion:t}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_conversion={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/advanced_conversion.html"; $("#doc").load(file);});<\/script>',examples:["advanced_conversion_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_CONVERT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_DECIMAL")||"DEC","DEC"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_HEXADECIMAL")||"HEX","HEX"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_OCTAL")||"OCT","OCT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_BINARY")||"BIN","BIN"]]),"CONV"),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_VALUE")).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_TOOLTIP"))}},Blockly.Arduino.serial_timeout=function(){var e=Blockly.Arduino.valueToCode(this,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_.setup_serial_timeout="Serial.setTimeout("+e+");\n",""},Blockly.Blocks.serial_timeout={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_timeout.html"; $("#doc").load(file);});<\/script>',tags:["serial"],examples:["serial_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("TIMEOUT",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP"))}},Blockly.Arduino.serial_special=function(){return["'"+this.getFieldValue("CHAR")+"'",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_special={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_special.html"; $("#doc").load(file);});<\/script>',tags:["serial"],examples:["serial_special_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TAB")||"TAB","\\t"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN")||"CARRIAGE RETURN","\\r"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED")||"LINE FEED","\\n"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_QUOTE")||"QUOTE","\\'"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE")||"DOUBLE_QUOTE",'\\"']]),"CHAR"),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP"))}},Blockly.Arduino.text=function(){return[Blockly.Arduino.quote_(this.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text.html"; $("#doc").load(file);});<\/script>',examples:["controls_setupLoop_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField('"').appendField(new Blockly.FieldTextInput(""),"TEXT").appendField('"'),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_TEXT_TOOLTIP"))}},Blockly.Arduino.text_append=function(){var e=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",o=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=e+" += String("+o+");\n"},Blockly.Blocks.text_append={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_append.html"; $("#doc").load(file);});<\/script>',examples:["text_append_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TO")),this.appendValueInput("TEXT").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_APPENDTEXT")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},getVariables:function(){var e=Blockly.Variables.allUsedVariables,o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){}},Blockly.Arduino.text_equalsIgnoreCase=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE);e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE);o=o.replace(/&quot;/g,'"');var _="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.text_equalsIgnoreCase({string1:e,string2:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_equalsIgnoreCase={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_equalsIgnoreCase.html"; $("#doc").load(file);});<\/script>',examples:["text_equalsIgnoreCase_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_IS")),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_EQUAL")).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_QUESTION")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_TOOLTIP"))}},Blockly.Arduino.text_join=function(){var e,o="";if(0===this.itemCount_)return["''",Blockly.Arduino.ORDER_ATOMIC];if(1===this.itemCount_){var _=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return e=RoboBlocks.findPinMode(_),o+=e.code,_=e.pin,o+="String("+_+")",[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]}var t=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_NONE)||"";o=(e=RoboBlocks.findPinMode(t)).code;for(var l="String("+(t=e.pin),i=1;i<this.itemCount_;i++)t=Blockly.Arduino.valueToCode(this,"ADD"+i,Blockly.Arduino.ORDER_NONE)||"",o+=(e=RoboBlocks.findPinMode(t)).code,l+=") + String("+(t=e.pin);return o+=l+")",[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_join={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_join.html"; $("#doc").load(file);});<\/script>',examples:["text_join_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("ADD0").appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),this.appendValueInput("ADD1"),this.setOutput(!0,String),this.setMutator(new Blockly.Mutator(["text_create_join_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_TOOLTIP")),this.itemCount_=2},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("items",this.itemCount_),e},domToMutation:function(e){for(var o=0;o<this.itemCount_;o++)this.removeInput("ADD"+o);for(this.itemCount_=window.parseInt(e.getAttribute("items"),10),o=0;o<this.itemCount_;o++){var _=this.appendValueInput("ADD"+o);0===o&&_.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH"))}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},decompose:function(e){var o=Blockly.Block.obtain(e,"text_create_join_container");o.initSvg();for(var _=o.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var l=Blockly.Block.obtain(e,"text_create_join_item");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}return o},compose:function(e){if(0===this.itemCount_)this.removeInput("EMPTY");else for(var o=this.itemCount_-1;o>=0;o--)this.removeInput("ADD"+o);this.itemCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){var t=this.appendValueInput("ADD"+this.itemCount_);0===this.itemCount_&&t.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),_.valueConnection_&&t.connection.connect(_.valueConnection_),this.itemCount_++,_=_.nextConnection&&_.nextConnection.targetBlock()}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=0;o;){var t=this.getInput("ADD"+_);o.valueConnection_=t&&t.connection.targetConnection,_++,o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_Field_JOIN")),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TITLE_JOIN")),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.text_length=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,o+=JST.text_length({argument0:e}),[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_length={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_length.html"; $("#doc").load(file);});<\/script>',examples:["text_length_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck([String,Array]).appendField(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_INPUT_LENGTH")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_TOOLTIP"))}},Blockly.Arduino.text_substring=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_NONE),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,t+=JST.text_substring({string1:e,from:o,to:_}),[t,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_substring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_substring.html"; $("#doc").load(file);});<\/script>',examples:["text_substring_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING")),this.appendValueInput("FROM").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_FROM")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("TO").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TO")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TOOLTIP"))}},Blockly.Arduino.text_search=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),_=this.getFieldValue("POSITION"),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,t="FIRST"===_?o+".indexOf("+e+")":o+".lastIndexOf("+e+")",[t,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_search={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_search.html"; $("#doc").load(file);});<\/script>',examples:["text_search_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH")),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_IN")),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_TEXT_FIRST"),"FIRST"],[RoboBlocks.locales.getKey("LANG_TEXT_LAST"),"LAST"]]),"POSITION"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH_TOOLTIP"))}},Blockly.Arduino.text_contains=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="("+o+".indexOf("+e+")>0)",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_contains={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_contains.html"; $("#doc").load(file);});<\/script>',examples:["text_contains_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS")),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EXPRESSION")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS_TOOLTIP"))}},Blockly.Arduino.text_to_text=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),o=this.getFieldValue("CAST")||"",_="";return _+="char"==o?"("+o+")("+e+")":"String("+e+")",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_to_text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_to_text.html"; $("#doc").load(file);});<\/script>',examples:["text_to_text_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"]]),"CAST"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TOOLTIP"))}},Blockly.Arduino.variables_get=function(){var e=this.getFieldValue("VAR")||"";return void 0!==RoboBlocks.variables[this.getFieldValue("VAR")]&&(this.var_type=RoboBlocks.variables[this.getFieldValue("VAR")][0]),[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.variables_get={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_get.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("DUMMY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldVariable(" "),"VAR"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GET_TOOLTIP"))},getVariables:function(){var e=Blockly.Variables.allVariables(),o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var e=Blockly.Variables.allVariables();for(var o in e)if(Blockly.Variables.allVariables()[o]!==this.last_variables[o]){try{this.removeInput("DUMMY")}catch(e){}this.appendDummyInput("DUMMY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.setFieldValue(this.last_variable,"VAR"),this.last_variables=Blockly.Variables.allVariables()}try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(e){}}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},exists:function(){for(var e in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_global=function(){var e,o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t=!1,l=RoboBlocks.findPinMode(o);Blockly.Arduino.setups_["pinMode"+o]=l.code,o=l.pin;for(var i in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[i].search(o+" \\(")>=0){t=!0;break}if(o.search('"')>=0||o.search("substring\\(")>=0)e="String",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+"="+o+";";else if(t){for(i in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[i].search(o)>=0){e="int"===Blockly.Arduino.definitions_[i].substring(0,3)||"//b"===Blockly.Arduino.definitions_[i].substring(0,3)?"int *"===Blockly.Arduino.definitions_[i].substring(0,5)||"int _"===Blockly.Arduino.definitions_[i].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[i].substring(0,3)?"String":"",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n";break}}else"{"===o[0]?(e="int *",o=(o=(o=o.replace("{","")).replace("}","")).split(","),Blockly.Arduino.definitions_["declare_var"+_]=e+_+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+_]=_+"[0]="+o[0]+";\n  "+_+"[1]="+o[1]+";\n  "+_+"[2]="+o[2]+";\n"):this.isVariable(o)?(e=RoboBlocks.variables[o][0],Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):o.search("readJoystick")>=0?(e="int *",Blockly.Arduino.definitions_["declare_var"+_]=e+_+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+")?(e="int",isNaN(parseFloat(o))?(o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+"))&&(Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+"="+o+";\n"):(e="unknown",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n");return RoboBlocks.variables[_]=[e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.variables_global_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n",RoboBlocks.variables[_]=[e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.variables_local=function(){var e,o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t="",l=!1,i=RoboBlocks.findPinMode(o);t+=i.code,o=i.pin;for(var n in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[n].search(o+" \\(")>=0){l=!0;break}if(o.search('"')>=0||o.search("substring\\(")>=0)t+=(e="String")+" "+_+"="+o+";\n";else if(l)for(n in Blockly.Arduino.definitions_)Blockly.Arduino.definitions_[n].search(o)>=0&&(t+=(e="int"===Blockly.Arduino.definitions_[n].substring(0,3)||"//b"===Blockly.Arduino.definitions_[n].substring(0,3)?"int *"===Blockly.Arduino.definitions_[n].substring(0,5)||"int _"===Blockly.Arduino.definitions_[n].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[n].substring(0,3)?"String":"")+" "+_+"="+o+";\n");else"{"===o[0]?(t+=(e="int *")+_+"=(int*)malloc(3*sizeof(int));\n",t+=_+"[0]="+(o=(o=(o=o.replace("{","")).replace("}","")).split(","))[0]+";\n"+_+"[1]="+o[1]+";\n"+_+"[2]="+o[2]+";\n"):this.isVariable(o)?t+=(e=RoboBlocks.variables[o][0])+" "+_+"="+o+";\n":o.search("readJoystick")>=0?(t+=(e="int *")+_+"=(int*)malloc(3*sizeof(int));\n",t+=_+"="+o+";\n"):o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+")?t+=(e="int")+" "+_+"="+o+";\n":t+=(e="unknown")+" "+_+"="+o+";\n";return RoboBlocks.variables[_]=[e,"local"],RoboBlocks.variables["analogRead("+_+")"]=[e,"local"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"local"],t},Blockly.Blocks.variables_local={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_local.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:Blockly.Blocks.variables_global.isVariable,onchange:Blockly.Blocks.variables_global.onchange,validName:Blockly.Blocks.variables_global.validName},Blockly.Arduino.variables_local_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,t+=e+" "+_+"="+o+";\n",RoboBlocks.variables[_]=[e,"local"],RoboBlocks.variables["analogRead("+_+")"]=[e,"local"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"local"],t},Blockly.Blocks.variables_local_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_local_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:Blockly.Blocks.variables_global.isVariable,onchange:Blockly.Blocks.variables_global.onchange,validName:Blockly.Blocks.variables_global.validName},Blockly.Arduino.variables_set=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"",o=this.getFieldValue("VAR")||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,_+=JST.variables_set({varName:o,varValue:e})},Blockly.Blocks.variables_set={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_set.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldVariable(" "),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_TOOLTIP"))},getVariables:function(){var e=Blockly.Variables.allVariables(),o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var e=Blockly.Variables.allVariables();for(var o in e)if(Blockly.Variables.allVariables()[o]!==this.last_variables[o]){try{this.removeInput("VALUE"),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setFieldValue(this.last_variable,"VAR")}catch(e){}this.last_variables=Blockly.Variables.allVariables()}try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(e){}}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},exists:function(){for(var e in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_global_volatile_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,Blockly.Arduino.definitions_["declare_var"+_]="volatile "+e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n",RoboBlocks.variables[_]=["volatile "+e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global_volatile_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global_volatile_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_global_volatile_type_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.button=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}),o+=JST.bq_button({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/button.html"; $("#doc").load(file);});<\/script>',examples:["button_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.button_case=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"});var t="",l="";return t+=Blockly.Arduino.statementToCode(this,"PRESSED"),l+=Blockly.Arduino.statementToCode(this,"NOT_PRESSED"),t=t.replace(/&quot;/g,'"'),l=l.replace(/&quot;/g,'"'),o+="if ("+JST.bq_button({dropdown_pin:e})+"==LOW){\n"+t+"\n}\nelse{\n"+l+"\n}\n"},Blockly.Blocks.button_case={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/button_case.html"; $("#doc").load(file);});<\/script>',examples:["button_case_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.appendStatementInput("PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_PRESSED")),this.appendStatementInput("NOT_PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_NOT_PRESSED")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.zum_button=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,pullup="INPUT_PULLUP",RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:pullup}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:pullup}),o+=JST.zum_button({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/zum_button.html"; $("#doc").load(file);});<\/script>',examples:["zum_button_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON")).appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendDummyInput().appendField("pull-up?").appendField(new Blockly.FieldCheckbox("FALSE"),"PULLUP").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_TOOLTIP")),this.setInputsInline(!1)}},Blockly.Arduino.joystick_dir=function(){var e=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="57.295779513082320876798154814105*atan2((float)(analogRead("+e+")-512),(float)(analogRead("+o+")-512))",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_dir={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["joystick"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/joystick_dir.html"; $("#doc").load(file);});<\/script>',examples:["joystick_dir_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_DIR")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_TOOLTIP"))}},Blockly.Arduino.joystick_mag=function(){var e=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="min(100,0.1953125*sqrt(pow((float)(analogRead("+e+")-512),2)+pow((float)(analogRead("+o+")-512),2)))",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_mag={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["joystick"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/joystick_mag.html"; $("#doc").load(file);});<\/script>',examples:["joystick_dir_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_MAG")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_TOOLTIP"))}},Blockly.Arduino.zum_piezo_buzzerav=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",o=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,t+=JST.zum_piezo_buzzerav({dropdown_pin:e,Buzztone:o,delay_time:_})},Blockly.Blocks.zum_piezo_buzzerav={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SOUND"),tags:["buzzer"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/zum_piezo_buzzerav.html"; $("#doc").load(file);});<\/script>',examples:["zum_piezo_buzzerav_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SOUND),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV")).appendField(new Blockly.FieldImage("img/blocks/buzzer.png",52*options.zoom,35*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_PIN")),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_TONE")),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_DURATION")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP"))}},Blockly.Arduino.dyor_31_in_1_rele=function(){var e="",o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ATOMIC),t=RoboBlocks.findPinMode(o);return e+=t.code,o=t.pin,RoboBlocks.isVariable(o)?e+=JST.inout_digital_write_setups({dropdown_pin:o}):Blockly.Arduino.setups_["setup_green_digital_write_"+o]=JST.inout_digital_write_setups({dropdown_pin:o}),e+=JST.inout_digital_write({dropdown_pin:o,dropdown_stat:_}),[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.dyor_31_in_1_rele={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","rele"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/dyor_31_in_1_rele.html"; $("#doc").load(file);});<\/script>',examples:["dyor_31_in_1_relay_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_RELE")).appendField(new Blockly.FieldImage("img/blocks/relays.png",52*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_RELE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setCheck(Number),this.appendValueInput("VALUE",Boolean).setCheck(Boolean).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_RELE_VALUE")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_RELE_TOOLTIP"))}},Blockly.Blocks},RoboBlocks={load:function(options){RoboBlocks.locales={defaultLanguage:{},languages:[]},RoboBlocks.locales.getLang=function(){return this.defaultLanguage.lngCode},RoboBlocks.locales.getKey=function(e){return this.defaultLanguage[e]},RoboBlocks.locales.setDefaultLang=function(e){for(var o in this.languages)this.languages[o].langCode===e&&(this.defaultLanguage=this.languages[o].values,this.defaultLanguage.lngCode=e)},RoboBlocks.locales.add=function(e,o){if(!e)return this.defaultLanguage;if(e&&!o&&!this.languages[e])throw new Error("Unknown language : "+e);return!o&&this.languages[e]||this.languages.push({langCode:e,values:o}),this},RoboBlocks.locales.initialize=function(){var e=options.lang||window.roboblocksLanguage||"en-GB";return this.setDefaultLang(e),this},function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicar",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"element",LANG_RESERVED_WORDS:"Paraula reservada: aquest nom no està permès.",LANG_CATEGORY_LOGIC:"Lògica",LANG_LOGIC_OPERATION_AND:"i",LANG_LOGIC_OPERATION_OR:"o",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implica",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Compara si les dues entrades són iguals.",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Compara si les dues entrades no són iguals entre si.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Compara si la primera entrada és menor que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Compara si la primera entrada és menor o igual que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Compara si la primera entrada és més gran que la segona entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Compara si la primera entrada és més gran o igual que la segona entrada.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Compara si les dues entrades són verdaderes.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Compara si alguna de les entrades són verdaderes.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Compara si les entrades són diferents.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Compara si les entrades són iguals.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"Si... aleshores...",LANG_LOGIC_NEGATE_INPUT_NOT:"no",LANG_LOGIC_NEGATE_TOOLTIP:"Retorna el contrari de l'entrada.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"verdader",LANG_LOGIC_BOOLEAN_FALSE:"fals",LANG_LOGIC_BOOLEAN_TOOLTIP:"Retorna verdader o fals en funció del que hem seleccionat.",LANG_CATEGORY_COMMUNICATION:"Comunicació",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth: rebre ",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Retorna les dades rebudes pel mòdul Bluetooth",LANG_BQ_BLUETOOTH_SEND:"Bluetooth: Enviar",LANG_BQ_BLUETOOTH_SEND_SEND:"Enviar dades",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Envia dades pel mòdul Bluetooth",LANG_BQ_BLUETOOTH_DEF:"Bluetooth",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Taxa de bauds",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Nom",LANG_BQ_BLUETOOTH_DEF_PINCODE:"Codi Pin",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Recibir",LANG_BQ_BLUETOOTH_DEF_SEND:"Rebre",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Configuració del mòdul Bluetooth",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth: Port Sèrie Disponible",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Comprova si hi ha dades disponbibles pel mòdul Bluetooth",LANG_ADVANCED_SERIAL_AVAILABLE:"Port Sèrie Disponible",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Comprova si el port sèrie està disponible o no",LANG_ADVANCED_SERIAL_PARSEINT:"Serial Read Integer",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"Primer vàlid sencer (llarg) de la cadena de texte del port sèrie",LANG_ADVANCED_SERIAL_PRINT:"Imprimir per port sèrie",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Imprimeix les dades com text ASCII.",LANG_ADVANCED_SERIAL_PRINTLN:"Imprimir per port sèrie amb salt de línia",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Imprimeix les dades com text ASCII i amb retorn de carro (RC).",LANG_ADVANCED_SERIAL_READ:"Llegir des del port sèrie",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Llegeix les dades que es reben pel port sèrie com bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Llegir text des del port sèrie",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Llegeix les dades que es reben pel port sèrie com a text ASCII.",LANG_ADVANCED_SERIAL_SPECIAL:"Caràcters especials",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tabulador",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Retorn de carro",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Salt de línia",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Cometa",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Cometa doble",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Escriu caràcters especials.",LANG_ADVANCED_SERIAL_TIMEOUT:"Estableix temps d'espera [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Estableix el temps d'espera pera a la recepció de caràcters pel port sèrie.",LANG_BQ_BAT:"BAT - Sensor d'Ultrasons",LANG_BQ_BAT_RED_PIN:"Eco",LANG_BQ_BAT_BLUE_PIN:"Dispar",LANG_BQ_BAT_TOOLTIP:"Retorna la distància mesurada pel sensor d'ultrasò.",LANG_BQ_BUTTON:"Botó",LANG_BQ_BUTTON_PIN:"PIN#",LANG_BQ_BUTTON_TOOLTIP:"Botó",LANG_BUTTON_PRESSED:"Polsat",LANG_BUTTON_NOT_PRESSED:"No polsat",LANG_BQ_INFRARED:"Sensor infraroig",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Retorna el valor digital mesurat pel sensor infraroig",LANG_BQ_JOYSTICK_DIR:"Direcció joystick",LANG_BQ_JOYSTICK_MAG:"Magnitud joystick",LANG_BQ_JOYSTICK_PIN_X:"Eix X Pin",LANG_BQ_JOYSTICK_PIN_Y:"Eix Y Pin",LANG_BQ_JOYSTICK_POSITION:"Posició Joystick",LANG_BQ_JOYSTICK_PIN_BUTTON:"Polsador Pin",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"Encendre",LANG_BQ_LED_OFF:"Apagar",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Sensor de Llum",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Retorna el valor analògic mesurat per la fotorresistencia.",LANG_BQ_PIEZO_BUZZER:"Brunzidor",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"To",LANG_BQ_PIEZO_BUZZER_DO:"Do",LANG_BQ_PIEZO_BUZZER_RE:"Re",LANG_BQ_PIEZO_BUZZER_MI:"Mi",LANG_BQ_PIEZO_BUZZER_FA:"Fa",LANG_BQ_PIEZO_BUZZER_SOL:"Sol",LANG_BQ_PIEZO_BUZZER_LA:"La",LANG_BQ_PIEZO_BUZZER_SI:"Si",LANG_BQ_PIEZO_BUZZER_DURATION:"Durada",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Brunzidor Piezoelèctric",LANG_BQ_PIEZO_BUZZERAV:"Brunzidor avançat",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"To",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Durada",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Brunzidor avançat",LANG_BQ_POTENTIOMETER:"Potenciòmetre",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Retorna el valor analògic mesurat pel potenciòmetre",LANG_CATEGORY_SCREEN:"Pantalla",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"LCD Pins",LANG_LCD_DEF_TOOLTIP:"Defineix el LCD",LANG_LCD_ADVANCED_DEF:"Advanced LCD",LANG_LCD_ADVANCED_ROWS:"Rows",LANG_LCD_ADVANCED_COLUMNS:"Columns",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Block that defines the advanced LCD",LANG_LCD_SETBACKLIGHT:"LCD: ajustar la retroiluminació",LANG_LCD_SETBACKLIGHT_CLOSE:"",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Ajusta la retroiluminació de la pantalla LCD",LANG_LCD_PRINT:"LCD: Imprimir ",LANG_LCD_PRINT_POSITION:"Fixar posició del text?",LANG_LCD_PRINT_TOOLTIP:"Imprimeix un string a la pantalla LCD en la posició especificada o en la següent disponible.",LANG_LCD_CLEAR:"Esborrar LCD",LANG_LCD_CLEAR_TOOLTIP:"Neteja la pantalla LCD",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Esperar (ms)",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Espera el temps especificat en mil·lisegons (ms).",LANG_CONTROLS_BASE_MILLIS:"Temps des de l'inici (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Nombre de milisegons des de que el programa ha començat (sencer llarg)",LANG_CONTROLS_BASE_US:"Temps des de l'inici (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Nombre de microsegons des de que el programa ha començat (sencer llarg)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Fer",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"mentres",LANG_CONTROLS_DOWHILE_TOOLTIP:"Mentre la condició siga certa, continua fent les instruccions de dins del bloq.",LANG_CONTROLS_EXECUTE:"Executa codi d'Arduino",LANG_CONTROLS_EXECUTE_TOOLTIP:"Executa codi d'Arduino (texte). Utilitzar amb precaució, por trencar fàcilment el provocar errors de compilació del programa.",LANG_CONTROLS_IF_TOOLTIP_1:"Si la condició és verdadera, executa les accions dins del bloc.",LANG_CONTROLS_IF_TOOLTIP_2:"Si la condició és verdadera, s'executa el primer bloc d'ordres. Si no ho és, s'executa el segon bloc d'ordres.",LANG_CONTROLS_IF_TOOLTIP_3:"Si el primer valor és verdader, s'executa el primer bloc d'ordres. Sinó, si el segon valor és verdader, s'executa el segon bloc d'ordres.",LANG_CONTROLS_IF_TOOLTIP_4:"Si el primer valor és verdader, s'executa el primer bloc d'ordres. Sinó, si el segon valor és verdader, s'executa el segon bloc d'ordres. Si cap dels valors és verdader, s'executa l'últim bloc d'ordres",LANG_CONTROLS_IF_MSG_IF:"si",LANG_CONTROLS_IF_MSG_ELSEIF:"en canvi, si",LANG_CONTROLS_IF_MSG_ELSE:"en cas contrari",LANG_CONTROLS_IF_MSG_THEN:"executar",LANG_CONTROLS_IF_IF_Field_IF:"si",LANG_CONTROLS_IF_IF_TOOLTIP:'Afegir, eliminar o reordenar seccions per reconfigurar aquest bloc "si".',LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"en canvi, si",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:'Afegeix a condició del bloc "si".',LANG_CONTROLS_IF_ELSE_Field_ELSE:"en cas contrari",LANG_CONTROLS_IF_ELSE_TOOLTIP:'Afegeix una condició final al bloc "si" per a capturar la resta d\'opcions.',LANG_CONTROLS_FOR_FROM_WARNING:"It is not possible to set a variable as the initial value of the for block.",LANG_CONTROLS_FOR_TO_WARNING:"It is not possible to set a variable as the final value of the for block.",LANG_CONTROLS_FOR_INPUT_WITH:"comptar amb",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"des de",LANG_CONTROLS_FOR_INPUT_TO:"fins",LANG_CONTROLS_FOR_INPUT_DO:"executar",LANG_CONTROLS_FOR_TOOLTIP:"Comptar des d'un nombre d'inici fins un de final. Cada vegada que s'incrementa en un el compte, la variable pren aquest valor i s'executen les accions.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"mentre",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"fins",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"Mentre la condició sigui verdadera, executar les instruccions.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"Mentre la condició sigui falsa, executar les instruccions.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repetir",LANG_CONTROLS_REPEAT_TITLE_TIMES:"vegades",LANG_CONTROLS_REPEAT_INPUT_DO:"executar",LANG_CONTROLS_REPEAT_TOOLTIP:"Executar les instruccions un nombre concret de vegades.",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"el bucle",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"interrompre",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continuar amb la següent iteració",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Interrompre el bucle que conté aquesta instrucció.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Saltar-se la resta d'accions d'aquesta iteració i continuar amb la següent iteració.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Atenció: Aquest bloc només pot ser usat dins d'un bucle.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Inici",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Blucle",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Els blocs en l'Inici s'executaràn seqüencialment al començar el programa (una vegada cada instrucció). Els blocs en el Bluce s'executaràn de forma seqüencial repetidament.",LANG_CONTROLS_SWITCH:"si ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Executa les accions del cas que es compleixi.",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Executa les accions del cas que es compleixi.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Executa les accions del cas que es compleixi",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Executa les accions del cas que es compleixi",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"Aquest bloc compara d'un en un si es compleixen els diferents casos.",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"cas ",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:"El bloc \"default\" especifica l'acció que es va a executar si no s'han complert cap dels casos anteriors.",LANG_CONTROLS_SWITCH_IS:"és: ",LANG_CONTROLS_SWITCH_CASE:"cas ",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"en un altre cas",LANG_CONTROLS_SWITCH_DO:"executar",LANG_CATEGORY_MATH:"Matemàtiques",LANG_MATH_ADVANCED_MAP_MAP:"Mapejar ",LANG_MATH_ADVANCED_MAP_FROM:"De [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"a [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Mapeja l'entrada des d'un rang de valors inicials a un altre rang diferent.",LANG_MATH_NUMBER_TOOLTIP:"Nombre sencer",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Vector de tres enters",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Retorna el valor d'un element concret del vector.",LANG_MATH_MODULO_TOOLTIP:"Retorna la resta de la divisió de les dues entrades.",LANG_MATH_BASE_MAP:"Mapejar ",LANG_MATH_BASE_MAP_VALUE_TO:"Valor entre [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Mapeja l'entrada des del rang [0-1023] a un altre rang de valors.",LANG_MATH_SINGLE_OP_ROOT:"arrel quadrada",LANG_MATH_SINGLE_OP_ABSOLUTE:"valor absolut",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Retorna l'arrel quadrada d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Retorna el valor absolut d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Retorna el nombre canviat de signe.",LANG_MATH_SINGLE_TOOLTIP_LN:"Retorna el logaritme neperià d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Retorna el logaritme en base 10 d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Retorna el exponencial d'un nombre.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Retorna 10 elevat a una potència.",LANG_MATH_COLOR_TOOLTIP:"Retorna un color",LANG_CATEGORY_TEXT:"Text",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"Una lletra, una paraula o una línia de text.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"crear text amb",LANG_TEXT_JOIN_TOOLTIP:"Crea text ajuntant qualsevol nombre d'elements.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"unir",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Afegir, eliminar o reordenar seccions per a reconfigurar aquest bloc de text.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"element",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Afegir un element al text.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"unir",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"element",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"a",LANG_TEXT_APPEND_APPENDTEXT:"afegir-hi text",LANG_TEXT_APPEND_VARIABLE:"element",LANG_TEXT_APPEND_TOOLTIP:"Afegir text a la variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"longitud",LANG_TEXT_LENGTH_TOOLTIP:"Retorna el nombre de lletres (incloent-hi els espais) en el text introduït.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Compara si els dos textos introduïts són iguals, independentment que tinguin lletres majúscules o minúscules.",LANG_TEXT_SUBSTRING:"Retallar ",LANG_TEXT_SUBSTRING_FROM:"des de",LANG_TEXT_SUBSTRING_TO:"fins",LANG_TEXT_SUBSTRING_TOOLTIP:"Retalla els caràcters del text introduït que es trobin entre els dos índexs i crea amb ells un nou text.",LANG_TEXT_SEARCH:"Cercar",LANG_TEXT_IN:"en",LANG_TEXT_FIRST:"Primera instància",LANG_TEXT_LAST:"Última instància",LANG_TEXT_CONTAINS:"Conté",LANG_TEXT_EXPRESSION:"expressió",LANG_TEXT_SEARCH_TOOLTIP:"Comprova si una cadena de texte apareix en una altra. Retorna la posició del primer/últim caracter trobat.",LANG_TEXT_CONTAINS_TOOLTIP:"Comprova si una cadena de texte conté una expressió. Retorna verdader o fals.",LANG_TEXT_CAST:"A texte",LANG_CATEGORY_ADVANCED:"I/O bàsica",LANG_ADVANCED_CONVERSION_CONVERT:"Convertir",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binari",LANG_ADVANCED_CONVERSION_VALUE:"valor",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convertir la base d'un nombre.",LANG_ADVANCED_INOUT_ANALOG_READ:"Llegir el pin analògic PIN",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Llegeix el valor d'un pin analògic específic.",LANG_ADVANCED_INOUT_ANALOG_WRITE:"Escriure en el pin analògic PIN",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"valor",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Escriu un valor entre 0 i 255 en un PIN analògic específic.",LANG_ADVANCED_BUILTIN_LED:"LED a la placa",LANG_ADVANCED_BUILTIN_LED_STATE:"estat",LANG_ADVANCED_BUILTIN_LED_ON:"Encès",LANG_ADVANCED_BUILTIN_LED_OFF:"Apagat",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Conmutar",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"LED integrat a la placa que està internament connectat al PIN 13.",LANG_ADVANCED_INOUT_DIGITAL_READ:"Llegir el pin digital PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Llegeix el valor des d'un pin digital específic.",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"Escriure en el pin digital",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"estat",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"Alt",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"Baix",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Escriu un valor al pin digital específic.",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Estableix mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Eixida",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Entrada",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Entrada Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Estableix el mode d'un pin digital",LANG_ADVANCED_HIGHLOW_HIGH:"Alt",LANG_ADVANCED_HIGHLOW_LOW:"Baix",LANG_ADVANCED_HIGHLOW_TOOLTIP:'Escriu "Alt" o "Baix" en funció del seleccionat.',LANG_ADVANCED_MATH_RANDOM:"Aleatori entre",LANG_ADVANCED_MATH_RANDOM_AND:" I ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Crea un nombre aleatori entre els dos límits introduïts.",LANG_ADVANCED_MATH_CAST:"A nombre",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Converteix un nombre",LANG_ADVANCED_MATH_SINUSOID:"Sinusoïdal",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitud",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Freqüència",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Fase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Valor mig",LANG_ADVANCED_MATH_SINUSOID_TIME:"Temps",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Genera una ona sinusoïdal. Amplitud: Amplitud de l'ona; Freqüència: Freqüència en Hz de l'ona; Fase: Angle en radians de l'ona; Valor mig: Quantitat sumada a l'ona sinusoïdal; Temps: Instant de temps a evaluar en l'ona sinusoïdal",LANG_CATEGORY_PROCEDURES:"Funcions",LANG_PROCEDURES_RETURN:"retorna",LANG_PROCEDURES_RETURN_TOOLTIP:"Returns a value",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Crida a una funció sense definició prèvia.",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"func_sense_retorn",LANG_PROCEDURES_DEFNORETURN_DO:"executar",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"Funció que s'executarà sense retornar res.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"func_amb_retorn",LANG_PROCEDURES_DEFRETURN_DO:"executar",LANG_PROCEDURES_DEFRETURN_RETURN:"retorna",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"Funció amb valor de retorn.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Atenció: Aquesta funció té paràmetres duplicats.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"executar",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"func_sense_retorn",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Executa aquesta funció.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"executar",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"func_amb_retorn",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Executa aquesta funció que té valor de retorn.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"paràmetres",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Subratlla la funció",LANG_PROCEDURES_IFRETURN_TOOLTIP:"Si la condició és verdadera, la funció retornarà aquest valor.",LANG_PROCEDURES_IFRETURN_WARNING:"Atenció: Aquest bloc només pot ser usat dins d'una funció que tingui valor de retorn.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"Aquesta variable no està declarada.",LANG_VARIABLES_GLOBAL:"Variable GLOBAL",LANG_VARIABLES_GLOBAL_VOLATILE:"Variable GLOBAL COMPARTIDA",LANG_VARIABLES_GLOBAL_TYPE:"de tipus",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declara i defineix una variable GLOBAL de tipus sencer (int) o text (String).",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declara i defineix una variable GLOBAL de tipus indicat.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declara i defineix una variable GLOBAL compartida (per a tasques i interrupcions) del tipus indicat.",LANG_VARIABLES_LOCAL:"Variable",LANG_VARIABLES_LOCAL_TYPE:"de tipus ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declara i defineix una variable LOCAL de tipus sencer (int) o text (String).",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declara i defineix una variable LOCAL del tipus indicat.",LANG_VARIABLES_DEFINE:"Definir variable ",LANG_VARIABLES_DEFINE_AS:"com",LANG_VARIABLES_DEFINE_TOOLTIP:"Definir el valor d'una variable.",LANG_VARIABLES_SET:"Var ",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Canvia el valor d'una variable.",LANG_VARIABLES_GET:"Var ",LANG_VARIABLES_GET_TOOLTIP:"Retorna el valor d'una variable",LANG_VARIABLES_PIN_ANALOG:"Pin analògic",LANG_VARIABLES_PIN_DIGITAL:"Pin digital",LANG_VARIABLES_PIN_PWM:"Pin PWM",LANG_VARIABLES_PIN_DIGITAL0:"WARNING: digital pin 0 (RX pin) is used when uploading a sketch. Using it to connect electronic components may cause problems when uploading a new sketch.",LANG_VARIABLES_PIN_TOOLTIP:"Selecciona el PIN desitjat.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BOOL:"Boolean",LANG_VARIABLES_TYPE_BYTE:"Byte",LANG_VARIABLES_TYPE_FLOAT:"Decimal",LANG_VARIABLES_TYPE_INTEGER:"Sencer",LANG_VARIABLES_TYPE_INTEGER_LONG:"Sencer Llarg",LANG_VARIABLES_TYPE_STRING:"Texte",LANG_VARIABLES_TYPE_CHAR:"Caràcter",LANG_CATEGORY_DISTANCE:"Distància",LANG_CATEGORY_LIGHT:"Llum",LANG_CATEGORY_SOUND:"So",LANG_ZUM_BUTTON:"Llig entrada digital amb pull-up",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Llig una entrada en el mode pull-up",LANG_ZUM_FOLLOWER:"Sensor infraroig",LANG_ZUM_FOLLOWER_PIN_LEFT:"Pin esquerra",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Pin dreta",LANG_ZUM_FOLLOWER_LEFT:"Esquerra",LANG_ZUM_FOLLOWER_RIGHT:"Dreta",LANG_ZUM_FOLLOWER_TOOLTIP:"Retorna el valor digital del sensor infraroig zum",LANG_ZUM_INFRARED:"Sensor infraroig",LANG_ZUM_INFRARED_PIN:"PIN#",LANG_ZUM_INFRARED_TOOLTIP:"Retorna el valor digital del sensor infraroig zum",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"Encendre",LANG_ZUM_LED_OFF:"Apagar",LANG_ZUM_LED_TOOLTIP:"LED zum",LANG_ZUM_PHOTORESISTOR:"Sensor de LLum",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Retorna el valor analògic del sensor de llum fotorresistència).",LANG_ZUM_PIEZO_BUZZER:"Brunzidor",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"To",LANG_ZUM_PIEZO_BUZZER_DO:"Do",LANG_ZUM_PIEZO_BUZZER_RE:"Re",LANG_ZUM_PIEZO_BUZZER_MI:"Mi",LANG_ZUM_PIEZO_BUZZER_FA:"Fa",LANG_ZUM_PIEZO_BUZZER_SOL:"Sol",LANG_ZUM_PIEZO_BUZZER_LA:"La",LANG_ZUM_PIEZO_BUZZER_SI:"Si",LANG_ZUM_PIEZO_BUZZER_DURATION:"Durada",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Brunzidor piezoelèctric",LANG_ZUM_PIEZO_BUZZERAV:"Brunzidor avançat",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"To",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Durada",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Brunzidor piezoelèctric avançat.",LANG_ZUM_POTENTIOMETER:"Potenciòmetre",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Potenciòmetre zum.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Servo de rotació contínua",LANG_SERVO_CONT_PIN:"Pin",LANG_SERVO_CONT_ROT:"",LANG_SERVO_CONT_TURN_CLOCKWISE:"Girar en sentit horari",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"Girar en sentit antihorari",LANG_SERVO_CONT_STOPPED:"Aturar",LANG_SERVO_CONT_DELAY:"Pausa",LANG_SERVO_CONT_TOOLTIP:"Servo de rotació contínua.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"PIN",LANG_SERVO_MOVE_DEGREES:"Graus (0~180)",LANG_SERVO_MOVE_DELAY:"Pausa",LANG_SERVO_MOVE_TOOLTIP:"Moure el servo entre 0 i 180 graus.",LANG_SERVO_WARNING:"It is not possible to set the servo pin using a variable",LANG_RELE:"Relé",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Valor",LANG_RELE_TOOLTIP:"Activa o desactiva l'estat d'un relé"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("ca-ES",e)}(),function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicate",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"item",LANG_RESERVED_WORDS:"Reserved word: this name is not allowed.",LANG_CATEGORY_LOGIC:"Logic",LANG_LOGIC_OPERATION_AND:"and",LANG_LOGIC_OPERATION_OR:"or",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implies",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Checks if both inputs are equal .",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Checks if both inputs are different.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Checks if the first input is smaller than the second one.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Checks if the first input is smaller than or equal to the second one.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Checks if the first input is greater than the second one.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Checks if the first input is greater than or equal to the second one.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Checks if both inputs are true.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Checks if either inputs are true.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Checks if inputs are different.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Checks if inputs are equal.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"If... then ...",LANG_LOGIC_NEGATE_INPUT_NOT:"not",LANG_LOGIC_NEGATE_TOOLTIP:"Returns the opposite of the input.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"true",LANG_LOGIC_BOOLEAN_FALSE:"false",LANG_LOGIC_BOOLEAN_TOOLTIP:"Returns either true or false.",LANG_CATEGORY_COMMUNICATION:"Communication",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth receive data",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Returns the data received by the Bluetooth module",LANG_BQ_BLUETOOTH_SEND:"Bluetooth send data",LANG_BQ_BLUETOOTH_SEND_SEND:"Send",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Sends data through Bluetooth module",LANG_BQ_BLUETOOTH_DEF:"Bluetooth definition",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Baud rate",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Name",LANG_BQ_BLUETOOTH_DEF_PINCODE:"PinCode",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Receive",LANG_BQ_BLUETOOTH_DEF_SEND:"Send",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Bluetooth module configuration",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth Serial Available",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Check wether the bluetooth has available data.",LANG_ADVANCED_SERIAL_AVAILABLE:"Serial Available",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Check wether the serial port is available or not",LANG_ADVANCED_SERIAL_PARSEINT:"Serial Read Integer",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"First valid (long) integer number from the serial buffer",LANG_ADVANCED_SERIAL_PRINT:"Serial Print",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Prints data as ASCII text.",LANG_ADVANCED_SERIAL_PRINTLN:"Serial Println",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Prints data as ASCII text and adds a Carriage Return (CR).",LANG_ADVANCED_SERIAL_READ:"Serial Read",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Reads incoming serial data from serial port as bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Serial Read String",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Reads incoming serial data from serial port as ASCII text.",LANG_ADVANCED_SERIAL_SPECIAL:"Special Chars",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tab",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Carriage Return",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Line Feed",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Quote",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Double quote",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Writes special Chars.",LANG_ADVANCED_SERIAL_TIMEOUT:"Set timeout [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Sets timeout for serial recepction (in milliseconds).",LANG_BQ_BAT:"BAT - Ultrasonic Sensor",LANG_BQ_BAT_RED_PIN:"Echo",LANG_BQ_BAT_BLUE_PIN:"Trigger",LANG_BQ_BAT_TOOLTIP:"Returns the distance measured by the ultrasonic sensor.",LANG_BQ_BUTTON:"Button",LANG_BQ_BUTTON_PIN:"Pin",LANG_BQ_BUTTON_TOOLTIP:"Button",LANG_BUTTON_PRESSED:"Pressed",LANG_BUTTON_NOT_PRESSED:"Released",LANG_BQ_INFRARED:"Infrared Sensor",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Returns the digital value read by the infrared sensor.",LANG_BQ_JOYSTICK_DIR:"Joystick direction",LANG_BQ_JOYSTICK_MAG:"Joystick magnitude",LANG_BQ_JOYSTICK_PIN_X:"X axis Pin",LANG_BQ_JOYSTICK_PIN_Y:"Y axis Pin",LANG_BQ_JOYSTICK_PIN_BUTTON:"Button Pin",LANG_BQ_JOYSTICK_POSITION:"Joystick Position",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"ON",LANG_BQ_LED_OFF:"OFF",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Light Sensor",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Returns the analog value measured by the light sensor.",LANG_BQ_PIEZO_BUZZER:"Buzzer",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"Tone",LANG_BQ_PIEZO_BUZZER_DO:"C4",LANG_BQ_PIEZO_BUZZER_RE:"D4",LANG_BQ_PIEZO_BUZZER_MI:"E4",LANG_BQ_PIEZO_BUZZER_FA:"F4",LANG_BQ_PIEZO_BUZZER_SOL:"G4",LANG_BQ_PIEZO_BUZZER_LA:"A4",LANG_BQ_PIEZO_BUZZER_SI:"B4",LANG_BQ_PIEZO_BUZZER_DURATION:"Duration [ms]",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Piezo Buzzer",LANG_BQ_PIEZO_BUZZERAV:"Advanced Buzzer",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"Tone",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Duration [ms]",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Piezo Buzzer Advanced",LANG_BQ_POTENTIOMETER:"Potentiometer",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Returns the analog value measured by the potentiometer.",LANG_CATEGORY_SCREEN:"Screen",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"LCD Pins",LANG_LCD_DEF_TOOLTIP:"Block that defines the LCD",LANG_LCD_ADVANCED_DEF:"Advanced LCD",LANG_LCD_ADVANCED_ROWS:"Rows",LANG_LCD_ADVANCED_COLUMNS:"Columns",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Block that defines the advanced LCD",LANG_LCD_SETBACKLIGHT:"LCD: setBacklight(",LANG_LCD_SETBACKLIGHT_CLOSE:")",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Sets the backlight of the LCD screen.",LANG_LCD_PRINT:"LCD: print ",LANG_LCD_PRINT_POSITION:"Set text position?",LANG_LCD_PRINT_TOOLTIP:"Prints a String in the LCD at the specified position or the next available one.",LANG_LCD_CLEAR:"LCD clear",LANG_LCD_CLEAR_TOOLTIP:"LCD clear",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Wait (ms)",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Waits the specified time in milliseconds (ms)",LANG_CONTROLS_BASE_MILLIS:"Time from start (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Number of milliseconds since the program started (long integer)",LANG_CONTROLS_BASE_US:"Time from start (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Number of microseconds since the program started (long integer)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Do",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"while",LANG_CONTROLS_DOWHILE_TOOLTIP:"While the condition is true, continue doing the statements.",LANG_CONTROLS_EXECUTE:"Execute Arduino code",LANG_CONTROLS_EXECUTE_TOOLTIP:"Executes Arduino code (text). Use with caution, as it can easily break the program and prevent it from compiling.",LANG_CONTROLS_IF_TOOLTIP_1:"If the condition is true, execute the statements.",LANG_CONTROLS_IF_TOOLTIP_2:"If the condition is true, then do the first block of statements. Otherwise, do the second block of statements.",LANG_CONTROLS_IF_TOOLTIP_3:"If the first condition is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",LANG_CONTROLS_IF_TOOLTIP_4:"If the first condition is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",LANG_CONTROLS_IF_MSG_IF:"if",LANG_CONTROLS_IF_MSG_ELSEIF:"else if",LANG_CONTROLS_IF_MSG_ELSE:"else",LANG_CONTROLS_IF_MSG_THEN:"do",LANG_CONTROLS_IF_IF_Field_IF:"if",LANG_CONTROLS_IF_IF_TOOLTIP:"Add, remove, or reorder sections to reconfigure this if block.",LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"else if",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:"Add a condition to the if block.",LANG_CONTROLS_IF_ELSE_Field_ELSE:"else",LANG_CONTROLS_IF_ELSE_TOOLTIP:"Add a final, catch-all condition to the if block.",LANG_CONTROLS_FOR_FROM_WARNING:"It is not possible to set a variable as the initial value of the for block.",LANG_CONTROLS_FOR_TO_WARNING:"It is not possible to set a variable as the final value of the for block.",LANG_CONTROLS_FOR_INPUT_WITH:"count with",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"from",LANG_CONTROLS_FOR_INPUT_TO:"to",LANG_CONTROLS_FOR_INPUT_DO:"do",LANG_CONTROLS_FOR_TOOLTIP:"Count from a start number to an end number. Each time the count is incremented by one, the variable takes that value then do the statements.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"while",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"until",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"While the condition is true, then do the statements.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"While the condition is false, then do the statements.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repeat",LANG_CONTROLS_REPEAT_TITLE_TIMES:"times",LANG_CONTROLS_REPEAT_INPUT_DO:"do",LANG_CONTROLS_REPEAT_TOOLTIP:"Repeat the statements a certain number of times",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"of loop",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"break out",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continue with next iteration",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Break out of the containing loop.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Skip the rest of this loop, and continue with the next iteration.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Warning: This block may only be used within a loop.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Setup",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Loop",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Blocks in setup will be executed at start, and blocks in Loop will be repeated continously.",LANG_CONTROLS_SWITCH:"switch ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Execute the statement of the case .",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Use the switch statement to select one of many blocks of code to be executed.",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"The switch expression is evaluated once",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"case",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:"The default keyword specifies the code to run if there is no case match",LANG_CONTROLS_SWITCH_IS:"case: ",LANG_CONTROLS_SWITCH_CASE:"case",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"default",LANG_CONTROLS_SWITCH_DO:"do",LANG_CATEGORY_MATH:"Math",LANG_MATH_ADVANCED_MAP_MAP:"Map ",LANG_MATH_ADVANCED_MAP_FROM:"From [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"to [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Re-map the input from a certain range to another.",LANG_MATH_NUMBER_TOOLTIP:"Number",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Array",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Returns the value of a certain element of the array.",LANG_MATH_MODULO_TOOLTIP:"Returns the remainder of the division of the two input numbers.",LANG_MATH_BASE_MAP:"Map ",LANG_MATH_BASE_MAP_VALUE_TO:"Value to [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Re-map the input from [0-1023] to another.",LANG_MATH_SINGLE_OP_ROOT:"square root",LANG_MATH_SINGLE_OP_ABSOLUTE:"absolute",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Returns the square root of a number.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Returns the absolute value of a number.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Returns the negation of a number.",LANG_MATH_SINGLE_TOOLTIP_LN:"Returns the natural logarithm of a number.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Returns the base 10 logarithm of a number.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Returns e to the power of a number.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Returns 10 to the power of a number.",LANG_MATH_COLOR_TOOLTIP:"Returns a colour",LANG_CATEGORY_TEXT:"Text",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"A letter, word, or line of text.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"create text with",LANG_TEXT_JOIN_TOOLTIP:"Create a piece of text by joining together any number of items.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"join",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Add, remove, or reorder sections to reconfigure this text block.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"item",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Add an item to the text.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"join",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"element",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"to",LANG_TEXT_APPEND_APPENDTEXT:"append text",LANG_TEXT_APPEND_VARIABLE:"item",LANG_TEXT_APPEND_TOOLTIP:"Append some text to variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"length",LANG_TEXT_LENGTH_TOOLTIP:"Returns number of letters (including spaces) in the provided text.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"?",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Checks if both input strings are equal, regardless of the case.",LANG_TEXT_SUBSTRING:"Crop ",LANG_TEXT_SUBSTRING_FROM:"from",LANG_TEXT_SUBSTRING_TO:"to",LANG_TEXT_SUBSTRING_TOOLTIP:"Obtain a substring from the input string with the caracters between the two input numbers.",LANG_TEXT_SEARCH:"Search",LANG_TEXT_IN:"in",LANG_TEXT_FIRST:"First instance",LANG_TEXT_LAST:"Last instance",LANG_TEXT_CONTAINS:"Contains",LANG_TEXT_EXPRESSION:"expression",LANG_TEXT_SEARCH_TOOLTIP:"Checks if a text is found in another text string. Returns the index of the first/last instance found.",LANG_TEXT_CONTAINS_TOOLTIP:"Checks if a text string contains an expression. Returns true or false.",LANG_TEXT_CAST:"To text",LANG_CATEGORY_ADVANCED:"Basic I/O",LANG_ADVANCED_CONVERSION_CONVERT:"Convert",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binary",LANG_ADVANCED_CONVERSION_VALUE:"value",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convert a number from one base to another.",LANG_ADVANCED_INOUT_ANALOG_READ:"AnalogRead PIN",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Reads the value from a specified digital pin",LANG_ADVANCED_INOUT_ANALOG_WRITE:"AnalogWrite PIN",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"value",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Write a value between 0 and 255 to a specific analog output PIN",LANG_ADVANCED_BUILTIN_LED:"BUILT-IN LED",LANG_ADVANCED_BUILTIN_LED_STATE:"state",LANG_ADVANCED_BUILTIN_LED_ON:"ON",LANG_ADVANCED_BUILTIN_LED_OFF:"OFF",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Toggle",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"Built-in LED that is internally connected to PIN 13",LANG_ADVANCED_INOUT_DIGITAL_READ:"DigitalRead PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Reads the value from a specified digital pin",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"DigitalWrite",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"PIN",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"state",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"HIGH",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"LOW",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Write a value in a specified digital pin",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Set mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Mode",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Output",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Input",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Input Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Sets digital pin mode",LANG_ADVANCED_HIGHLOW_HIGH:"HIGH",LANG_ADVANCED_HIGHLOW_LOW:"LOW",LANG_ADVANCED_HIGHLOW_TOOLTIP:"HIGH OR LOW",LANG_ADVANCED_MATH_RANDOM:"Random between",LANG_ADVANCED_MATH_RANDOM_AND:" and ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Returns a random number between the two limits.",LANG_ADVANCED_MATH_CAST:"To number",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Cast a number",LANG_ADVANCED_MATH_SINUSOID:"Sinusoid",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitude",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Frequency",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Phase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Offset",LANG_ADVANCED_MATH_SINUSOID_TIME:"Time",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Generates a sinusoid wave. Amplitude: Wave amplitude; Frequency: Wave frequency in Hz; Phase: Wave phase in radians; Offset: Offset value added to the wave; Time: Time instant in which the wave is evaluated.",LANG_CATEGORY_PROCEDURES:"Functions",LANG_PROCEDURES_RETURN:"return",LANG_PROCEDURES_RETURN_TOOLTIP:"Returns a value",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Function call without matching definition",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"function_without_return",LANG_PROCEDURES_DEFNORETURN_DO:"do",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"A function with no return value.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"function_with_return",LANG_PROCEDURES_DEFRETURN_DO:"do",LANG_PROCEDURES_DEFRETURN_RETURN:"return",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"A function with a return value.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Warning: This function has duplicate parameters.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"do",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"function_without_return",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Calls a function with no return value.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"do",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"function_with_return",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Calls a function with a return value.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"parameters",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Highlight function",LANG_PROCEDURES_IFRETURN_TOOLTIP:"If the condition is true, then returns this value.",LANG_PROCEDURES_IFRETURN_WARNING:"Warning: This block may only be used within a function with a return value.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"This variable is not declared.",LANG_VARIABLES_GLOBAL:"Declare GLOBAL Variable ",LANG_VARIABLES_GLOBAL_VOLATILE:"Declare GLOBAL SHARED Variable ",LANG_VARIABLES_GLOBAL_TYPE:"of type ",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declares and defines a GLOBAL variable of type int or String.",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declares and defines a GLOBAL variable of the given type.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declares and defines a GLOBAL shared (volatile, to be used in tasks and interrupts) variable of the given type.",LANG_VARIABLES_LOCAL:"Declare variable ",LANG_VARIABLES_LOCAL_TYPE:"of type ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declare and define a LOCAL variable of type int or String.",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declare and define a LOCAL variable of the given type.",LANG_VARIABLES_DEFINE:"Define variable ",LANG_VARIABLES_DEFINE_AS:"as",LANG_VARIABLES_DEFINE_TOOLTIP:"Define the value of a variable.",LANG_VARIABLES_SET:"Var",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Sets the value of a variable.",LANG_VARIABLES_GET:"Var",LANG_VARIABLES_GET_TOOLTIP:"Returns the value of a variable.",LANG_VARIABLES_PIN_ANALOG:"Analog pin",LANG_VARIABLES_PIN_DIGITAL:"Digital pin",LANG_VARIABLES_PIN_PWM:"PWM pin",LANG_VARIABLES_PIN_DIGITAL0:"WARNING: digital pin 0 (RX pin) is used when uploading a sketch. Using it to connect electronic components may cause problems when uploading a new sketch.",LANG_VARIABLES_PIN_TOOLTIP:"Select the PIN.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BOOL:"Boolean",LANG_VARIABLES_TYPE_BYTE:"Byte",LANG_VARIABLES_TYPE_FLOAT:"Float",LANG_VARIABLES_TYPE_INTEGER:"Integer",LANG_VARIABLES_TYPE_INTEGER_LONG:"Long Integer",LANG_VARIABLES_TYPE_STRING:"String",LANG_VARIABLES_TYPE_CHAR:"Char",LANG_CATEGORY_DISTANCE:"Distance",LANG_CATEGORY_LIGHT:"Light",LANG_CATEGORY_SOUND:"Sound",LANG_CATEGORY_ZUM:"Zum bloqs",LANG_ZUM_BUTTON:"Read pull-up digital input",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Reads an input in pull-up mode.",LANG_ZUM_FOLLOWER:"Infrared Sensor",LANG_ZUM_FOLLOWER_PIN_LEFT:"Left Pin",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Right Pin",LANG_ZUM_FOLLOWER_LEFT:"Left",LANG_ZUM_FOLLOWER_RIGHT:"Right",LANG_ZUM_FOLLOWER_TOOLTIP:"Returns the digital value read by the infrared sensor",LANG_ZUM_INFRARED:"Infrared Sensor",LANG_ZUM_INFRARED_PIN:"Pin",LANG_ZUM_INFRARED_TOOLTIP:"Returns the digital value read by the infrared sensor",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"ON",LANG_ZUM_LED_OFF:"OFF",LANG_ZUM_LED_TOOLTIP:"zum LED",LANG_ZUM_PHOTORESISTOR:"Light Sensor",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Returns the analog value measured by the light sensor.",LANG_ZUM_PIEZO_BUZZER:"Buzzer",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"Tone",LANG_ZUM_PIEZO_BUZZER_DO:"C4",LANG_ZUM_PIEZO_BUZZER_RE:"D4",LANG_ZUM_PIEZO_BUZZER_MI:"E4",LANG_ZUM_PIEZO_BUZZER_FA:"F4",LANG_ZUM_PIEZO_BUZZER_SOL:"G4",LANG_ZUM_PIEZO_BUZZER_LA:"A4",LANG_ZUM_PIEZO_BUZZER_SI:"B4",LANG_ZUM_PIEZO_BUZZER_DURATION:"Duration [ms]",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Piezo Buzzer",LANG_ZUM_PIEZO_BUZZERAV:"Advanced Buzzer",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"Tone",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Duration [ms]",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Piezo Buzzer Advanced",LANG_ZUM_POTENTIOMETER:"Potentiometer",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Returns the analog value measured by the potentiometer.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Continuous rotation servo",LANG_SERVO_CONT_PIN:"PIN",LANG_SERVO_CONT_ROT:"ROT",LANG_SERVO_CONT_TURN_CLOCKWISE:"Turn clockwise",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"Turn counterclockwise",LANG_SERVO_CONT_STOPPED:"Stopped",LANG_SERVO_CONT_DELAY:"Delay [ms]",LANG_SERVO_CONT_TOOLTIP:"Continuous rotation servo.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"Pin",LANG_SERVO_MOVE_DEGREES:"Degrees (0~180)",LANG_SERVO_MOVE_DELAY:"Delay [ms]",LANG_SERVO_MOVE_TOOLTIP:"Move between 0~180 degree",LANG_SERVO_WARNING:"It is not possible to set the servo pin using a variable",LANG_RELE:"Relay",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Value",LANG_RELE_TOOLTIP:"Sets the relay state"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("en-GB",e)}(),function(){var e={BLOCKLY_MSG_DUPLICATE_BLOCK:"Duplicar",BLOCKLY_MSG_REMOVE_COMMENT:"Remove Comment",BLOCKLY_MSG_ADD_COMMENT:"Add Comment",BLOCKLY_MSG_EXTERNAL_INPUTS:"External Inputs",BLOCKLY_MSG_INLINE_INPUTS:"Inline Inputs",BLOCKLY_MSG_DELETE_BLOCK:"Delete Block",BLOCKLY_MSG_DELETE_X_BLOCKS:"Delete %1 Blocks",BLOCKLY_MSG_COLLAPSE_BLOCK:"Collapse Block",BLOCKLY_MSG_EXPAND_BLOCK:"Expand Block",BLOCKLY_MSG_DISABLE_BLOCK:"Disable Block",BLOCKLY_MSG_ENABLE_BLOCK:"Enable Block",BLOCKLY_MSG_HELP:"Help",BLOCKLY_MSG_COLLAPSE_ALL:"Collapse Blocks",BLOCKLY_MSG_EXPAND_ALL:"Expand Blocks",LANG_VARIABLES_SET_ITEM:"elemento",LANG_RESERVED_WORDS:"Palabra reservada: este nombre no está permitido.",LANG_CATEGORY_LOGIC:"Lógica",LANG_LOGIC_OPERATION_AND:"y",LANG_LOGIC_OPERATION_OR:"o",LANG_LOGIC_OPERATION_XOR:"xor",LANG_LOGIC_OPERATION_XNOR:"xnor",LANG_LOGIC_OPERATION_IMPLIES:"implica",LANG_LOGIC_COMPARE_TOOLTIP_EQ:"Compara si las dos entradas son iguales.",LANG_LOGIC_COMPARE_TOOLTIP_NEQ:"Compara si las dos entradas no son iguales entre sí.",LANG_LOGIC_COMPARE_TOOLTIP_LT:"Compara si la primera entrada es menor que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_LTE:"Compara si la primera entrada es menor o igual que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GT:"Compara si la primera entrada es mayor que la segunda entrada.",LANG_LOGIC_COMPARE_TOOLTIP_GTE:"Compara si la primera entrada es mayor o igual que la segunda entrada.",LANG_LOGIC_OPERATION_TOOLTIP_AND:"Compara si ambas entradas son verdaderas.",LANG_LOGIC_OPERATION_TOOLTIP_OR:"Compara si alguna de las entradas son verdaderas.",LANG_LOGIC_OPERATION_TOOLTIP_XOR:"Compara si las entradas son diferentes.",LANG_LOGIC_OPERATION_TOOLTIP_XNOR:"Compara si las entradas son iguales.",LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES:"Si... entonces...",LANG_LOGIC_NEGATE_INPUT_NOT:"no",LANG_LOGIC_NEGATE_TOOLTIP:"Devuelve lo contrario de la entrada.",LANG_LOGIC_NEGATE_HELPURL:"",LANG_LOGIC_BOOLEAN_TRUE:"verdadero",LANG_LOGIC_BOOLEAN_FALSE:"falso",LANG_LOGIC_BOOLEAN_TOOLTIP:"Devuelve verdadero o falso en función de lo seleccionado.",LANG_CATEGORY_COMMUNICATION:"Comunicación",LANG_BQ_BLUETOOTH_RECEIVE:"Bluetooth: recibir ",LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH:"Bluetooth",LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP:"Devuelve los datos recibidos por el módulo Bluetooth",LANG_BQ_BLUETOOTH_SEND:"Bluetooth: Enviar",LANG_BQ_BLUETOOTH_SEND_SEND:"Enviar datos",LANG_BQ_BLUETOOTH_SEND_TOOLTIP:"Envía datos a través del módulo Bluetooth",LANG_BQ_BLUETOOTH_DEF:"Bluetooth",LANG_BQ_BLUETOOTH_DEF_BAUD_RATE:"Tasa de baudios",LANG_BQ_BLUETOOTH_DEF_PIN1:"RX",LANG_BQ_BLUETOOTH_DEF_PIN2:"TX",LANG_BQ_BLUETOOTH_DEF_NAME:"Nombre",LANG_BQ_BLUETOOTH_DEF_PINCODE:"Código PIN",LANG_BQ_BLUETOOTH_DEF_RECEIVE:"Recibir",LANG_BQ_BLUETOOTH_DEF_SEND:"Enviar",LANG_BQ_BLUETOOTH_DEF_TOOLTIP:"Configura el módulo Bluetooth",LANG_ADVANCED_BT_SERIAL_AVAILABLE:"Bluetooth: Puerto Serie Disponible",LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP:"Comprueba si el módulo Bluetooth dispone de datos disponibles",LANG_ADVANCED_SERIAL_AVAILABLE:"Puerto Serie Disponible",LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP:"Comprueba si el puerto serie está disponible o no",LANG_ADVANCED_SERIAL_PARSEINT:"Leer entero por el puerto serie",LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP:"Devuelve el primer número entero (largo) desde el puerto serie",LANG_ADVANCED_SERIAL_PRINT:"Imprimir por puerto serie",LANG_ADVANCED_SERIAL_PRINT_TOOLTIP:"Imprime los datos como texto ASCII.",LANG_ADVANCED_SERIAL_PRINTLN:"Imprimir por puerto serie con salto de línea",LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP:"Imprime los datos como texto ASCII y con retorno de carro (RC).",LANG_ADVANCED_SERIAL_READ:"Leer desde el puerto serie",LANG_ADVANCED_SERIAL_READ_TOOLTIP:"Lee los datos que se reciben por el puerto serie como texto bytes.",LANG_ADVANCED_SERIAL_READSTRING:"Leer cadena desde el puerto serie",LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP:"Lee los datos que se reciben por el puerto serie como texto ASCII.",LANG_ADVANCED_SERIAL_SPECIAL:"Caracteres especiales",LANG_ADVANCED_SERIAL_SPECIAL_TAB:"Tabulador",LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN:"Retorno de carro",LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED:"Salto de línea",LANG_ADVANCED_SERIAL_SPECIAL_QUOTE:"Comilla",LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE:"Comilla doble",LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP:"Escribe caracteres especiales.",LANG_ADVANCED_SERIAL_TIMEOUT:"Tiempo de espera [ms]",LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP:"Establece el tiempo de espera (en milisegundos) para la recepción de caracteres por el puerto serie.",LANG_BQ_BAT:"BAT - Sensor de Ultrasonidos",LANG_BQ_BAT_RED_PIN:"ECHO Pin",LANG_BQ_BAT_BLUE_PIN:"TRIGGER Pin",LANG_BQ_BAT_TOOLTIP:"Devuelve la distancia medida por el sensor de ultrasonidos.",LANG_BQ_BUTTON:"Botón",LANG_BQ_BUTTON_PIN:"Pin",LANG_BQ_BUTTON_TOOLTIP:"Botón",LANG_BUTTON_PRESSED:"Pulsado",LANG_BUTTON_NOT_PRESSED:"No pulsado",LANG_BQ_INFRARED:"Sensor infrarrojo",LANG_BQ_INFRARED_PIN:"Pin",LANG_BQ_INFRARED_TOOLTIP:"Devuelve el valor digital medido por el sensor infrarrojo",LANG_BQ_JOYSTICK_DIR:"Dirección joystick",LANG_BQ_JOYSTICK_MAG:"Magnitud joystick",LANG_BQ_JOYSTICK_PIN_X:"Eje X Pin",LANG_BQ_JOYSTICK_PIN_Y:"Eje Y Pin",LANG_BQ_JOYSTICK_POSITION:"Posición Joystick",LANG_BQ_JOYSTICK_PIN_BUTTON:"Pulsador Pin",LANG_BQ_JOYSTICK_TOOLTIP:"Joystick",LANG_BQ_LED:"LED",LANG_BQ_LED_PIN:"Pin",LANG_BQ_LED_STATE:"",LANG_BQ_LED_ON:"Encender",LANG_BQ_LED_OFF:"Apagar",LANG_BQ_LED_TOOLTIP:"LED",LANG_BQ_PHOTORESISTOR:"Sensor de Luz",LANG_BQ_PHOTORESISTOR_PIN:"Pin",LANG_BQ_PHOTORESISTOR_TOOLTIP:"Devuelve el valor analógico medido por la fotorresistencia.",LANG_BQ_PIEZO_BUZZER:"Zumbador",LANG_BQ_PIEZO_BUZZER_PIN:"Pin",LANG_BQ_PIEZO_BUZZER_TONE:"Tono",LANG_BQ_PIEZO_BUZZER_DO:"Do",LANG_BQ_PIEZO_BUZZER_RE:"Re",LANG_BQ_PIEZO_BUZZER_MI:"Mi",LANG_BQ_PIEZO_BUZZER_FA:"Fa",LANG_BQ_PIEZO_BUZZER_SOL:"Sol",LANG_BQ_PIEZO_BUZZER_LA:"La",LANG_BQ_PIEZO_BUZZER_SI:"Si",LANG_BQ_PIEZO_BUZZER_DURATION:"Duración [ms]",LANG_BQ_PIEZO_BUZZER_TOOLTIP:"Zumbador piezoeléctrico",LANG_BQ_PIEZO_BUZZERAV:"Zumbador avanzado",LANG_BQ_PIEZO_BUZZERAV_PIN:"Pin",LANG_BQ_PIEZO_BUZZERAV_TONE:"Tono",LANG_BQ_PIEZO_BUZZERAV_DURATION:"Duración [ms]",LANG_BQ_PIEZO_BUZZERAV_TOOLTIP:"Zumbador avanzado",LANG_BQ_POTENTIOMETER:"Potenciómetro",LANG_BQ_POTENTIOMETER_PIN:"Pin",LANG_BQ_POTENTIOMETER_TOOLTIP:"Devuelve el valor analógico medido por el potenciómetro",LANG_CATEGORY_SCREEN:"Pantalla",LANG_LCD_DEF:"LCD (2x16)",LANG_LCD_PINS:"Pines del LCD",LANG_LCD_DEF_TOOLTIP:"Define el LCD",LANG_LCD_ADVANCED_DEF:"LCD avanzado",LANG_LCD_ADVANCED_ROWS:"Filas",LANG_LCD_ADVANCED_COLUMNS:"Columnas",LANG_LCD_DEF_ADVANCED_TOOLTIP:"Bloque que define el LCD avanzado",LANG_LCD_SETBACKLIGHT:"LCD: ajustar la retroiluminación",LANG_LCD_SETBACKLIGHT_CLOSE:"",LANG_LCD_SETBACKLIGHT_TOOLTIP:"Ajusta la retroiluminación de la pantalla LCD",LANG_LCD_PRINT:"LCD: Imprimir ",LANG_LCD_PRINT_POSITION:"¿Fijar posición del texto?",LANG_LCD_PRINT_TOOLTIP:"Imprime un string en la pantalla LCD en la posición específicada o en la siguiente disponible.",LANG_LCD_CLEAR:"Borrar LCD",LANG_LCD_CLEAR_TOOLTIP:"Borra la pantalla LCD",LANG_CATEGORY_CONTROLS:"Control",LANG_CONTROLS_BASE_DELAY_WAIT:"Esperar [ms]",LANG_CONTROLS_BASE_DELAY_TOOLTIP:"Espera el tiempo especificado en milisegundos (ms)",LANG_CONTROLS_BASE_MILLIS:"Tiempo desde el arranque (ms)",LANG_CONTROLS_BASE_MILLIS_TOOLTIP:"Número de milisegundos desde que se inició el programa (entero largo)",LANG_CONTROLS_BASE_US:"Tiempo desde el arranque (us)",LANG_CONTROLS_BASE_US_TOOLTIP:"Número de microsegundos desde que se inició el programa (entero largo)",LANG_CONTROLS_DOWHILE_OPERATOR_DO:"Hacer",LANG_CONTROLS_DOWHILE_OPERATOR_WHILE:"mientras",LANG_CONTROLS_DOWHILE_TOOLTIP:"Mientras la condición sea verdadera, continúa ejecutando las instrucciones de dentro del bloque.",LANG_CONTROLS_EXECUTE:"Ejecutar código Arduino",LANG_CONTROLS_EXECUTE_TOOLTIP:"Ejecuta código Arduino (texto). Utilizar con preucación, ya que puede romper fácilmente el programa e impedir su correcta compilación.",LANG_CONTROLS_IF_TOOLTIP_1:"Si la condición es verdadera, ejecuta las acciones dentro del bloque.",LANG_CONTROLS_IF_TOOLTIP_2:"Si la condición es verdadera, se ejecuta el primer bloque de comandos. Si no lo es, se ejecuta el segundo bloque de comandos.",LANG_CONTROLS_IF_TOOLTIP_3:"Si el primer valor es verdadero, se ejecuta el primer bloque de comandos. Sino, si el segundo valor es verdadero, se ejecuta el segundo bloque de comandos.",LANG_CONTROLS_IF_TOOLTIP_4:"Si el primer valor es verdadero, se ejecuta el primer bloque de comandos. Sino, si el segundo valor es verdadero, se ejecuta el segundo bloque de comandos. Si ninguno de los valores es verdadero, se ejecuta el último bloque de comandos",LANG_CONTROLS_IF_MSG_IF:"si",LANG_CONTROLS_IF_MSG_ELSEIF:"en cambio, si",LANG_CONTROLS_IF_MSG_ELSE:"de lo contrario",LANG_CONTROLS_IF_MSG_THEN:"ejecutar",LANG_CONTROLS_IF_IF_Field_IF:"si",LANG_CONTROLS_IF_IF_TOOLTIP:'Añadir, eliminar o reordenar secciones para reconfigurar este bloque "si".',LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF:"en cambio, si",LANG_CONTROLS_IF_ELSEIF_TOOLTIP:'Añade una condición al bloque "si".',LANG_CONTROLS_IF_ELSE_Field_ELSE:"de lo contrario",LANG_CONTROLS_IF_ELSE_TOOLTIP:'Añade una condición final al bloque "si" para capturar el resto de opciones.',LANG_CONTROLS_FOR_FROM_WARNING:"No puedes asignar una variable al valor inicial del for",LANG_CONTROLS_FOR_TO_WARNING:"No puedes asignar una variable al valor final del for",LANG_CONTROLS_FOR_INPUT_WITH:"Contar con",LANG_CONTROLS_FOR_INPUT_VAR:"x",LANG_CONTROLS_FOR_INPUT_FROM:"desde",LANG_CONTROLS_FOR_INPUT_TO:"hasta",LANG_CONTROLS_FOR_INPUT_DO:"ejecutar",LANG_CONTROLS_FOR_TOOLTIP:"Contar desde un número de inicio hasta uno final. Cada vez que se incrementa en uno la cuenta, la variable toma ese valor y se ejecutan las acciones.",LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE:"mientras",LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL:"hasta",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE:"Mientras la condición sea verdadera, ejecutar las instrucciones.",LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL:"Mientras la condición sea falsa, ejecutar las instrucciones.",LANG_CONTROLS_REPEAT_TITLE_REPEAT:"Repetir",LANG_CONTROLS_REPEAT_TITLE_TIMES:"veces",LANG_CONTROLS_REPEAT_INPUT_DO:"ejecutar",LANG_CONTROLS_REPEAT_TOOLTIP:"Ejecutar las instrucciones un número concreto de veces.",LANG_CONTROLS_FLOW_STATEMENTS_HELPURL:"",LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP:"el bucle",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK:"interrumpir",LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE:"continuar con la siguiente iteración",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK:"Interrumpir el bucle que contiene esta instrucción.",LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE:"Saltarse el resto de acciones de esta iteración y continuar con la siguiente iteración.",LANG_CONTROLS_FLOW_STATEMENTS_WARNING:"Atención: Este bloque sólo puede ser usado dentro de un bucle.",LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE:"Inicio",LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE:"Repetir",LANG_CONTROLS_SETUP_LOOP_TOOLTIP:"Los bloques en Inicio se ejecutarán una sola vez al arranque, mientras que los bloques en Repetir se ejecutarán de forma repetida.",LANG_CONTROLS_SWITCH:"si ",LANG_CONTROLS_SWITCH_TOOLTIP_1:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_2:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_3:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_TOOLTIP_4:"Ejecuta las acciones del caso que se cumpla.",LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP:"Este bloque compara de uno en uno si se cumplen los distintos casos.",LANG_CONTROLS_SWITCH_CASE_TOOLTIP:"caso ",LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP:'El bloque "default" especifica la acción que se va a ejecutar si no se han cumplido ninguno de los casos anteriores.',LANG_CONTROLS_SWITCH_IS:"es: ",LANG_CONTROLS_SWITCH_CASE:"caso ",LANG_CONTROLS_SWITCH_COLON:": ",LANG_CONTROLS_SWITCH_DEFAULT:"en otro caso",LANG_CONTROLS_SWITCH_DO:"ejecutar",LANG_CATEGORY_MATH:"Matemáticas",LANG_MATH_ADVANCED_MAP_MAP:"Mapear ",LANG_MATH_ADVANCED_MAP_FROM:"De [",LANG_MATH_ADVANCED_MAP_HYPHEN:"-",LANG_MATH_ADVANCED_MAP_BRACKET:"]",LANG_MATH_ADVANCED_MAP_TO:"a [",LANG_MATH_ADVANCED_MAP_TOOLTIP:"Mapea la entrada desde un rango de valores iniciales a otro rango distinto.",LANG_MATH_NUMBER_TOOLTIP:"Número entero",LANG_MATH_ARRAY_ARRAY3:"[3]",LANG_MATH_ARRAY_BRACKET3:"{",LANG_MATH_ARRAY_BRACKET4:"}",LANG_MATH_ARRAY_COMMA:",",LANG_MATH_ARRAY_TOOLTIP:"Vector de tres enteros",LANG_ARRAY_GET_BRACKET1:"[",LANG_ARRAY_GET_BRACKET2:"]",LANG_ARRAY_GET_TOOLTIP:"Devuelve el valor de un elemento concreto del vector.",LANG_MATH_MODULO_TOOLTIP:"Devuelve el resto de la división de las dos entradas.",LANG_MATH_BASE_MAP:"Mapear ",LANG_MATH_BASE_MAP_VALUE_TO:"Valor entre [0-",LANG_MATH_BASE_MAP_BRACKET:"]",LANG_MATH_BASE_MAP_TOOLTIP:"Mapea la entrada desde el rango [0-1023] a otro rango de valores.",LANG_MATH_SINGLE_OP_ROOT:"raíz cuadrada",LANG_MATH_SINGLE_OP_ABSOLUTE:"valor absoluto",LANG_MATH_SINGLE_TOOLTIP_ROOT:"Devuelve la raíz cuadrada de un número.",LANG_MATH_SINGLE_TOOLTIP_ABS:"Devuelve el valor absoluto de un número.",LANG_MATH_SINGLE_TOOLTIP_NEG:"Devuelve el número cambiado de signo.",LANG_MATH_SINGLE_TOOLTIP_LN:"Devuelve el logaritmo neperiano de un número.",LANG_MATH_SINGLE_TOOLTIP_LOG10:"Devuelve el logaritmo en base 10 de un número.",LANG_MATH_SINGLE_TOOLTIP_EXP:"Devuelve el exponencial de un número.",LANG_MATH_SINGLE_TOOLTIP_POW10:"Devuelve 10 elevado a una potencia.",LANG_MATH_COLOR_TOOLTIP:"Devuelve un color",LANG_CATEGORY_TEXT:"Texto",LANG_TEXT_TEXT_HELPURL:"",LANG_TEXT_TEXT_TOOLTIP:"Una letra, una palabra o una línea de texto.",LANG_TEXT_JOIN_HELPURL:"",LANG_TEXT_JOIN_Field_CREATEWITH:"crear texto con",LANG_TEXT_JOIN_TOOLTIP:"Crea texto juntando cualquier número de elementos.",LANG_TEXT_CREATE_JOIN_Field_JOIN:"unir",LANG_TEXT_CREATE_JOIN_TOOLTIP:"Añadir, eliminar o reordenar secciones para reconfigurar este bloque de texto.",LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM:"elemento",LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP:"Añadir un elemento al texto.",LANG_TEXT_CREATE_JOIN_TITLE_JOIN:"unir",LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM:"elemento",LANG_TEXT_APPEND_HELPURL:"",LANG_TEXT_APPEND_TO:"a",LANG_TEXT_APPEND_APPENDTEXT:"añadirle texto",LANG_TEXT_APPEND_VARIABLE:"elemento",LANG_TEXT_APPEND_TOOLTIP:"Añadir texto a la variable %1.",LANG_TEXT_LENGTH_HELPURL:"",LANG_TEXT_LENGTH_INPUT_LENGTH:"longitud",LANG_TEXT_LENGTH_TOOLTIP:"Devuelve el número de letras (incluyendo los espacios) en el texto introducido.",LANG_TEXT_EQUALSIGNORECASE_IS:"",LANG_TEXT_EQUALSIGNORECASE_EQUAL:" =",LANG_TEXT_EQUALSIGNORECASE_QUESTION:"",LANG_TEXT_EQUALSIGNORECASE_TOOLTIP:"Compara si los dos textos introducidos son iguales, independientemente de que tengan letras mayúsculas o minúsculas.",LANG_TEXT_SUBSTRING:"Recortar ",LANG_TEXT_SUBSTRING_FROM:"desde",LANG_TEXT_SUBSTRING_TO:"hasta",LANG_TEXT_SUBSTRING_TOOLTIP:"Recorta los caracteres del texto introducido que se encuentren entre los dos índices y crea con ellos un nuevo texto.",LANG_TEXT_SEARCH:"Busca",LANG_TEXT_IN:"en",LANG_TEXT_FIRST:"Primera instancia",LANG_TEXT_LAST:"Última instancia",LANG_TEXT_CONTAINS:"Contiene",LANG_TEXT_EXPRESSION:"expressión",LANG_TEXT_SEARCH_TOOLTIP:"Comprueba si una cadena de texto aparece en otra. Devuelve la posición del primer/último caracter encontrado.",LANG_TEXT_CONTAINS_TOOLTIP:"Comprueba si una expresión aparece en una cadena de texto. Devuelve verdadero o falso.",LANG_TEXT_CAST:"A texto",LANG_CATEGORY_ADVANCED:"E/S básica",LANG_ADVANCED_CONVERSION_CONVERT:"Convertir",LANG_ADVANCED_CONVERSION_DECIMAL:"Decimal",LANG_ADVANCED_CONVERSION_HEXADECIMAL:"Hexadecimal",LANG_ADVANCED_CONVERSION_OCTAL:"Octal",LANG_ADVANCED_CONVERSION_BINARY:"Binario",LANG_ADVANCED_CONVERSION_VALUE:"valor",LANG_ADVANCED_CONVERSION_TOOLTIP:"Convertir la base de un número.",LANG_ADVANCED_INOUT_ANALOG_READ:"Leer el pin analógico Pin",LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP:"Lee el valor de un pin analógico específico.",LANG_ADVANCED_INOUT_ANALOG_WRITE:"Escribir en PIN digital",LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE:"el valor analógico",LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP:"Escribe un valor entre 0 y 255 en un PIN analógico específico.",LANG_ADVANCED_BUILTIN_LED:"LED en la placa",LANG_ADVANCED_BUILTIN_LED_STATE:"estado",LANG_ADVANCED_BUILTIN_LED_ON:"Encendido",LANG_ADVANCED_BUILTIN_LED_OFF:"Apagado",LANG_ADVANCED_BUILTIN_LED_TOGGLE:"Conmutar",LANG_ADVANCED_BUILTIN_LED_TOOLTIP:"LED integrado en la placa que está internamente conectado al PIN 13.",LANG_ADVANCED_INOUT_DIGITAL_READ:"Leer el pin digital PIN",LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP:"Lee el valor desde un pin digital específico.",LANG_ADVANCED_INOUT_DIGITAL_WRITE:"Escribir en el pin digital",LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN:"PIN",LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE:"estado",LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH:"ALTO",LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW:"BAJO",LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP:"Escribe un valor en el pin digital específico.",LANG_ADVANCED_INOUT_DIGITAL_MODE:"Establece modo",LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN:"Pin",LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE:"Modo",LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT:"Salida",LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT:"Entrada",LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP:"Entrada Pull-Up",LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP:"Establece el modo de un pin digital",LANG_ADVANCED_HIGHLOW_HIGH:"ALTO",LANG_ADVANCED_HIGHLOW_LOW:"BAJO",LANG_ADVANCED_HIGHLOW_TOOLTIP:'Escribe "ALTO" o "BAJO" en función de lo seleccionado.',LANG_ADVANCED_MATH_RANDOM:"Aleatorio entre",LANG_ADVANCED_MATH_RANDOM_AND:" y ",LANG_ADVANCED_MATH_RANDOM_TOOLTIP:"Crea un número aleatorio entre los dos límites introducidos.",LANG_ADVANCED_MATH_CAST:"A número",LANG_ADVANCED_MATH_CAST_TOOLTIP:"Convierte un número",LANG_ADVANCED_MATH_SINUSOID:"Senoide",LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE:"Amplitud",LANG_ADVANCED_MATH_SINUSOID_FREQ:"Frecuencia",LANG_ADVANCED_MATH_SINUSOID_PHASE:"Fase",LANG_ADVANCED_MATH_SINUSOID_OFFSET:"Valor medio",LANG_ADVANCED_MATH_SINUSOID_TIME:"Tiempo",LANG_ADVANCED_MATH_SINUSOID_TOOLTIP:"Genera un onda senoidal. Amplitud: Amplitud de la onda senoidal; Frecuencia: Frecuencia en Hz de la onda senoidal; Fase: Fase de la onda senoidal en radianes; Valor medio: Cantidad añadida a la onda senoidal; Tiempo: Instante de tiempo a evaluar de la onda senoidal",LANG_CATEGORY_PROCEDURES:"Funciones",LANG_PROCEDURES_RETURN:"devuelve",LANG_PROCEDURES_RETURN_TOOLTIP:"Devuelve un valor",LANG_PROCEDURES_CALL_WITHOUT_DEFINITION:"Llamada a una función sin definición previa.",LANG_PROCEDURES_DEFNORETURN_HELPURL:"",LANG_PROCEDURES_DEFNORETURN_PROCEDURE:"func_sin_retorno",LANG_PROCEDURES_DEFNORETURN_DO:"ejecutar",LANG_PROCEDURES_DEFNORETURN_TOOLTIP:"Función que se ejecutará sin devolver nada.",LANG_PROCEDURES_DEFRETURN_HELPURL:"",LANG_PROCEDURES_DEFRETURN_PROCEDURE:"func_con_retorno",LANG_PROCEDURES_DEFRETURN_DO:"ejecutar",LANG_PROCEDURES_DEFRETURN_RETURN:"devuelve",LANG_PROCEDURES_DEFRETURN_TOOLTIP:"Función con valor de retorno.",LANG_PROCEDURES_DEF_DUPLICATE_WARNING:"Atención: Esta función tiene parámetros duplicados.",LANG_PROCEDURES_CALLNORETURN_HELPURL:"",LANG_PROCEDURES_CALLNORETURN_CALL:"ejecutar",LANG_PROCEDURES_CALLNORETURN_PROCEDURE:"func_sin_retorno",LANG_PROCEDURES_CALLNORETURN_TOOLTIP:"Ejecuta esta función.",LANG_PROCEDURES_CALLRETURN_HELPURL:"",LANG_PROCEDURES_CALLRETURN_CALL:"ejecutar",LANG_PROCEDURES_CALLRETURN_PROCEDURE:"func_con_retorno",LANG_PROCEDURES_CALLRETURN_TOOLTIP:"Ejecuta esta función que tiene valor de retorno.",LANG_PROCEDURES_MUTATORCONTAINER_Field:"parámetros",LANG_PROCEDURES_MUTATORARG_Field:"variable:",LANG_PROCEDURES_HIGHLIGHT_DEF:"Subraya la función",LANG_PROCEDURES_IFRETURN_TOOLTIP:"Si la condición es verdadera, la función devolverá este valor.",LANG_PROCEDURES_IFRETURN_WARNING:"Atención: Este bloque sólo puede ser usado dentro de una función que tenga valor de retorno.",LANG_CATEGORY_VARIABLES:"Variables",LANG_VARIABLES_CALL_WITHOUT_DEFINITION:"Esta variable no está declarada.",LANG_VARIABLES_GLOBAL:"Declarar variable GLOBAL",LANG_VARIABLES_GLOBAL_VOLATILE:"Declarar variable GLOBAL COMPARTIDA",LANG_VARIABLES_GLOBAL_TYPE:"de tipo ",LANG_VARIABLES_GLOBAL_EQUALS:"=",LANG_VARIABLES_GLOBAL_TOOLTIP:"Declara y define una variable GLOBAL de tipo entero (int) o texto (String).",LANG_VARIABLES_GLOBAL_TOOLTIP2:"Declara y define una variable GLOBAL del tipo indicado.",LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP:"Declara y define una variable GLOBAL compartida (para utilizan en tareas o interrupciones) del tipo indicado.",LANG_VARIABLES_LOCAL:"Declarar variable",LANG_VARIABLES_LOCAL_TYPE:"de tipo ",LANG_VARIABLES_LOCAL_EQUALS:"=",LANG_VARIABLES_LOCAL_TOOLTIP:"Declara y define una variable LOCAL de tipo entero (int) o texto (String).",LANG_VARIABLES_LOCAL_TOOLTIP2:"Declara y define una variable LOCAL del tipo indicado.",LANG_VARIABLES_DEFINE:"Definir variable ",LANG_VARIABLES_DEFINE_AS:"como",LANG_VARIABLES_DEFINE_TOOLTIP:"Definir el valor de una variable.",LANG_VARIABLES_SET:"Var",LANG_VARIABLES_SET_AS:"=",LANG_VARIABLES_SET_TOOLTIP:"Cambia el valor de una variable.",LANG_VARIABLES_GET:"Var",LANG_VARIABLES_GET_TOOLTIP:"Devuelve el valor de una variable",LANG_VARIABLES_PIN_ANALOG:"Pin analógico",LANG_VARIABLES_PIN_DIGITAL:"Pin digital",LANG_VARIABLES_PIN_PWM:"Pin PWM",LANG_VARIABLES_PIN_DIGITAL0:"CUIDADO: el pin digital 0 (pin Rx) es usado para escribir un programa en la placa desde el ordenador. Usarlo para conectar componentes puede dar problemas al programarla.",LANG_VARIABLES_PIN_TOOLTIP:"Selecciona el PIN deseado.",LANG_VARIABLES_TYPE_CHAR:"char",LANG_VARIABLES_TYPE_BYTE:"Octeto",LANG_VARIABLES_TYPE_BOOL:"Binario",LANG_VARIABLES_TYPE_FLOAT:"Decimal",LANG_VARIABLES_TYPE_INTEGER:"Entero",LANG_VARIABLES_TYPE_INTEGER_LONG:"Entero largo",LANG_VARIABLES_TYPE_STRING:"Texto",LANG_VARIABLES_TYPE_CHAR:"Carácter",LANG_CATEGORY_DISTANCE:"Distancia",LANG_CATEGORY_LIGHT:"Luz",LANG_CATEGORY_SOUND:"Sonido",LANG_ZUM_BUTTON:"Lee entrada digital pull-up",LANG_ZUM_BUTTON_PIN:"Pin",LANG_ZUM_BUTTON_TOOLTIP:"Lee una entrada en el modo pull-up",LANG_ZUM_FOLLOWER:"Sensor infrarrojo",LANG_ZUM_FOLLOWER_PIN_LEFT:"Pin izquierda",LANG_ZUM_FOLLOWER_PIN_RIGHT:"Pin derecha",LANG_ZUM_FOLLOWER_LEFT:"Izquierda",LANG_ZUM_FOLLOWER_RIGHT:"Derecha",LANG_ZUM_FOLLOWER_TOOLTIP:"Devuelve el valor digital del sensor infrarrojo zum",LANG_ZUM_INFRARED:"Sensor infrarrojo",LANG_ZUM_INFRARED_PIN:"Pin",LANG_ZUM_INFRARED_TOOLTIP:"Devuelve el valor digital del sensor infrarrojo zum",LANG_ZUM_LED:"LED",LANG_ZUM_LED_PIN:"Pin",LANG_ZUM_LED_ON:"Encender",LANG_ZUM_LED_OFF:"Apagar",LANG_ZUM_LED_TOOLTIP:"LED zum",LANG_ZUM_PHOTORESISTOR:"Sensor de Luz",LANG_ZUM_PHOTORESISTOR_PIN:"Pin",LANG_ZUM_PHOTORESISTOR_TOOLTIP:"Devuelve el valor analógico del sensor de luz (fotorresistencia).",LANG_ZUM_PIEZO_BUZZER:"Zumbador",LANG_ZUM_PIEZO_BUZZER_PIN:"Pin",LANG_ZUM_PIEZO_BUZZER_TONE:"Tono",LANG_ZUM_PIEZO_BUZZER_DO:"Do",LANG_ZUM_PIEZO_BUZZER_RE:"Re",LANG_ZUM_PIEZO_BUZZER_MI:"Mi",LANG_ZUM_PIEZO_BUZZER_FA:"Fa",LANG_ZUM_PIEZO_BUZZER_SOL:"Sol",LANG_ZUM_PIEZO_BUZZER_LA:"La",LANG_ZUM_PIEZO_BUZZER_SI:"Si",LANG_ZUM_PIEZO_BUZZER_DURATION:"Duración [ms]",LANG_ZUM_PIEZO_BUZZER_TOOLTIP:"Zumbador piezoeléctrico",LANG_ZUM_PIEZO_BUZZERAV:"Zumbador avanzado",LANG_ZUM_PIEZO_BUZZERAV_PIN:"Pin",LANG_ZUM_PIEZO_BUZZERAV_TONE:"Tono",LANG_ZUM_PIEZO_BUZZERAV_DURATION:"Duración [ms]",LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP:"Zumbador piezoeléctrico avanzado.",LANG_ZUM_POTENTIOMETER:"Potenciómetro",LANG_ZUM_POTENTIOMETER_PIN:"Pin",LANG_ZUM_POTENTIOMETER_TOOLTIP:"Potenciómetro zum.",LANG_CATEGORY_SERVO:"Servo",LANG_SERVO_CONT:"Motor CRS",LANG_SERVO_CONT_PIN:"Pin",LANG_SERVO_CONT_ROT:"Rot",LANG_SERVO_CONT_TURN_CLOCKWISE:"GIRAR EN SENTIDO HORARIO",LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE:"GIRAR EN SENTIDO ANTIHORARIO",LANG_SERVO_CONT_STOPPED:"DETENER",LANG_SERVO_CONT_DELAY:"Pausa [ms]",LANG_SERVO_CONT_TOOLTIP:"Servo de rotación continua.",LANG_SERVO_MOVE:"Servo",LANG_SERVO_MOVE_PIN:"Pin",LANG_SERVO_MOVE_DEGREES:"Grados (0~180)",LANG_SERVO_MOVE_DELAY:"Pausa [ms]",LANG_SERVO_MOVE_TOOLTIP:"Mover el servo entre 0 y 180 grados.",LANG_SERVO_WARNING:"No puedes asignar una variable al pin del servo",LANG_RELE:"Relé",LANG_RELE_PIN:"PIN",LANG_RELE_VALUE:"Valor",LANG_RELE_TOOLTIP:"Activa o desactiva el estado de un relé"};"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof window&&RoboBlocks&&RoboBlocks.locales.add&&RoboBlocks.locales.add("es-ES",e)}(),RoboBlocks.locales.initialize(),RoboBlocks.variables={},RoboBlocks.isVariable=function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return void 0!==RoboBlocks.variables[e]||(e.search("digitalRead\\(")>=0||e.search("analogRead\\(")>=0)},RoboBlocks.findPinMode=function(e){var o="";e=e.split(";\n");for(var _ in e)e[_].search("pinMode")>=0?o+=e[_]+";\n":e=e[_];return{code:o,pin:e}},RoboBlocks.LANG_COLOUR_DISTANCE="#D04141",RoboBlocks.LANG_COLOUR_SOUND="#CC7B44",RoboBlocks.LANG_COLOUR_SERVO="#CECE42",RoboBlocks.LANG_COLOUR_LCD="#ACCE42",RoboBlocks.LANG_COLOUR_CONTROL="#44CC44",RoboBlocks.LANG_COLOUR_LOGIC="#42CE91",RoboBlocks.LANG_COLOUR_MATH="#42CBCE",RoboBlocks.LANG_COLOUR_TEXT="#42A3CE",RoboBlocks.LANG_COLOUR_COMMUNICATION="#4263CE",RoboBlocks.LANG_COLOUR_ADVANCED="#9142CE",RoboBlocks.LANG_COLOUR_VARIABLES="#B244CC",RoboBlocks.LANG_COLOUR_PROCEDURES="#CE42B3",RoboBlocks.LANG_COLOUR_LIGHT="#FF8A00",RoboBlocks.LANG_COLOUR_AMBIENT="#99CCFF",RoboBlocks.LANG_COLOUR_HTML="#BDBDBD",RoboBlocks.setColors=function(e){RoboBlocks.LANG_COLOUR_DISTANCE=e[0],RoboBlocks.LANG_COLOUR_SOUND=e[1],RoboBlocks.LANG_COLOUR_SERVO=e[2],RoboBlocks.LANG_COLOUR_LCD=e[3],RoboBlocks.LANG_COLOUR_CONTROL=e[4],RoboBlocks.LANG_COLOUR_LOGIC=e[5],RoboBlocks.LANG_COLOUR_MATH=e[6],RoboBlocks.LANG_COLOUR_TEXT=e[7],RoboBlocks.LANG_COLOUR_COMMUNICATION=e[8],RoboBlocks.LANG_COLOUR_ADVANCED=e[9],RoboBlocks.LANG_COLOUR_VARIABLES=e[10],RoboBlocks.LANG_COLOUR_PROCEDURES=e[11],RoboBlocks.LANG_COLOUR_LIGHT=e[12],RoboBlocks.LANG_COLOUR_AMBIENT=e[13],RoboBlocks.LANG_COLOUR_HTML=e[14]};var profiles={arduino:{description:"Standard-compatible board",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"]],pwm:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"],["A6","A6"],["A7","A7"]],serial:9600},arduino_mega:{description:"Mega-compatible board"}};profiles.default=profiles.arduino,Blockly.createToolbox=function(){var e={};for(var o in this.Blocks)if(this.Blocks.hasOwnProperty(o)&&this.Blocks[o]instanceof Object&&this.Blocks[o].category){var _=this.Blocks[o].category;e[_]=e[_]||[],e[_].push(o)}var t='<xml id="toolbox" style="display: none">';for(o in e)e.hasOwnProperty(o)&&(t+='<category id="'+o+'" name="'+o+'">',e[o].forEach(function(e){t+='<block type="'+e+'"></block>'}),t+="</category>");return t+="</xml>"},Blockly.exportAllBlocks=function(){var e={},o=[],_=[],t=[];for(var l in this.Blocks)if(this.Blocks.hasOwnProperty(l)&&this.Blocks[l]instanceof Object&&this.Blocks[l].category){var i=this.Blocks[l].category;if(e[i]=e[i]||[],e[i].push(l),void 0!==this.Blocks[l]&&void 0!==this.Blocks[l].examples)for(example in this.Blocks[l].examples)""!==this.Blocks[l].examples[example]&&(t[this.Blocks[l].examples[example]]||(t[this.Blocks[l].examples[example]]=!0,_.push(this.Blocks[l].examples[example])))}else this.Blocks.hasOwnProperty(l)&&this.Blocks[l]instanceof Object&&o.push(l);var n,a="",s="file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/phantom_script.bat";makeTextFile=function(e){var o=new Blob([e],{type:"text/plain"});return null!==s&&window.URL.revokeObjectURL(s),s=window.URL.createObjectURL(o)};var r=function(e){a='<block type="'+e+'" deletable="true"></block>',n=e,console.log(e),document.getElementById("startBlocks").innerHTML=a,Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var o=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),_=o.width+20,t=o.height+20;A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_block.html?name="+n+" doc/"+roboblocksLanguage+"/img/"+n+".png "+_+" "+t+"\n",Blockly.getMainWorkspace().clear()},A="";for(l in e)e.hasOwnProperty(l)&&e[l].forEach(r);for(l in o){try{r(o[l])}catch(e){}document.getElementById("startBlocks").innerHTML="",Blockly.getMainWorkspace().clear()}for(example in _)!function(e){$.ajax({type:"GET",url:e,dataType:"xml",success:function(o){var _=(new XMLSerializer).serializeToString(o);_=(_=_.replace('<xml xmlns="http://www.w3.org/1999/xhtml">',"")).replace("</xml>",""),document.getElementById("startBlocks").innerHTML=_,Blockly.mainWorkspace.clear(),Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var t=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),l=t.width+20,i=t.height+20,n=e;n=(n=n.replace("bly","png")).replace("doc/examples/",""),A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_example.html?name="+e+" doc/"+roboblocksLanguage+"/img/"+n+" "+l+" "+i+"\n"},async:!1})}("doc/examples/"+_[example]);return window.open(makeTextFile(A),"_blank"),a},this.JST=this.JST||{},this.JST.advanced_conversion=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=value_num)?"":__t)+","+(null==(__t=convertion)?"":__t);return __p},this.JST.advanced_map=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="map("+(null==(__t=num)?"":__t)+","+(null==(__t=from_min)?"":__t)+","+(null==(__t=from_max)?"":__t)+","+(null==(__t=to_min)?"":__t)+","+(null==(__t=to_max)?"":__t)+")";return __p},this.JST.base_delay=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="delay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.base_map=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="map("+(null==(__t=value_num)?"":__t)+",0,1023,0,"+(null==(__t=value_dmax)?"":__t)+")";return __p},this.JST.base_millis=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="millis()\n";return __p},this.JST.bq_bat=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Distance("+(null==(__t=trigger_pin)?"":__t)+","+(null==(__t=echo_pin)?"":__t)+")";return __p},this.JST.bq_bat_definitions_distance=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="long Distance(int trigger_pin, int echo_pin)\n{\n  long microseconds = TP_init(trigger_pin, echo_pin);\n  long distance;\n  distance = microseconds/29/2;\n  if (distance == 0){\n    distance = 999;\n  }\n  return distance;\n}\n";return __p},this.JST.bq_bat_definitions_tp_init=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="//bqBAT\nlong TP_init(int trigger_pin, int echo_pin)\n{\n  digitalWrite(trigger_pin, LOW);\n  delayMicroseconds(2);\n  digitalWrite(trigger_pin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigger_pin, LOW);\n  long microseconds = pulseIn(echo_pin ,HIGH);\n  return microseconds;\n}\n";return __p},this.JST.bq_bat_setups_echo=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=echo_pin)?"":__t)+" , INPUT );\n";return __p},this.JST.bq_bat_setups_trigger=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=trigger_pin)?"":__t)+" , OUTPUT );\n";return __p},this.JST.bq_bluetooth_def_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <SoftwareSerial.h>";return __p},this.JST.bq_bluetooth_def_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n  pinMode("+(null==(__t=NextPIN)?"":__t)+", OUTPUT);\n  _blueToothSerial.begin("+(null==(__t=baud_rate)?"":__t)+");\n  _blueToothSerial.flush();\n";return __p},this.JST.bq_button=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_button_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT_PULLUP);\n";return __p},this.JST.bq_buttons=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="  adc_key_in =analogRead("+(null==(__t=dropdown_pin)?"":__t)+");\n  key = get_key(adc_key_in);\n  if (key != oldkey)\n  {\n    delay(50);\n    adc_key_in = analogRead("+(null==(__t=dropdown_pin)?"":__t)+");\n    key = get_key(adc_key_in);\n    if (key != oldkey)\n    {\n      oldkey = key;\n      if (key >=0){\n        switch(key)\n        {\n          case 0:\n           "+(null==(__t=code_btn1)?"":__t)+"\n          break;\n          case 1:\n           "+(null==(__t=code_btn2)?"":__t)+"\n          break;\n          case 2:\n           "+(null==(__t=code_btn3)?"":__t)+"\n          break;\n          case 3:\n           "+(null==(__t=code_btn4)?"":__t)+"\n          break;  \n          case 4:\n           "+(null==(__t=code_btn5)?"":__t)+"\n          break;\n        }      \n      }\n    }\n  }\n";return __p},this.JST.bq_buttons_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="int get_key(unsigned int input)\n  {\n    int k;\n    for (k = 0; k < NUM_KEYS; k++)\n    {\n      if (input < adc_key_val[k])\n      {\n        return k;\n      }\n    }\n    if (k >= NUM_KEYS)k = -1;\n      return k;\n}\n";return __p},this.JST.bq_buttons_definitions_variables=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="//bqButtons\nint adc_key_val[5] ={20,50, 100, 200, 600 };\nint NUM_KEYS = 5;\nint adc_key_in;\nint key=-1;\nint oldkey=-1;\n";return __p},this.JST.bq_infrared=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_infrared_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.bq_joystick=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="readJoystick_"+(null==(__t=name)?"":__t)+"()";return __p},this.JST.bq_joystick_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="int * readJoystick_"+(null==(__t=name)?"":__t)+"(){\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[0]=analogRead("+(null==(__t=pinx)?"":__t)+");\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[1]=analogRead("+(null==(__t=piny)?"":__t)+");\n  _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+"[2]=digitalRead("+(null==(__t=pinbutton)?"":__t)+");\n  return _internal_readJoystick_array_"+(null==(__t=name)?"":__t)+";\n}";return __p},this.JST.bq_joystick_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=pinbutton)?"":__t)+",INPUT_PULLUP);\n";return __p},this.JST.bq_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.bq_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.bq_photoresistor=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bq_piezo_buzzer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.bq_piezo_buzzerav=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=Buzztone)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n\n";return __p},this.JST.bq_potentiometer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.bt_serial_available=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if (_blueToothSerial.available()>0){\n"+(null==(__t=branch)?"":__t)+"\n}\n";return __p},this.JST.controls_doWhile=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="do {\n"+(null==(__t=branch)?"":__t)+"\n} while ("+(null==(__t=argument0)?"":__t)+");\n";return __p},this.JST.controls_execute=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=content)?"":__t)+"\n";return __p},this.JST.controls_else=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_elseif=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_if=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_setupLoop=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=branch)?"":__t)+"\n";return __p},this.JST.controls_whileUntil=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="while ("+(null==(__t=argument0)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.inout_analog_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_analog_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_analog_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=value_num)?"":__t)+");\n";return __p},this.JST.inout_analog_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_builtin_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite(13,"+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_builtin_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode(13,OUTPUT);\n";return __p},this.JST.inout_digital_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_digital_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_digital_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_digital_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_highlow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=bool_value)?"":__t;return __p},this.JST.lcd_clear=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.clear();\n";return __p},this.JST.lcd_def_declare=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="LiquidCrystal lcd("+(null==(__t=lcd_1)?"":__t)+", "+(null==(__t=lcd_2)?"":__t)+", "+(null==(__t=lcd_3)?"":__t)+", "+(null==(__t=lcd_4)?"":__t)+", "+(null==(__t=lcd_5)?"":__t)+", "+(null==(__t=lcd_6)?"":__t)+");\n";return __p},this.JST.lcd_def_definitions=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <Wire.h>\n#include <LiquidCrystal.h>";return __p},this.JST.lcd_def_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.begin(16, 2);\nlcd.clear();\n";return __p},this.JST.lcd_print=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.print("+(null==(__t=val)?"":__t)+");\n";return __p},this.JST.lcd_print_pos=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.setCursor("+(null==(__t=ycoor)?"":__t)+","+(null==(__t=xcoor)?"":__t)+");\nlcd.print("+(null==(__t=val)?"":__t)+");\n";return __p},this.JST.lcd_setBacklight=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="lcd.setBacklight("+(null==(__t=state)?"":__t)+");\n";return __p},this.JST.logic_compare=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.logic_negate=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="!"+(null==(__t=argument0)?"":__t);return __p},this.JST.logic_operation=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+""+(null==(__t=operator)?"":__t)+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic_pow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pow("+(null==(__t=argument0)?"":__t)+","+(null==(__t=argument1)?"":__t)+")";return __p},this.JST.math_modulo=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+"%"+(null==(__t=argument1)?"":__t);return __p},this.JST.math_random_bitOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned int bitOut(void)\n{\n  static unsigned long firstTime=1, prev=0;\n  unsigned long bit1=0, bit0=0, x=0, port=0, limit=99;\n  if (firstTime)\n  {\n    firstTime=0;\n    prev=analogRead(port);\n  }\n  while (limit--)\n  {\n    x=analogRead(port);\n    bit1=(prev!=x?1:0);\n    prev=x;\n    x=analogRead(port);\n    bit0=(prev!=x?1:0);\n    prev=x;\n    if (bit1!=bit0)\n      break;\n  }\n  return bit1;\n}\n";return __p},this.JST.math_random_seedOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned long seedOut(unsigned int noOfBits)\n{\n  unsigned long seed=0;\n  for (int i=0;i<noOfBits;++i)\n    seed = (seed<<1) | bitOut();\n  return seed;\n}\n";return __p},this.JST.math_random=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="random("+(null==(__t=value_num)?"":__t)+","+(null==(__t=value_dmax)?"":__t)+")";return __p},this.JST.procedures_callnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+");\n";return __p},this.JST.procedures_callreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+")";return __p},this.JST.procedures_defnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.procedures_defreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+"\n"+(null==(__t=returnValue)?"":__t)+" }\n";return __p},this.JST.serial_available=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if (Serial.available()>0){\n"+(null==(__t=branch)?"":__t)+"\n}\n";return __p},this.JST.serial_parseint=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.parseInt()\n";return __p},this.JST.serial_parseint_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_print=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.print("+(null==(__t=content)?"":__t)+");\n";return __p},this.JST.serial_print_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_println=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.println("+(null==(__t=content)?"":__t)+");\n";return __p},this.JST.serial_println_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.read()";return __p},this.JST.serial_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_readstring=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.readString()";return __p},this.JST.serial_readstring_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_special=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=char)?"":__t;return __p},this.JST.servo_move=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="servos["+(null==(__t=dropdown_pin)?"":__t)+"].write("+(null==(__t=value_degree)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.servo_move_definitions_include=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servos[13];";return __p},this.JST.servo_move_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="servos["+(null==(__t=dropdown_pin)?"":__t)+"].attach("+(null==(__t=dropdown_pin)?"":__t)+");";return __p},this.JST.text_equalsIgnoreCase=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".equalsIgnoreCase("+(null==(__t=string2)?"":__t)+")";return __p},this.JST.text_length=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+".length()";return __p},this.JST.text_substring=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".substring("+(null==(__t=from)?"":__t)+","+(null==(__t=to)?"":__t)+")";return __p},this.JST.variables_set=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=varName)?"":__t)+"="+(null==(__t=varValue)?"":__t)+";\n";return __p},this.JST.zum_button=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_button_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=pullup)?"":__t)+");\n";return __p},this.JST.zum_follower=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if(digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")==HIGH)\n{\n  "+(null==(__t=code_btn1)?"":__t)+"\n}\nif(digitalRead("+(null==(__t=NextPIN)?"":__t)+")==HIGH)\n{\n  "+(null==(__t=code_btn2)?"":__t)+"\n}\n";return __p},this.JST.zum_follower_setups_nextpin=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=NextPIN)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_follower_setups_pin=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_infrared=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_infrared_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode( "+(null==(__t=dropdown_pin)?"":__t)+" , INPUT);\n";return __p},this.JST.zum_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.zum_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.zum_photoresistor=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.zum_piezo_buzzer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n";return __p},this.JST.zum_piezo_buzzerav=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="tone("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=Buzztone)?"":__t)+","+(null==(__t=delay_time)?"":__t)+");\ndelay("+(null==(__t=delay_time)?"":__t)+");\n\n";return __p},this.JST.zum_potentiometer=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p};var JST=this.JST;Blockly.Arduino.procedures_callnoreturn=function(){var e,o=this.getFieldValue("PROCEDURES"),_=[],t="";try{for(var l=0;l<this.getVariables(o).length;l++)_[l]=Blockly.Arduino.valueToCode(this,"ARG"+l,Blockly.Arduino.ORDER_NONE)||"",t+=(e=RoboBlocks.findPinMode(_[l])).code,_[l]=e.pin}catch(e){}var i=_.join(", ");return t+=JST.procedures_callnoreturn({funcName:o,funcArgs:i})},Blockly.Blocks.procedures_callnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file = "doc/"+roboblocksLanguage+"/procedures_callnoreturn.html";$("#doc").load(file);});<\/script>',examples:["procedures_callnoreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLNORETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.setInputsInline(!1)},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length)}return e},getProcedures:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[];if(e[0].length>0)for(var _ in e[0]){var t=e[0][_][0];t=this.validName(t),o.push([t,t])}else o.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")]);return o},maxVariableNumber:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[],_=0;if(e[0].length>0||e[1].length>0){for(var t in e[0])e[0][t][1].length>_&&(_=e[0][t][1].length);return _}o.push(["",""])},getVariables:function(e){try{var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),_=[];if(o[0].length>0){for(var t in o[0])if(o[0][t][0]===e)return o[0][t][1]}else _.push(["",""])}catch(e){}},exists:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(e[0].length>0))return!1;for(var o in e[0])if(e[0][o][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(e){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(e){}},addVariables:function(){var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;if(e){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),e.length>=this.last_variables.length)o=e.length;else if(this.last_variables)try{o=this.last_variables.length}catch(e){}for(var _=0;_<o;_++)null===this.getInput("ARG"+_)?this.appendValueInput("ARG"+_).appendField(e[_],"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT):e[_]&&this.getFieldValue("ARG_NAME"+_)?this.setFieldValue(e[_],"ARG_NAME"+_):this.removeInput("ARG"+_);this.arguments_=e}},renameProcedure:function(e,o){if(this.last_procedure){var _=this.getProcedures();for(var t in _)Blockly.Names.equals(e,_[t][0])&&(this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.addVariables());this.last_procedure===e&&(this.last_procedure=o);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(e){}}},changeVariables:function(){for(var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;o<this.maxVariableNumber()&&null!==this.getInput("ARG"+o);o++)this.removeInput("ARG"+o);for(var _ in e)this.appendValueInput("ARG"+_).appendField(e[_]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=e},mutationToDom:function(){var e=document.createElement("mutation");e.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var o=0;o<this.arguments_.length;o++){var _=document.createElement("arg");_.setAttribute("name",this.arguments_[o]),e.appendChild(_)}return e},domToMutation:function(e){this.xmlElement=e;var o=e.getAttribute("name");this.last_procedure=o,this.setFieldValue(o,"PROCEDURES");for(var _=0;_<e.childNodes.length;_++)this.appendValueInput("ARG"+_).appendField(e.childNodes[_].getAttribute("name"),"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.procedures_callreturn=function(){for(var e,o=this.getFieldValue("PROCEDURES"),_=[],t="",l=0;l<this.getVariables(o).length;l++)_[l]=Blockly.Arduino.valueToCode(this,"ARG"+l,Blockly.Arduino.ORDER_NONE)||"null",t+=(e=RoboBlocks.findPinMode(_[l])).code,_[l]=e.pin;var i=_.join(", ");return t+=JST.procedures_callreturn({funcName:o,funcArgs:i}),[t,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.procedures_callreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file = "doc/"+roboblocksLanguage+"/procedures_callreturn.html";$("#doc").load(file);});<\/script>',examples:["procedures_callreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLRETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},getProcedures:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[];if(e[1].length>0)for(var _ in e[1]){var t=e[1][_][0];t=this.validName(t),o.push([t,t])}else o.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")]);return o},maxVariableNumber:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),o=[],_=0;if(e[1].length>0){for(var t in e[1])e[1][t][1].length>_&&(_=e[1][t][1].length);return _}o.push(["",""])},getVariables:function(e){try{var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),_=[];if(o[1].length>0){for(var t in o[1])if(o[1][t][0]===e)return o[1][t][1]}else _.push(["",""])}catch(e){}},exists:function(){var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(e[1].length>0))return!1;for(var o in e[1])if(e[1][o][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(e){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(e){}},addVariables:function(){var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;if(e){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),e.length>=this.last_variables.length)o=e.length;else if(this.last_variables)try{o=this.last_variables.length}catch(e){}for(var _=0;_<o;_++)null===this.getInput("ARG"+_)?this.appendValueInput("ARG"+_).appendField(e[_],"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT):e[_]&&this.getFieldValue("ARG_NAME"+_)?this.setFieldValue(e[_],"ARG_NAME"+_):this.removeInput("ARG"+_);this.arguments_=e}},renameProcedure:function(e,o){if(this.last_procedure){var _=this.getProcedures();for(var t in _)Blockly.Names.equals(e,_[t][0])&&(this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"));this.last_procedure===e&&(this.last_procedure=o);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(e){}}},changeVariables:function(){for(var e=this.getVariables(this.getFieldValue("PROCEDURES")),o=0;o<this.maxVariableNumber()&&null!==this.getInput("ARG"+o);o++)this.removeInput("ARG"+o);for(var _ in e)this.appendValueInput("ARG"+_).appendField(e[_]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=e},mutationToDom:function(){var e=document.createElement("mutation");e.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var o=0;o<this.arguments_.length;o++){var _=document.createElement("arg");_.setAttribute("name",this.arguments_[o]),e.appendChild(_)}return e},domToMutation:function(e){this.xmlElement=e;var o=e.getAttribute("name");this.last_procedure=o,this.setFieldValue(o,"PROCEDURES");for(var _=0;_<e.childNodes.length;_++)this.appendValueInput("ARG"+_).appendField(e.childNodes[_].getAttribute("name"),"ARG_NAME"+_).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.procedures_defnoreturn=function(){var e=this.getFieldValue("NAME"),o=Blockly.Arduino.statementToCode(this,"STACK");o=o.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o);var _=this.paramString,t=JST.procedures_defnoreturn({returnType:"void",funcName:e,args:_,branch:o});return t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[e]=t,null},Blockly.Blocks.procedures_defnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_defnoreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_callnoreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var e=new Blockly.FieldTextInput("",Blockly.Procedures.rename);e.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")).appendField(e,"NAME").appendField("","PARAMS"),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_TOOLTIP")),this.arguments_=[],this.type_arguments_=[],this.setStatements_(!0),this.setInputsInline(!1)},setStatements_:function(e){this.hasStatements_!==e&&(e?(this.appendStatementInput("STACK").appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_DO")),this.getInput("RETURN")&&this.moveInputBefore("STACK","RETURN")):this.removeInput("STACK",!0),this.hasStatements_=e)},updateParams_:function(){for(var e=!1,o={},_=0;_<this.arguments_.length;_++){if(o["arg_"+this.arguments_[_].toLowerCase()]){e=!0;break}o["arg_"+this.arguments_[_].toLowerCase()]=!0}e?this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEF_DUPLICATE_WARNING")):this.setWarningText(null);var t=[];for(var _ in this.arguments_)try{t.push(this.type_arguments_[_]+" "+this.arguments_[_])}catch(e){}this.paramString=t.join(", "),Blockly.Events.disable();try{this.setFieldValue(this.paramString,"PARAMS")}finally{Blockly.Events.enable()}},mutationToDom:function(e){var o=document.createElement("mutation");e&&o.setAttribute("name",this.getFieldValue("NAME"));for(var _=0;_<this.arguments_.length;_++){var t=document.createElement("arg_name");t.setAttribute("name",this.arguments_[_]),e&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[_]),o.appendChild(t),t=document.createElement("arg_type");try{t.setAttribute("name",this.type_arguments_[_]),e&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[_])}catch(e){}o.appendChild(t)}return this.hasStatements_||o.setAttribute("statements","false"),o},domToMutation:function(e){this.arguments_=[];for(var o,_=0;o=e.childNodes[_];_++)if("arg_name"===o.nodeName.toLowerCase()&&this.arguments_.push(o.getAttribute("name")),"arg_type"===o.nodeName.toLowerCase())try{this.type_arguments_.push(o.getAttribute("name"))}catch(e){}this.updateParams_(),Blockly.Procedures.mutateCallers(this),this.setStatements_("false"!==e.getAttribute("statements"))},decompose:function(e){var o=e.newBlock("procedures_mutatorcontainer");o.initSvg(),this.getInput("RETURN")?o.setFieldValue(this.hasStatements_?"TRUE":"FALSE","STATEMENTS"):o.getInput("STATEMENT_INPUT").setVisible(!1);for(var _=o.getInput("STACK").connection,t=0;t<this.arguments_.length;t++){var l=e.newBlock("procedures_mutatorarg");l.initSvg(),l.setFieldValue(this.type_arguments_[t],"TYPE"),l.setFieldValue(this.arguments_[t],"NAME"),l.oldLocation=t,_.connect(l.previousConnection),_=l.nextConnection}return Blockly.Procedures.mutateCallers(this),o},compose:function(e){this.arguments_=[],this.type_arguments_=[],this.paramIds_=[];for(var o=e.getInputTargetBlock("STACK");o;)this.arguments_.push(o.getFieldValue("NAME")),this.type_arguments_.push(o.getFieldValue("TYPE")),this.paramIds_.push(o.id),o=o.nextConnection&&o.nextConnection.targetBlock();this.updateParams_(),Blockly.Procedures.mutateCallers(this);var _=e.getFieldValue("STATEMENTS");if(null!==_&&(_="TRUE"==_,this.hasStatements_!=_))if(_)this.setStatements_(!0),Blockly.Mutator.reconnect(this.statementConnection_,this,"STACK"),this.statementConnection_=null;else{var t=this.getInput("STACK").connection;if(this.statementConnection_=t.targetConnection,this.statementConnection_){var l=t.targetBlock();l.unplug(),l.bumpNeighbours_()}this.setStatements_(!1)}},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!1]},getVars:function(){return this.arguments_},renameVar:function(e,o){for(var _=!1,t=0;t<this.arguments_.length;t++)Blockly.Names.equals(e,this.arguments_[t])&&(this.arguments_[t]=o,_=!0);if(_&&(this.updateParams_(),this.mutator.isVisible()))for(var l,i=this.mutator.workspace_.getAllBlocks(),t=0;l=i[t];t++)"procedures_mutatorarg"==l.type&&Blockly.Names.equals(e,l.getFieldValue("NAME"))&&l.setFieldValue(o,"NAME")},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(this.reserved_words=Blockly.Arduino.RESERVED_WORDS_.split(","),e===this.reserved_words[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},customContextMenu:function(e){var o={enabled:!0},_=this.getFieldValue("NAME");o.text=Blockly.Msg.PROCEDURES_CREATE_DO.replace("%1",_);var t=goog.dom.createDom("mutation");t.setAttribute("name",_);for(n=0;n<this.arguments_.length;n++){var l=goog.dom.createDom("arg");l.setAttribute("name",this.arguments_[n]),t.appendChild(l)}var i=goog.dom.createDom("block",null,t);if(i.setAttribute("type",this.callType_),o.callback=Blockly.ContextMenu.callbackFactory(this,i),e.push(o),!this.isCollapsed())for(var n=0;n<this.arguments_.length;n++){var o={enabled:!0},_=this.arguments_[n];o.text=Blockly.Msg.VARIABLES_SET_CREATE_GET.replace("%1",_);var a=goog.dom.createDom("field",null,_);a.setAttribute("name","VAR"),(i=goog.dom.createDom("block",null,a)).setAttribute("type","variables_get"),o.callback=Blockly.ContextMenu.callbackFactory(this,i),e.push(o)}},callType_:"procedures_callnoreturn",onchange:function(){if(this.last_procedure!==this.getFieldValue("NAME")){var e=this.getFieldValue("NAME");e=this.validName(e);try{this.setFieldValue(e,"NAME")}catch(e){}this.last_procedure=e}}},Blockly.Blocks.procedures_mutatorcontainer={init:function(){this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORCONTAINER_Field")),this.appendStatementInput("STACK"),this.appendDummyInput("STATEMENT_INPUT").appendField(Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS).appendField(new Blockly.FieldCheckbox("TRUE"),"STATEMENTS"),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1}},Blockly.Blocks.procedures_mutatorarg={init:function(){var e=new Blockly.FieldTextInput("x",this.validator_);this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORARG_Field")).appendField(new Blockly.FieldDropdown([["int","int"],["String","String"]]),"TYPE").appendField(e,"NAME"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1,e.onFinishEditing_=this.createNewVar_,e.onFinishEditing_("x")},onchange:function(){if(this.last_variable!==this.getFieldValue("NAME")){var e=this.getFieldValue("NAME");e=this.validName(e);try{this.setFieldValue(e,"NAME")}catch(e){}this.last_variable=e}},validName:Blockly.Blocks.procedures_defnoreturn.validName,validator_:function(e){return(e=e.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""))||null},createNewVar_:function(e){var o=this.sourceBlock_;o&&o.workspace&&o.workspace.options&&o.workspace.options.parentWorkspace&&o.workspace.options.parentWorkspace.createVariable(e)}},Blockly.Arduino.procedures_defreturn=function(){var e=this.getFieldValue("NAME"),o=Blockly.Arduino.statementToCode(this,"STACK");o=o.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o);var _=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"",t="";_=_.replace(/&quot;/g,'"');var l=this.getReturnType();if(_){var i=RoboBlocks.findPinMode(_);_=i.code,_+="  return "+i.pin+";\n"}var n=this.paramString;return t+=JST.procedures_defreturn({returnType:l,funcName:e,args:n,branch:o,returnValue:_}),t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[e]=t,null},Blockly.Blocks.procedures_defreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_defreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_callreturn_example.bly"],init:function(){var e=new Blockly.FieldTextInput("",Blockly.Procedures.rename);e.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")).appendField(e,"NAME").appendField("","PARAMS"),this.appendValueInput("RETURN").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_TOOLTIP")),this.arguments_=[],this.setStatements_(!0),this.statementConnection_=null},isVariable:function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return!1},getReturnType:function(){var e,o=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";o=RoboBlocks.findPinMode(o).pin;var _=!1;for(var t in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[t].search(o+" \\(")>=0){_=!0;break}if(o||(e="void"),o.search('"')>=0)e="String";else if(_)for(t in Blockly.Arduino.definitions_)Blockly.Arduino.definitions_[t].search(o)>=0&&(e="int"===Blockly.Arduino.definitions_[t].substring(0,3)||"//b"===Blockly.Arduino.definitions_[t].substring(0,3)?"int *"===Blockly.Arduino.definitions_[t].substring(0,5)||"int _"===Blockly.Arduino.definitions_[t].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[t].substring(0,3)?"String":"");else e=this.isVariable(o)?RoboBlocks.variables[o][0]:o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0?"int":o.search("readJoystick")>=0||"{"===o[0]?"int *":"void";return e},setStatements_:Blockly.Blocks.procedures_defnoreturn.setStatements_,updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,mutationToDom:Blockly.Blocks.procedures_defnoreturn.mutationToDom,domToMutation:Blockly.Blocks.procedures_defnoreturn.domToMutation,decompose:Blockly.Blocks.procedures_defnoreturn.decompose,compose:Blockly.Blocks.procedures_defnoreturn.compose,getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!0]},getVars:Blockly.Blocks.procedures_defnoreturn.getVars,renameVar:Blockly.Blocks.procedures_defnoreturn.renameVar,customContextMenu:Blockly.Blocks.procedures_defnoreturn.customContextMenu,callType_:"procedures_callreturn"},Blockly.Arduino.procedures_ifreturn=function(){var e=Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"",o="",_=RoboBlocks.findPinMode(e);o+=_.code,o+="if ("+(e=_.pin)+") {\n";var t=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return _=RoboBlocks.findPinMode(t),o+=_.code,o+="  return ("+t+");\n",o+="}\n"},Blockly.Blocks.procedures_ifreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_ifreturn.html"; $("#doc").load(file);});<\/script>',examples:["procedures_ifreturn_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendValueInput("CONDITION").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("value",Number(this.hasReturnValue_)),e},domToMutation:function(e){var o=e.getAttribute("value");this.hasReturnValue_=1===o},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("procedures_defreturn"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Arduino.procedures_return=function(){var e="",o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return e+=RoboBlocks.findPinMode(o).code,e+="  return ("+o+");\n"},Blockly.Blocks.procedures_return={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/procedures_return.html"; $("#doc").load(file);});<\/script>',examples:["procedures_return_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("value",Number(this.hasReturnValue_)),e},domToMutation:function(e){var o=e.getAttribute("value");this.hasReturnValue_=1===o},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("procedures_defreturn"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Arduino.base_delay=function(){var e=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,o+=JST.base_delay({delay_time:e})},Blockly.Blocks.base_delay={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_delay.html"; $("#doc").load(file);});<\/script>',examples:["base_delay_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_WAIT")).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_TOOLTIP"))}},Blockly.Arduino.advanced_map=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FROM_MIN",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"FROM_MAX",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"TO_MIN",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"TO_MAX",Blockly.Arduino.ORDER_NONE),i="",n=RoboBlocks.findPinMode(e);return i+=n.code,e=n.pin,n=RoboBlocks.findPinMode(o),i+=n.code,o=n.pin,n=RoboBlocks.findPinMode(_),i+=n.code,_=n.pin,n=RoboBlocks.findPinMode(t),i+=n.code,t=n.pin,n=RoboBlocks.findPinMode(l),i+=n.code,l=n.pin,i+=JST.advanced_map({num:e,from_min:o,from_max:_,to_min:t,to_max:l}),[i,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/advanced_map.html"; $("#doc").load(file);});<\/script>',examples:["advanced_map_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_MAP")).setCheck(Number),this.appendValueInput("FROM_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_FROM")).setCheck(Number),this.appendValueInput("FROM_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.appendValueInput("TO_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TO")).setCheck(Number),this.appendValueInput("TO_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TOOLTIP"))}},Blockly.Arduino.base_map=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.base_map({value_num:e,value_dmax:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_map.html"; $("#doc").load(file);});<\/script>',examples:["base_map_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_VALUE_TO")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_TOOLTIP"))}},Blockly.Arduino.base_us=function(){return["micros()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_us={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/base_us.html"; $("#doc").load(file);});<\/script>',examples:["base_us_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US_TOOLTIP"))}},Blockly.Arduino.controls_doWhile=function(){var e=Blockly.Arduino.valueToCode(this,"WHILE",Blockly.Arduino.ORDER_NONE)||"";e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.statementToCode(this,"DO");o=o.replace(/&quot;/g,'"');var _="";return Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),"UNTIL"===this.getFieldValue("MODE")&&(e.match(/^\w+$/)||(e="("+e+")"),e="!"+e),_+=JST.controls_doWhile({argument0:e,branch:o})},Blockly.Blocks.controls_doWhile={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_doWhile.html"; $("#doc").load(file);});<\/script>',examples:["controls_doWhile_example1.bly","controls_doWhile_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_OPERATOR_DO")),this.appendValueInput("WHILE").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_TOOLTIP"))}},Blockly.Arduino.controls_execute=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="";if(e=e.replace(/^"/,""),(e=e.replace(/"$/g,"")).match(/^#include /)){var _=JST.controls_execute({content:e});"define_include"in Blockly.Arduino.definitions_?Blockly.Arduino.definitions_.define_include+=_:Blockly.Arduino.definitions_.define_include=_}else o+=JST.controls_execute({content:e});return o},Blockly.Blocks.controls_execute={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_execute.html"; $("#doc").load(file);});<\/script>',examples:["controls_execute_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE_TOOLTIP"))}},Blockly.Arduino.controls_flow_statements=function(){switch(this.getFieldValue("FLOW")){case"BREAK":return"break;\n";case"CONTINUE":return"continue;\n"}throw"Unknown flow statement."},Blockly.Blocks.controls_flow_statements={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_flow_statements.html"; $("#doc").load(file);});<\/script>',examples:["controls_flow_statements_example1.bly","controls_flow_statements_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL);var e=new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK")||"BREAK","BREAK"],[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE")||"CONTINUE","CONTINUE"]]);this.appendDummyInput().appendField(e,"FLOW").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP")),this.setPreviousStatement(!0);var o=this;this.setTooltip(function(){var e=o.getFieldValue("FLOW");return Blockly.Blocks.controls_flow_statements.TOOLTIPS[e]})},onchange:function(){if(this.workspace){var e=!1,o=this;do{if("controls_repeat"===o.type||"controls_forEach"===o.type||"controls_for"===o.type||"controls_whileUntil"===o.type){e=!0;break}o=o.getSurroundParent()}while(o);if(e)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_WARNING"))}catch(e){console.log("Captured error: ",e)}}}},Blockly.Blocks.controls_flow_statements.TOOLTIPS={BREAK:RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"),CONTINUE:RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE")},Blockly.Arduino.controls_for=function(){var e=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",o=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"",_=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"",t=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(t=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+t);var l="",i=RoboBlocks.findPinMode(e);l+=i.code,e=i.pin,l+=(i=RoboBlocks.findPinMode(o)).code,o=i.pin,l+=(i=RoboBlocks.findPinMode(_)).code,_=i.pin;var n=parseFloat(o)<=parseFloat(_);return l+="for ("+e+" = "+o+"; "+e+(n?" <= ":" >= ")+_+"; "+e+(n?"++":"--")+") {\n"+t+"}\n"},Blockly.Blocks.controls_for={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_for.html"; $("#doc").load(file);});<\/script>',examples:["controls_for_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_WITH")),this.appendValueInput("FROM").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_FROM")),this.appendValueInput("TO").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_TO")),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0);var e=this;this.setTooltip(function(){return RoboBlocks.LANG_CONTROLS_FOR_TOOLTIP.replace("%1",e.getFieldValue("VAR"))})},getVars:function(){return[this.getFieldValue("VAR")]},getVariables:function(){var e=Blockly.Variables.allUsedVariables,o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},isVariable:function(e){for(var o in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[o]===e)return!0;return!1},onchange:function(){try{this.isVariable(Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ATOMIC))?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_FROM_WARNING")):this.isVariable(Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ATOMIC))?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_TO_WARNING")):this.setWarningText(null)}catch(e){}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")}},Blockly.Arduino.controls_if=function(){var e=0,o=Blockly.Arduino.valueToCode(this,"IF"+e,Blockly.Arduino.ORDER_NONE);o=o.replace(/&quot;/g,'"');var _=Blockly.Arduino.statementToCode(this,"DO"+e),t="",l=RoboBlocks.findPinMode(o);for(t+=l.code,o=l.pin,t+=JST.controls_if({argument:o,branch:_}),e=1;e<=this.elseifCount_;e++)o=Blockly.Arduino.valueToCode(this,"IF"+e,Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.statementToCode(this,"DO"+e),t+=JST.controls_elseif({argument:o,branch:_});return this.elseCount_&&(_=Blockly.Arduino.statementToCode(this,"ELSE"),t+=JST.controls_else({argument:o,branch:_})),_=_.replace(/&quot;/g,'"'),(t=t.replace(/&quot;/g,'"'))+"\n"},Blockly.Blocks.controls_if={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_if.html"; $("#doc").load(file);});<\/script>',examples:["controls_if_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendStatementInput("DO0").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));var e=this;this.setTooltip(function(){return e.elseifCount_||e.elseCount_?!e.elseifCount_&&e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_2"):e.elseifCount_&&!e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_3"):e.elseifCount_&&e.elseCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_4"):"":RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_1")}),this.elseifCount_=0,this.elseCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var e=document.createElement("mutation");return this.elseifCount_&&e.setAttribute("elseif",this.elseifCount_),this.elseCount_&&e.setAttribute("else",1),e},domToMutation:function(e){this.elseifCount_=window.parseInt(e.getAttribute("elseif"),10),this.elseCount_=window.parseInt(e.getAttribute("else"),10);for(var o=1;o<=this.elseifCount_;o++)this.appendValueInput("IF"+o).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSEIF")),this.appendStatementInput("DO"+o).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT);this.elseCount_&&this.appendStatementInput("ELSE").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSE")).setAlign(Blockly.ALIGN_RIGHT)},decompose:function(e){var o=Blockly.Block.obtain(e,"controls_if_if");o.initSvg();for(var _=o.getInput("STACK").connection,t=1;t<=this.elseifCount_;t++){var l=Blockly.Block.obtain(e,"controls_if_elseif");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}if(this.elseCount_){var i=Blockly.Block.obtain(e,"controls_if_else");i.initSvg(),_.connect(i.previousConnection)}return o},compose:function(e){this.elseCount_&&this.removeInput("ELSE"),this.elseCount_=0;for(var o=this.elseifCount_;o>0;o--)this.removeInput("IF"+o),this.removeInput("DO"+o);this.elseifCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){switch(_.type){case"controls_if_elseif":this.elseifCount_++;var t=this.appendValueInput("IF"+this.elseifCount_).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSEIF")),l=this.appendStatementInput("DO"+this.elseifCount_);l.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),_.valueConnection_&&t.connection.connect(_.valueConnection_),_.statementConnection_&&l.connection.connect(_.statementConnection_);break;case"controls_if_else":this.elseCount_++;var i=this.appendStatementInput("ELSE");i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_ELSE")).setAlign(Blockly.ALIGN_RIGHT),_.statementConnection_&&i.connection.connect(_.statementConnection_);break;default:throw"Unknown block type."}_=_.nextConnection&&_.nextConnection.targetBlock()}},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=1;o;){switch(o.type){case"controls_if_elseif":var t=this.getInput("IF"+_),l=this.getInput("DO"+_);o.valueConnection_=t&&t.connection.targetConnection,o.statementConnection_=l&&l.connection.targetConnection,_++;break;case"controls_if_else":l=this.getInput("ELSE"),o.statementConnection_=l&&l.connection.targetConnection;break;default:throw"Unknown block type."}o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.controls_if_if={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_Field_IF")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_else={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_Field_ELSE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.controls_setupLoop=function(){var e=Blockly.Arduino.statementToCode(this,"SETUP");e=e.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_int0_&&(e+=Blockly.Arduino.setups_.setup_int0_),Blockly.Arduino.setups_.X_SETUP=JST.controls_setupLoop({branch:e});var o=Blockly.Arduino.statementToCode(this,"LOOP");return o=o.replace(/&quot;/g,'"'),o=JST.controls_setupLoop({branch:o})},Blockly.Blocks.controls_setupLoop={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_setupLoop.html"; $("#doc").load(file);});<\/script>',examples:["controls_setupLoop_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("SETUP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE")),this.appendStatementInput("LOOP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE")),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_TOOLTIP"))}};var indentSentences=function(e){var o=e.split("\n"),_="";for(var t in o)_+="  "+o[t]+"\n";return _};return Blockly.Arduino.controls_switch=function(){var e=0,o=Blockly.Arduino.valueToCode(this,"IF0",Blockly.Arduino.ORDER_NONE)||"",_=Blockly.Arduino.statementToCode(this,"DO"+e);_=indentSentences(_);var t="",l=RoboBlocks.findPinMode(o);for(t+=l.code,t+="switch ("+(o=l.pin)+")\n{",e=1;e<=this.switchCount_;e++)o=Blockly.Arduino.valueToCode(this,"SWITCH"+e,Blockly.Arduino.ORDER_NONE)||"",_=Blockly.Arduino.statementToCode(this,"DO"+e),t+=" \n  case "+o+": \n  {\n"+(_=(_=indentSentences(_)).substring(0,_.length-1))+"  break;\n  }";return this.defaultCount_&&(_=Blockly.Arduino.statementToCode(this,"DEFAULT"),t+="  \n  default:\n  {\n"+(_=(_=indentSentences(_)).substring(0,_.length-1))+"}"),t+"\n}\n"},Blockly.Blocks.controls_switch={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_switch.html"; $("#doc").load(file);});<\/script>',examples:["controls_switch_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_switch_case","controls_switch_default"]));var e=this;this.setTooltip(function(){return e.switchCount_||e.defaultCount_?!e.switchCount_&&e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_2"):e.switchCount_&&!e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_3"):e.switchCount_&&e.defaultCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_4"):"":RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP_1")}),this.defaultCount_=0},mutationToDom:function(){if(!this.switchCount_&&!this.defaultCount_)return null;var e=document.createElement("mutation");return this.switchCount_&&e.setAttribute("case",this.switchCount_),this.defaultCount_&&e.setAttribute("default",1),e},domToMutation:function(e){this.switchCount_=window.parseInt(e.getAttribute("case"),10),this.defaultCount_=window.parseInt(e.getAttribute("default"),10);for(var o=1;o<=this.switchCount_;o++)this.appendValueInput("SWITCH"+o).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.appendStatementInput("DO"+o).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT);this.defaultCount_&&this.appendStatementInput("DEFAULT").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT)},decompose:function(e){var o=Blockly.Block.obtain(e,"controls_switch_switch");o.initSvg();for(var _=o.getInput("STACK").connection,t=1;t<=this.switchCount_;t++){var l=Blockly.Block.obtain(e,"controls_switch_case");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}if(this.defaultCount_){var i=Blockly.Block.obtain(e,"controls_switch_default");i.initSvg(),_.connect(i.previousConnection)}return o},compose:function(e){this.defaultCount_&&this.removeInput("DEFAULT"),this.defaultCount_=0;for(var o=this.switchCount_;o>0;o--)this.removeInput("SWITCH"+o),this.removeInput("DO"+o);this.switchCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){switch(_.type){case"controls_switch_case":var t;t=1===++this.switchCount_?RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_IS"):RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE");var l=this.appendValueInput("SWITCH"+this.switchCount_).setCheck(Number).appendField(t).setAlign(Blockly.ALIGN_RIGHT);this.setInputsInline(!0);var i=this.appendStatementInput("DO"+this.switchCount_);i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DO")).setAlign(Blockly.ALIGN_RIGHT),_.valueConnection_&&l.connection.connect(_.valueConnection_),_.statementConnection_&&i.connection.connect(_.statementConnection_);break;case"controls_switch_default":this.defaultCount_++;var n=this.appendStatementInput("DEFAULT");n.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),_.statementConnection_&&n.connection.connect(_.statementConnection_);break;default:throw"Unknown block type."}_=_.nextConnection&&_.nextConnection.targetBlock()}},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=1;o;){switch(o.type){case"controls_switch_case":var t=this.getInput("SWITCH"+_),l=this.getInput("DO"+_);o.valueConnection_=t&&t.connection.targetConnection,o.statementConnection_=l&&l.connection.targetConnection,_++;break;case"controls_switch_default":l=this.getInput("DEFAULT"),o.statementConnection_=l&&l.connection.targetConnection;break;default:throw"Unknown block type."}o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.controls_switch_switch={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK"),this.setTooltip("Switch"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_case={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Switch case"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_default={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0),this.setTooltip("Switch default"),this.contextMenu=!1}},Blockly.Arduino.controls_whileUntil=function(){var e=Blockly.Arduino.valueToCode(this,"BOOL",Blockly.Arduino.ORDER_NONE)||"";e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.statementToCode(this,"DO");o=o.replace(/&quot;/g,'"');var _="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),"UNTIL"===this.getFieldValue("MODE")&&(e.match(/^\w+$/)||(e="("+e+")"),e="!"+e),_+=JST.controls_whileUntil({argument0:e,branch:o})},Blockly.Blocks.controls_whileUntil={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/controls_whileUntil.html"; $("#doc").load(file);});<\/script>',examples:["controls_whileUntil_example.bly","controls_whileUntil1_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("MODE");return Blockly.Blocks.controls_whileUntil.TOOLTIPS[o]})}},Blockly.Blocks.controls_whileUntil.TOOLTIPS={WHILE:RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"),UNTIL:RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL")},Blockly.Arduino.inout_analog_read=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.inout_analog_read_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_analog_read"+e]=JST.inout_analog_read_setups({dropdown_pin:e}),o+=JST.inout_analog_read({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_analog_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_analog_read.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP"))}},Blockly.Arduino.inout_analog_write=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);_+=t.code,e=t.pin;var l=RoboBlocks.findPinMode(o);return _+=l.code,o=l.pin,RoboBlocks.isVariable(e)?_+=JST.inout_analog_write_setups({dropdown_pin:e,value_num:o}):Blockly.Arduino.setups_["setup_analog_write"+e]=JST.inout_analog_write_setups({dropdown_pin:e,value_num:o}),_+=JST.inout_analog_write({dropdown_pin:e,value_num:o})},Blockly.Blocks.inout_analog_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_analog_write.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_write_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE")).appendField(new Blockly.FieldImage("img/blocks/pwm_signal.png",24*options.zoom,24*options.zoom)),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_builtin_led=function(){var e=this.getFieldValue("STAT"),o="";return Blockly.Arduino.setups_.setup_green_led_13=JST.inout_builtin_led_setups({}),"TOGGLE"===e?o+="digitalWrite(13,!digitalRead(13));\n":o=JST.inout_builtin_led({dropdown_stat:e}),o},Blockly.Blocks.inout_builtin_led={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_builtin_led.html"; $("#doc").load(file);});<\/script>',examples:["inout_builtin_led_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED")).appendField(new Blockly.FieldImage("img/blocks/diode.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_STATE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_ON")||"ON","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_OFF")||"OFF","LOW"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOGGLE")||"TOGGLE","TOGGLE"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOOLTIP"))}},Blockly.Arduino.inout_digital_read=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.inout_digital_read_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_digital_read"+e]=JST.inout_digital_read_setups({dropdown_pin:e}),o+=JST.inout_digital_read({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_digital_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_read.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.setOutput(!0,Boolean),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP"))}},Blockly.Arduino.inout_digital_write=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"STAT",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,RoboBlocks.isVariable(e)?_+=JST.inout_digital_write_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_green_digital_write_"+e]=JST.inout_digital_write_setups({dropdown_pin:e}),_+=JST.inout_digital_write({dropdown_pin:e,dropdown_stat:o})},Blockly.Blocks.inout_digital_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_write.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendValueInput("STAT").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,null),this.setInputsInline(!0),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_digital_mode=function(){return"pinMode("+Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)+","+this.getFieldValue("MODE")+");"},Blockly.Blocks.inout_digital_mode={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_digital_mode.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_mode_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT")||"OUTPUT","OUTPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT")||"INPUT","INPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP")||"PULLUP","INPUT_PULLUP"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,null),this.setInputsInline(!0),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP"))}},Blockly.Arduino.inout_highlow=function(){var e=this.getFieldValue("BOOL");return[JST.inout_highlow({bool_value:e}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_highlow={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/inout_highlow.html"; $("#doc").load(file);});<\/script>',tags:["input","output"],examples:["inout_highlow_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_HIGH")||"HIGH","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_LOW")||"LOW","LOW"]]),"BOOL"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_TOOLTIP"))}},Blockly.Arduino.lcd_clear=function(){return JST.lcd_clear({})},Blockly.Blocks.lcd_clear={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_clear.html"; $("#doc").load(file);});<\/script>',examples:["lcd_clear_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_CLEAR")),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_CLEAR_TOOLTIP"))}},Blockly.Arduino.lcd_def=function(){var e={};return e.lcd_1=this.getFieldValue("LCD_1"),e.lcd_2=this.getFieldValue("LCD_2"),e.lcd_3=this.getFieldValue("LCD_3"),e.lcd_4=this.getFieldValue("LCD_4"),e.lcd_5=this.getFieldValue("LCD_5"),e.lcd_6=this.getFieldValue("LCD_6"),Blockly.Arduino.definitions_.define_lcd=JST.lcd_def_definitions({}),Blockly.Arduino.definitions_.declare_var_LCD=JST.lcd_def_declare(e),Blockly.Arduino.setups_.setup_lcd_=JST.lcd_def_setups({}),""},Blockly.Blocks.lcd_def={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_def.html"; $("#doc").load(file);});<\/script>',examples:["lcd_def_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_DEF")).appendField(new Blockly.FieldImage("img/blocks/lcd.png",52*options.zoom,24*options.zoom)),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PINS")).appendField(new Blockly.FieldTextInput("11"),"LCD_1").appendField(new Blockly.FieldTextInput("12"),"LCD_2").appendField(new Blockly.FieldTextInput("3"),"LCD_3").appendField(new Blockly.FieldTextInput("4"),"LCD_4").appendField(new Blockly.FieldTextInput("5"),"LCD_5").appendField(new Blockly.FieldTextInput("6"),"LCD_6"),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_DEF_TOOLTIP"))}},Blockly.Arduino.lcd_print=function(){var e=Blockly.Arduino.valueToCode(this,"VAL",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"XCOOR",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"YCOOR",Blockly.Arduino.ORDER_ATOMIC),t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,l=RoboBlocks.findPinMode(e),t+=l.code,e=l.pin,"TRUE"===this.getFieldValue("POS")?t+=JST.lcd_print_pos({val:e,xcoor:o,ycoor:_}):t+=JST.lcd_print({val:e}),t=t.replace(/&quot;/g,'"')},Blockly.Blocks.lcd_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),tags:["lcd","screen"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_print.html"; $("#doc").load(file);});<\/script>',examples:["lcd_print_example1.bly","lcd_print_example2.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendValueInput("VAL").appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT")),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT_POSITION")).appendField(new Blockly.FieldCheckbox("FALSE"),"POS").setAlign(Blockly.ALIGN_RIGHT),this.last_pos=this.getFieldValue("POS"),this.getPosition(),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_PRINT_TOOLTIP"))},getPosition:function(){try{this.removeInput("XCOOR"),this.removeInput("YCOOR")}catch(e){}"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField("row").setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField("column").setAlign(Blockly.ALIGN_RIGHT))},onchange:function(){this.getFieldValue("POS")!==this.last_pos&&(this.getPosition(),this.last_pos=this.getFieldValue("POS"))},mutationToDom:function(){var e=document.createElement("mutation");return"TRUE"===this.getFieldValue("POS")?e.setAttribute("fixed",!0):"FALSE"===this.getFieldValue("POS")&&e.setAttribute("fixed",!1),e},domToMutation:function(e){this.setFieldValue(e.getAttribute("fixed"),"POS"),"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField("row").setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField("column").setAlign(Blockly.ALIGN_RIGHT))}},Blockly.Arduino.lcd_setBacklight=function(){var e=this.getFieldValue("STATE");return JST.lcd_setBacklight({state:e})},Blockly.Blocks.lcd_setBacklight={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/lcd_setBacklight.html"; $("#doc").load(file);});<\/script>',tags:["lcd","screen"],examples:["lcd_setBacklight_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT")).appendField(new Blockly.FieldDropdown([["LOW","LOW"],["HIGH","HIGH"]]),"STATE").appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_CLOSE")),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_TOOLTIP"))}},Blockly.Arduino.logic_boolean=function(){return["TRUE"===this.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_boolean={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_boolean.html"; $("#doc").load(file);});<\/script>',examples:["logic_boolean_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendDummyInput().appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TRUE"),"TRUE"],[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_FALSE"),"FALSE"]]),"BOOL"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TOOLTIP"))}},Blockly.Arduino.logic_compare=function(){var e=this.getFieldValue("OP"),o=Blockly.Arduino.logic_compare.OPERATORS[e],_="=="===o||"!="===o?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,t=Blockly.Arduino.valueToCode(this,"A",_)||"",l=Blockly.Arduino.valueToCode(this,"B",_)||"",i="",n=RoboBlocks.findPinMode(t);return i+=n.code,t=n.pin,n=RoboBlocks.findPinMode(l),i+=n.code,l=n.pin,i+=JST.logic_compare({argument0:t,argument1:l,operator:o}),[i,_]},Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},Blockly.Blocks.logic_compare={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_compare.html"; $("#doc").load(file);});<\/script>',examples:["logic_compare_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A"),this.appendValueInput("B").appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.logic_compare.TOOLTIPS[o]})}},Blockly.Blocks.logic_compare.OPERATORS=[["=","EQ"],["≠","NEQ"],["<","LT"],["≤","LTE"],[">","GT"],["≥","GTE"]],Blockly.Blocks.logic_compare.TOOLTIPS={EQ:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_EQ"),NEQ:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_NEQ"),LT:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LT"),LTE:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LTE"),GT:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GT"),GTE:RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GTE")},Blockly.Arduino.logic_operation=function(){var e="",o="AND"===this.getFieldValue("OP")?"&&":"OR"===this.getFieldValue("OP")?"||":"",_="&&"===o?Blockly.Arduino.ORDER_LOGICAL_AND:"||"===o?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE,t=Blockly.Arduino.valueToCode(this,"A",_)||"",l=Blockly.Arduino.valueToCode(this,"B",_)||"",i=RoboBlocks.findPinMode(t);return e+=i.code,t=i.pin,i=RoboBlocks.findPinMode(l),e+=i.code,l=i.pin,"XOR"===this.getFieldValue("OP")?e+="((!("+t+"))&&("+l+")||((!("+l+"))&&("+t+")))":"XNOR"===this.getFieldValue("OP")?e+="(("+t+")&&("+l+")||((!("+l+"))&&(!("+t+"))))":"IMPLIES"===this.getFieldValue("OP")?e+="((!("+t+"))||("+l+"))":e+="("+t+") "+o+" ("+l+")",[e,_]},Blockly.Blocks.logic_operation={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_operation.html"; $("#doc").load(file);});<\/script>',examples:["logic_operation_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A").setCheck(Boolean),this.appendValueInput("B").setCheck(Boolean).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_AND")||"AND","AND"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")||"OR","OR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XOR")||"XOR","XOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XNOR")||"XNOR","XNOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_IMPLIES")||"IMPLIES","IMPLIES"]]),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.logic_operation.TOOLTIPS[o]})}},Blockly.Blocks.logic_operation.TOOLTIPS={AND:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_AND"),OR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_OR"),XOR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XOR"),XNOR:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XNOR"),IMPLIES:RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES")},Blockly.Arduino.logic_negate=function(){var e=Blockly.Arduino.ORDER_UNARY_PREFIX,o=Blockly.Arduino.valueToCode(this,"BOOL",e)||"false",_="",t=RoboBlocks.findPinMode(o);return _+=t.code,o=t.pin,_+=JST.logic_negate({argument0:o}),[_,e]},Blockly.Blocks.logic_negate={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/logic_negate.html"; $("#doc").load(file);});<\/script>',examples:["logic_negate_example.bly"],tags:["logic"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_INPUT_NOT")),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_TOOLTIP"))}},Blockly.Arduino.math_arithmetic=function(){var e=this.getFieldValue("OP"),o=Blockly.Arduino.math_arithmetic.OPERATORS[e],_=o[0],t=o[1],l=Blockly.Arduino.valueToCode(this,"A",t)||"",i=Blockly.Arduino.valueToCode(this,"B",t)||"",n="",a=RoboBlocks.findPinMode(l);return n+=a.code,l=a.pin,a=RoboBlocks.findPinMode(i),n+=a.code,i=a.pin,_?(n+=JST.math_arithmetic({argument0:l,argument1:i,operator:_}),[n,t]):(n=JST.math_arithmetic_pow({argument0:l,argument1:i}),[n,Blockly.Arduino.ORDER_UNARY_POSTFIX])},Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_arithmetic={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_arithmetic.html"; $("#doc").load(file);});<\/script>',examples:["math_arithmetic_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.math_arithmetic.TOOLTIPS[o]})}},Blockly.Blocks.math_arithmetic.OPERATORS=[["+","ADD"],["-","MINUS"],["×","MULTIPLY"],["÷","DIVIDE"],["^","POWER"]],Blockly.Blocks.math_arithmetic.TOOLTIPS={ADD:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_ADD"),MINUS:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MINUS"),MULTIPLY:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY"),DIVIDE:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE"),POWER:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_POWER")},Blockly.Arduino.math_modulo=function(){var e=Blockly.Arduino.valueToCode(this,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",o=Blockly.Arduino.valueToCode(this,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.math_modulo({argument0:e,argument1:o}),[_,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_modulo={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_modulo.html"; $("#doc").load(file);});<\/script>',examples:["math_arithmetic_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("DIVIDEND").setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_MODULO_INPUT_DIVIDEND")),this.appendValueInput("DIVISOR").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("%"),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_MODULO_TOOLTIP"))}},Blockly.Arduino.math_number=function(){var e=window.parseFloat(this.getFieldValue("NUM"));return[e,e<0?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_number.html"; $("#doc").load(file);});<\/script>',examples:["math_number_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM"),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_NUMBER_TOOLTIP"))}},Blockly.Blocks.math_number.validator=function(e){var o=window.parseFloat(e||0);return window.isNaN(o)?null:String(o)},Blockly.Arduino.math_random=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,Blockly.Arduino.definitions_.define_random_bitOut=JST.math_random_bitOut({}),Blockly.Arduino.definitions_.define_random_seedOut=JST.math_random_seedOut({}),Blockly.Arduino.setups_.setup_randomseed="unsigned long seed =seedOut(31);\n  randomSeed(seed);\n",_+=JST.math_random({value_num:e,value_dmax:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_random={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_random.html"; $("#doc").load(file);});<\/script>',examples:["math_random_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_AND")).setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_TOOLTIP"))}},Blockly.Arduino.math_to_number=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),o="";return o+="("+(this.getFieldValue("CAST")||"")+")("+e+")",[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_to_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_to_number.html"; $("#doc").load(file);});<\/script>',examples:["math_to_number_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"CAST"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST_TOOLTIP"))}},Blockly.Arduino.math_sinusoid=function(){var e=Blockly.Arduino.valueToCode(this,"AMPLITUDE",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FREQ",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"PHASE",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"OFFSET",Blockly.Arduino.ORDER_NONE);return["("+e+")*sin((6.28318530717959e-06)*(("+o+")*("+Blockly.Arduino.valueToCode(this,"TIME",Blockly.Arduino.ORDER_NONE)+"))+0.017453292519943*("+_+"))+("+t+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_sinusoid={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_sinusoid.html"; $("#doc").load(file);});<\/script>',examples:["math_sinusoid_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("AMPLITUDE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("FREQ").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_FREQ")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("PHASE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_PHASE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("OFFSET").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_OFFSET")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("TIME").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TIME")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TOOLTIP"))}},Blockly.Arduino.math_single=function(){var e,o,_=this.getFieldValue("OP"),t="";if("NEG"===_)return e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"",o=RoboBlocks.findPinMode(e),t+=o.code,"-"===(e=o.pin)[0]&&(e=" "+e),t+="-"+e,[t,Blockly.Arduino.ORDER_UNARY_PREFIX];"SIN"===_||"COS"===_||"TAN"===_?(e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,e=o.pin):"LOG10"===_?t="":(e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,e=o.pin);var l=3.14159;switch(_){case"ABS":t+="abs("+e+")";break;case"ROOT":t+="sqrt("+e+")";break;case"LN":t+="log("+e+")";break;case"EXP":t+="exp("+e+")";break;case"POW10":t+="pow(10,"+e+")";break;case"SIN":t+="sin("+e+" / 180 * "+l+")";break;case"COS":t+="cos("+e+" / 180 * "+l+")";break;case"TAN":t+="tan("+e+" / 180 * "+l+")"}if(t)return[t,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(_){case"LOG10":e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(o=RoboBlocks.findPinMode(e)).code,t+="log("+(e=o.pin)+") / log(10)";break;case"ASIN":t+="asin("+e+") / "+l+" * 180";break;case"ACOS":t+="acos("+e+") / "+l+" * 180";break;case"ATAN":t+="atan("+e+") / "+l+" * 180";break;default:throw"Unknown math operator: "+_}return[t,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_single={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/math_single.html"; $("#doc").load(file);});<\/script>',examples:["math_single_example.bly"],tags:["math"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("NUM").setCheck(Number).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ROOT")||"SQR ROOT","ROOT"],[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ABSOLUTE")||"ABS","ABS"],["-","NEG"],["ln","LN"],["log10","LOG10"],["e^","EXP"],["10^","POW10"]]),"OP");var e=this;this.setTooltip(function(){var o=e.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[o]})}},Blockly.Blocks.math_single.TOOLTIPS={ROOT:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ROOT"),ABS:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ABS"),NEG:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_NEG"),LN:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LN"),LOG10:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LOG10"),EXP:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_EXP"),POW10:RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_POW10")},Blockly.Arduino.pin_analog=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_analog={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_analog.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_read_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_ANALOG")).appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.pin_digital=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_digital={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_digital.html"; $("#doc").load(file);});<\/script>',examples:["inout_digital_read_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_DIGITAL")).appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.pin_pwm=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_pwm={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/pin_pwm.html"; $("#doc").load(file);});<\/script>',examples:["inout_analog_write_example.bly"],tags:["input","output"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/pwm_signal.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_PWM")).appendField(new Blockly.FieldDropdown(profiles.default.pwm),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.serial_available=function(){var e=Blockly.Arduino.statementToCode(this,"DO");return e=e.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_serial=JST.serial_parseint_setups({bitrate:profiles.default.serial}),JST.serial_available({branch:e})},Blockly.Blocks.serial_available={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_available.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_available_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT_INPUT_DO")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP"))}},Blockly.Arduino.serial_parseint=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_parseint_setups({bitrate:profiles.default.serial});return["Serial.parseInt()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_parseint={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_parseint.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["logic_operation_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP"))}},Blockly.Arduino.serial_print=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_print_setups({bitrate:profiles.default.serial}),o+=JST.serial_print({content:e})},Blockly.Blocks.serial_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_print.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_print_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT_TOOLTIP"))}},Blockly.Arduino.serial_println=function(){var e=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_println_setups({bitrate:profiles.default.serial}),o+=JST.serial_println({content:e})},Blockly.Blocks.serial_println={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_println.html"; $("#doc").load(file);});<\/script>',tags:["serial","communication"],examples:["serial_print_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP"))}},Blockly.Arduino.serial_read=function(){return Blockly.Arduino.setups_.setup_serial=JST.serial_read_setups({bitrate:profiles.default.serial}),[JST.serial_read({}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_read.html"; $("#doc").load(file);});<\/script>',examples:["serial_read_example.bly"],tags:["serial","communication"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ_TOOLTIP"))}},Blockly.Arduino.serial_readstring=function(){return Blockly.Arduino.setups_.setup_serial=JST.serial_readstring_setups({bitrate:profiles.default.serial}),[JST.serial_readstring({}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_readstring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_readstring.html"; $("#doc").load(file);});<\/script>',examples:["serial_readstring_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP"))}},Blockly.Arduino.advanced_conversion=function(){var e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),o="",_=RoboBlocks.findPinMode(e);o+=_.code,e=_.pin;var t=this.getFieldValue("CONV");return o+=JST.advanced_conversion({value_num:e,convertion:t}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_conversion={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/advanced_conversion.html"; $("#doc").load(file);});<\/script>',examples:["advanced_conversion_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_CONVERT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_DECIMAL")||"DEC","DEC"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_HEXADECIMAL")||"HEX","HEX"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_OCTAL")||"OCT","OCT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_BINARY")||"BIN","BIN"]]),"CONV"),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_VALUE")).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_TOOLTIP"))}},Blockly.Arduino.serial_timeout=function(){var e=Blockly.Arduino.valueToCode(this,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_.setup_serial_timeout="Serial.setTimeout("+e+");\n",""},Blockly.Blocks.serial_timeout={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),tags:["serial","communication"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_timeout.html"; $("#doc").load(file);});<\/script>',tags:["serial"],examples:["serial_read_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("TIMEOUT",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT")).appendField(new Blockly.FieldImage("img/blocks/usb.png",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP"))}},Blockly.Arduino.serial_special=function(){return["'"+this.getFieldValue("CHAR")+"'",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_special={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/serial_special.html"; $("#doc").load(file);});<\/script>',tags:["serial"],examples:["serial_special_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TAB")||"TAB","\\t"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN")||"CARRIAGE RETURN","\\r"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED")||"LINE FEED","\\n"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_QUOTE")||"QUOTE","\\'"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE")||"DOUBLE_QUOTE",'\\"']]),"CHAR"),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP"))}},Blockly.Arduino.text=function(){return[Blockly.Arduino.quote_(this.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text.html"; $("#doc").load(file);});<\/script>',examples:["controls_setupLoop_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField('"').appendField(new Blockly.FieldTextInput(""),"TEXT").appendField('"'),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_TEXT_TOOLTIP"))}},Blockly.Arduino.text_append=function(){var e=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",o=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=e+" += String("+o+");\n"},Blockly.Blocks.text_append={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_append.html"; $("#doc").load(file);});<\/script>',examples:["text_append_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TO")),this.appendValueInput("TEXT").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_APPENDTEXT")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},getVariables:function(){var e=Blockly.Variables.allUsedVariables,o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){}},Blockly.Arduino.text_equalsIgnoreCase=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE);e=e.replace(/&quot;/g,'"');var o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE);o=o.replace(/&quot;/g,'"');var _="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_+=JST.text_equalsIgnoreCase({string1:e,string2:o}),[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_equalsIgnoreCase={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_equalsIgnoreCase.html"; $("#doc").load(file);});<\/script>',examples:["text_equalsIgnoreCase_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_IS")),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_EQUAL")).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_QUESTION")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_TOOLTIP"))}},Blockly.Arduino.text_join=function(){var e,o="";if(0===this.itemCount_)return["''",Blockly.Arduino.ORDER_ATOMIC];if(1===this.itemCount_){var _=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return e=RoboBlocks.findPinMode(_),o+=e.code,_=e.pin,o+="String("+_+")",[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]}var t=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_NONE)||"";o=(e=RoboBlocks.findPinMode(t)).code;for(var l="String("+(t=e.pin),i=1;i<this.itemCount_;i++)t=Blockly.Arduino.valueToCode(this,"ADD"+i,Blockly.Arduino.ORDER_NONE)||"",o+=(e=RoboBlocks.findPinMode(t)).code,l+=") + String("+(t=e.pin);return o+=l+")",[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_join={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_join.html"; $("#doc").load(file);});<\/script>',examples:["text_join_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("ADD0").appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),this.appendValueInput("ADD1"),this.setOutput(!0,String),this.setMutator(new Blockly.Mutator(["text_create_join_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_TOOLTIP")),this.itemCount_=2},mutationToDom:function(){var e=document.createElement("mutation");return e.setAttribute("items",this.itemCount_),e},domToMutation:function(e){for(var o=0;o<this.itemCount_;o++)this.removeInput("ADD"+o);for(this.itemCount_=window.parseInt(e.getAttribute("items"),10),o=0;o<this.itemCount_;o++){var _=this.appendValueInput("ADD"+o);0===o&&_.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH"))}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},decompose:function(e){var o=Blockly.Block.obtain(e,"text_create_join_container");o.initSvg();for(var _=o.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var l=Blockly.Block.obtain(e,"text_create_join_item");l.initSvg(),_.connect(l.previousConnection),_=l.nextConnection}return o},compose:function(e){if(0===this.itemCount_)this.removeInput("EMPTY");else for(var o=this.itemCount_-1;o>=0;o--)this.removeInput("ADD"+o);this.itemCount_=0;for(var _=e.getInputTargetBlock("STACK");_;){var t=this.appendValueInput("ADD"+this.itemCount_);0===this.itemCount_&&t.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),_.valueConnection_&&t.connection.connect(_.valueConnection_),this.itemCount_++,_=_.nextConnection&&_.nextConnection.targetBlock()}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},saveConnections:function(e){for(var o=e.getInputTargetBlock("STACK"),_=0;o;){var t=this.getInput("ADD"+_);o.valueConnection_=t&&t.connection.targetConnection,_++,o=o.nextConnection&&o.nextConnection.targetBlock()}}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_Field_JOIN")),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TITLE_JOIN")),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.text_length=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,o+=JST.text_length({argument0:e}),[o,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_length={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_length.html"; $("#doc").load(file);});<\/script>',examples:["text_length_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck([String,Array]).appendField(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_INPUT_LENGTH")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_TOOLTIP"))}},Blockly.Arduino.text_substring=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_NONE),_=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_NONE),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,t+=JST.text_substring({string1:e,from:o,to:_}),[t,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_substring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_substring.html"; $("#doc").load(file);});<\/script>',examples:["text_substring_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING")),this.appendValueInput("FROM").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_FROM")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("TO").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TO")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TOOLTIP"))}},Blockly.Arduino.text_search=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),_=this.getFieldValue("POSITION"),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,t="FIRST"===_?o+".indexOf("+e+")":o+".lastIndexOf("+e+")",[t,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_search={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_search.html"; $("#doc").load(file);});<\/script>',examples:["text_search_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH")),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_IN")),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_TEXT_FIRST"),"FIRST"],[RoboBlocks.locales.getKey("LANG_TEXT_LAST"),"LAST"]]),"POSITION"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH_TOOLTIP"))}},Blockly.Arduino.text_contains=function(){var e=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),o=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="("+o+".indexOf("+e+")>0)",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_contains={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_contains.html"; $("#doc").load(file);});<\/script>',examples:["text_contains_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS")),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EXPRESSION")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS_TOOLTIP"))}},Blockly.Arduino.text_to_text=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),o=this.getFieldValue("CAST")||"",_="";return _+="char"==o?"("+o+")("+e+")":"String("+e+")",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_to_text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/text_to_text.html"; $("#doc").load(file);});<\/script>',examples:["text_to_text_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"]]),"CAST"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TOOLTIP"))}},Blockly.Arduino.variables_get=function(){var e=this.getFieldValue("VAR")||"";return void 0!==RoboBlocks.variables[this.getFieldValue("VAR")]&&(this.var_type=RoboBlocks.variables[this.getFieldValue("VAR")][0]),[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.variables_get={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_get.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("DUMMY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldVariable(" "),"VAR"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GET_TOOLTIP"))},getVariables:function(){var e=Blockly.Variables.allVariables(),o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var e=Blockly.Variables.allVariables();for(var o in e)if(Blockly.Variables.allVariables()[o]!==this.last_variables[o]){try{this.removeInput("DUMMY")}catch(e){}this.appendDummyInput("DUMMY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.setFieldValue(this.last_variable,"VAR"),this.last_variables=Blockly.Variables.allVariables()}try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(e){}}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},exists:function(){for(var e in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_global=function(){var e,o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t=!1,l=RoboBlocks.findPinMode(o);Blockly.Arduino.setups_["pinMode"+o]=l.code,o=l.pin;for(var i in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[i].search(o+" \\(")>=0){t=!0;break}if(o.search('"')>=0||o.search("substring\\(")>=0)e="String",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+"="+o+";";else if(t){for(i in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[i].search(o)>=0){e="int"===Blockly.Arduino.definitions_[i].substring(0,3)||"//b"===Blockly.Arduino.definitions_[i].substring(0,3)?"int *"===Blockly.Arduino.definitions_[i].substring(0,5)||"int _"===Blockly.Arduino.definitions_[i].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[i].substring(0,3)?"String":"",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n";break}}else"{"===o[0]?(e="int *",o=(o=(o=o.replace("{","")).replace("}","")).split(","),Blockly.Arduino.definitions_["declare_var"+_]=e+_+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+_]=_+"[0]="+o[0]+";\n  "+_+"[1]="+o[1]+";\n  "+_+"[2]="+o[2]+";\n"):this.isVariable(o)?(e=RoboBlocks.variables[o][0],Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):o.search("readJoystick")>=0?(e="int *",Blockly.Arduino.definitions_["declare_var"+_]=e+_+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+")?(e="int",isNaN(parseFloat(o))?(o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+"))&&(Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n"):Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+"="+o+";\n"):(e="unknown",Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n");return RoboBlocks.variables[_]=[e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.variables_global_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,Blockly.Arduino.definitions_["declare_var"+_]=e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n",RoboBlocks.variables[_]=[e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.variables_local=function(){var e,o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t="",l=!1,i=RoboBlocks.findPinMode(o);t+=i.code,o=i.pin;for(var n in Blockly.Arduino.definitions_)if(Blockly.Arduino.definitions_[n].search(o+" \\(")>=0){l=!0;break}if(o.search('"')>=0||o.search("substring\\(")>=0)t+=(e="String")+" "+_+"="+o+";\n";else if(l)for(n in Blockly.Arduino.definitions_)Blockly.Arduino.definitions_[n].search(o)>=0&&(t+=(e="int"===Blockly.Arduino.definitions_[n].substring(0,3)||"//b"===Blockly.Arduino.definitions_[n].substring(0,3)?"int *"===Blockly.Arduino.definitions_[n].substring(0,5)||"int _"===Blockly.Arduino.definitions_[n].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[n].substring(0,3)?"String":"")+" "+_+"="+o+";\n");else"{"===o[0]?(t+=(e="int *")+_+"=(int*)malloc(3*sizeof(int));\n",t+=_+"[0]="+(o=(o=(o=o.replace("{","")).replace("}","")).split(","))[0]+";\n"+_+"[1]="+o[1]+";\n"+_+"[2]="+o[2]+";\n"):this.isVariable(o)?t+=(e=RoboBlocks.variables[o][0])+" "+_+"="+o+";\n":o.search("readJoystick")>=0?(t+=(e="int *")+_+"=(int*)malloc(3*sizeof(int));\n",t+=_+"="+o+";\n"):o.search("analogRead")>=0||o.search("digitalRead")>=0||o.search("Distanc")>=0||!isNaN(parseFloat(o))||o.search("random")>=0||o.search("map")>=0||o.search("\\[")>=0||o.search("abs")>=0||o.search("sqrt")>=0||o.search("log")>=0||o.search("exp")>=0||o.search("pow")>=0||o.search("\\+")?t+=(e="int")+" "+_+"="+o+";\n":t+=(e="unknown")+" "+_+"="+o+";\n";return RoboBlocks.variables[_]=[e,"local"],RoboBlocks.variables["analogRead("+_+")"]=[e,"local"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"local"],t},Blockly.Blocks.variables_local={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_local.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:Blockly.Blocks.variables_global.isVariable,onchange:Blockly.Blocks.variables_global.onchange,validName:Blockly.Blocks.variables_global.validName},Blockly.Arduino.variables_local_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,t+=e+" "+_+"="+o+";\n",RoboBlocks.variables[_]=[e,"local"],RoboBlocks.variables["analogRead("+_+")"]=[e,"local"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"local"],t},Blockly.Blocks.variables_local_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_local_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:Blockly.Blocks.variables_global.isVariable,onchange:Blockly.Blocks.variables_global.onchange,validName:Blockly.Blocks.variables_global.validName},Blockly.Arduino.variables_set=function(){var e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"",o=this.getFieldValue("VAR")||"",_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,_+=JST.variables_set({varName:o,varValue:e})},Blockly.Blocks.variables_set={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_set.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldVariable(" "),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_TOOLTIP"))},getVariables:function(){var e=Blockly.Variables.allVariables(),o=[];if(e.length>0)for(var _ in e)o.push([e[_],e[_]]);else o.push(["",""]);return o},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var e=Blockly.Variables.allVariables();for(var o in e)if(Blockly.Variables.allVariables()[o]!==this.last_variables[o]){try{this.removeInput("VALUE"),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setFieldValue(this.last_variable,"VAR")}catch(e){}this.last_variables=Blockly.Variables.allVariables()}try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(e){}}},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setTitleValue(o,"VAR")},exists:function(){for(var e in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_global_volatile_type=function(){var e=this.getFieldValue("VAR_TYPE"),o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),_=this.getFieldValue("VAR")||"",_=this.getFieldValue("VAR")||"",t="",l=RoboBlocks.findPinMode(o);return t+=l.code,o=l.pin,Blockly.Arduino.definitions_["declare_var"+_]="volatile "+e+" "+_+";\n",Blockly.Arduino.setups_["define_var"+_]=_+"="+o+";\n",RoboBlocks.variables[_]=["volatile "+e,"global"],RoboBlocks.variables["analogRead("+_+")"]=[e,"global"],RoboBlocks.variables["digitalRead("+_+")"]=[e,"global"],""},Blockly.Blocks.variables_global_volatile_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/variables_global_volatile_type.html"; $("#doc").load(file);});<\/script>',tags:["variables"],examples:["variables_global_volatile_type_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(e,o){Blockly.Names.equals(e,this.getFieldValue("VAR"))&&this.setFieldValue(o,"VAR")},isVariable:function(e){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===e)return!0;return!1},validName:function(e){if(e&&e.length>0){for(var o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),o=0;o<e.length&&!isNaN(parseFloat(e[o]));)e=e.substring(1,e.length);for(var _ in Blockly.Arduino.RESERVED_WORDS_){if(e===Blockly.Arduino.RESERVED_WORDS_.split(",")[_]){this.setWarningText(RoboBlocks.locales.getKey("LANG_RESERVED_WORDS")),e="";break}this.setWarningText(null)}}return e},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var e=this.getFieldValue("VAR");e=this.validName(e);try{this.setFieldValue(e,"VAR")}catch(e){}this.last_variable=e}}},Blockly.Arduino.button=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}),o+=JST.bq_button({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/button.html"; $("#doc").load(file);});<\/script>',examples:["button_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.button_case=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);o+=_.code,e=_.pin,RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:"INPUT"});var t="",l="";return t+=Blockly.Arduino.statementToCode(this,"PRESSED"),l+=Blockly.Arduino.statementToCode(this,"NOT_PRESSED"),t=t.replace(/&quot;/g,'"'),l=l.replace(/&quot;/g,'"'),o+="if ("+JST.bq_button({dropdown_pin:e})+"==LOW){\n"+t+"\n}\nelse{\n"+l+"\n}\n"},Blockly.Blocks.button_case={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/button_case.html"; $("#doc").load(file);});<\/script>',examples:["button_case_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.appendStatementInput("PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_PRESSED")),this.appendStatementInput("NOT_PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_NOT_PRESSED")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.zum_button=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),o="",_=RoboBlocks.findPinMode(e);return o+=_.code,e=_.pin,pullup="INPUT_PULLUP",RoboBlocks.isVariable(e)?o+=JST.zum_button_setups({dropdown_pin:e,pullup:pullup}):Blockly.Arduino.setups_["setup_button_"+e]=JST.zum_button_setups({dropdown_pin:e,pullup:pullup}),o+=JST.zum_button({dropdown_pin:e}),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","button"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/zum_button.html"; $("#doc").load(file);});<\/script>',examples:["zum_button_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON")).appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)),this.appendDummyInput().appendField("pull-up?").appendField(new Blockly.FieldCheckbox("FALSE"),"PULLUP").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_TOOLTIP")),this.setInputsInline(!1)}},Blockly.Arduino.joystick_dir=function(){var e=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="57.295779513082320876798154814105*atan2((float)(analogRead("+e+")-512),(float)(analogRead("+o+")-512))",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_dir={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["joystick"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/joystick_dir.html"; $("#doc").load(file);});<\/script>',examples:["joystick_dir_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_DIR")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_TOOLTIP"))}},Blockly.Arduino.joystick_mag=function(){var e=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_ATOMIC),o=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_ATOMIC),_="",t=RoboBlocks.findPinMode(e);return _+=t.code,e=t.pin,t=RoboBlocks.findPinMode(o),_+=t.code,o=t.pin,_="min(100,0.1953125*sqrt(pow((float)(analogRead("+e+")-512),2)+pow((float)(analogRead("+o+")-512),2)))",[_,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_mag={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["joystick"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/joystick_mag.html"; $("#doc").load(file);});<\/script>',examples:["joystick_dir_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_MAG")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.png",24*options.zoom,24*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_TOOLTIP"))}},Blockly.Arduino.zum_piezo_buzzerav=function(){var e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",o=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),t="",l=RoboBlocks.findPinMode(e);return t+=l.code,e=l.pin,l=RoboBlocks.findPinMode(o),t+=l.code,o=l.pin,l=RoboBlocks.findPinMode(_),t+=l.code,_=l.pin,t+=JST.zum_piezo_buzzerav({dropdown_pin:e,Buzztone:o,delay_time:_})},Blockly.Blocks.zum_piezo_buzzerav={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SOUND"),tags:["buzzer"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/zum_piezo_buzzerav.html"; $("#doc").load(file);});<\/script>',examples:["zum_piezo_buzzerav_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SOUND),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV")).appendField(new Blockly.FieldImage("img/blocks/buzzer.png",52*options.zoom,35*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_PIN")),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_TONE")),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_DURATION")),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.locales.getKey("LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP"))}},Blockly.Arduino.dyor_31_in_1_rele=function(){var e="",o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ATOMIC),t=RoboBlocks.findPinMode(o);return e+=t.code,o=t.pin,RoboBlocks.isVariable(o)?e+=JST.inout_digital_write_setups({dropdown_pin:o}):Blockly.Arduino.setups_["setup_green_digital_write_"+o]=JST.inout_digital_write_setups({dropdown_pin:o}),e+=JST.inout_digital_write({dropdown_pin:o,dropdown_stat:_}),[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.dyor_31_in_1_rele={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),tags:["input","output","rele"],helpUrl:'<script>$(function(){var file="doc/"+roboblocksLanguage+"/dyor_31_in_1_rele.html"; $("#doc").load(file);});<\/script>',examples:["dyor_31_in_1_relay_example.bly"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_RELE")).appendField(new Blockly.FieldImage("img/blocks/relays.png",52*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_RELE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",24*options.zoom,24*options.zoom)).setCheck(Number),this.appendValueInput("VALUE",Boolean).setCheck(Boolean).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_RELE_VALUE")),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_RELE_TOOLTIP"))}},Blockly.Blocks}};if("function"==typeof define&&define.amd)return RoboBlocks;window.RoboBlocks=RoboBlocks});